(undo-tree-save-format-version . 1)
"66aaff930934b773be53eaef35dc39b1e74ea06c"
[nil nil nil nil (25737 28724 54002 0) 0 nil]
([nil nil ((1 . 3) (t . -1)) nil (25737 28724 53996 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2) (undo-tree-id1073 . -1) 3) nil (25737 28724 53987 0) 0 nil])
([nil nil ((2 . 4)) nil (25737 28724 53976 0) 0 nil])
([nil nil ((#("A'I'G'C" 0 7 (fontified t)) . -4) (undo-tree-id1069 . -7) (4 . 11) (#("A'I'G" 0 5 (fontified t)) . -4) (undo-tree-id1070 . -5) (4 . 9) (#("A'I" 0 3 (fontified t)) . -4) (undo-tree-id1071 . -3) (4 . 7) (#("A" 0 1 (fontified t)) . -4) (undo-tree-id1072 . -1) (4 . 5)) nil (25737 28724 53963 0) 0 nil])
([nil nil ((4 . 8)) nil (25737 28724 53935 0) 0 nil])
([nil nil ((#("shi'shen'me" 0 11 (fontified t)) . -6) (undo-tree-id1058 . -11) (6 . 17) (#("shi'shen'm" 0 10 (fontified t)) . -6) (undo-tree-id1059 . -10) (6 . 16) (#("shi'shen" 0 8 (fontified t)) . -6) (undo-tree-id1060 . -8) (6 . 14) (#("shi'she" 0 7 (fontified t)) . -6) (undo-tree-id1061 . -7) (6 . 13) (#("shi'sh" 0 6 (fontified t)) . -6) (undo-tree-id1062 . -6) (6 . 12) (#("shi's" 0 5 (fontified t)) . -6) (undo-tree-id1063 . -5) (6 . 11) (#("shi" 0 3 (fontified t)) . -6) (undo-tree-id1064 . -3) (6 . 9) (#("sh" 0 2 (fontified t)) . -6) (undo-tree-id1065 . -2) (6 . 8) (#("s" 0 1 (fontified t)) . -6) (undo-tree-id1066 . -1) (6 . 7) (#("G" 0 1 (fontified t)) . -6) (undo-tree-id1067 . -1) (#("C" 0 1 (fontified t)) . -7) (undo-tree-id1068 . -1) 8) nil (25737 28724 53908 0) 0 nil])
([nil nil ((6 . 9)) nil (25737 28724 53823 0) 0 nil])
([nil nil ((#("A'I'G'C" 0 7 (fontified t)) . -4) (undo-tree-id1049 . -7) (4 . 11) (#("A'I'G" 0 5 (fontified t)) . -4) (undo-tree-id1050 . -5) (4 . 9) (#("A'I" 0 3 (fontified t)) . -4) (undo-tree-id1051 . -3) (4 . 7) (#("A" 0 1 (fontified t)) . -4) (undo-tree-id1052 . -1) (4 . 5) (#("A" 0 1 (fontified t)) . -4) (undo-tree-id1053 . -1) (#("I" 0 1 (fontified t)) . -5) (undo-tree-id1054 . -1) (#("是" 0 1 (fontified t)) . -6) (undo-tree-id1055 . -1) (#("什" 0 1 (fontified t)) . -7) (undo-tree-id1056 . -1) (#("么" 0 1 (fontified t)) . -8) (undo-tree-id1057 . -1) 9) nil (25737 28724 53803 0) 0 nil])
([nil nil ((8 . 11) (#("shi'shen'me" 0 11 (fontified t)) . -8) (undo-tree-id1040 . -11) (8 . 19) (#("shi'shen'm" 0 10 (fontified t)) . -8) (undo-tree-id1041 . -10) (8 . 18) (#("shi'shen" 0 8 (fontified t)) . -8) (undo-tree-id1042 . -8) (8 . 16) (#("shi'she" 0 7 (fontified t)) . -8) (undo-tree-id1043 . -7) (8 . 15) (#("shi'sh" 0 6 (fontified t)) . -8) (undo-tree-id1044 . -6) (8 . 14) (#("shi's" 0 5 (fontified t)) . -8) (undo-tree-id1045 . -5) (8 . 13) (#("shi" 0 3 (fontified t)) . -8) (undo-tree-id1046 . -3) (8 . 11) (#("sh" 0 2 (fontified t)) . -8) (undo-tree-id1047 . -2) (8 . 10) (#("s" 0 1 (fontified t)) . -8) (undo-tree-id1048 . -1) (4 . 9)) nil (25737 28724 53736 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6) (undo-tree-id1029 . -1) (6 . 7) (#("G" 0 1 (fontified t)) . -6) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("C" 0 1 (fontified t)) . -7) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("是" 0 1 (fontified t)) . -8) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (#("什" 0 1 (fontified t)) . -9) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("么" 0 1 (fontified t)) . -10) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) 11) nil (25737 28724 53668 0) 0 nil])
([nil nil ((#("di'yi'tian" 0 10 (fontified t)) . -1) (undo-tree-id1020 . -10) (1 . 11) (#("di'yi'tian" 0 10 (fontified t)) . -1) (undo-tree-id1021 . -10) (1 . 11) (#("di'yi'ti" 0 8 (fontified t)) . -1) (undo-tree-id1022 . -8) (1 . 9) (#("di'yi't" 0 7 (fontified t)) . -1) (undo-tree-id1023 . -7) (1 . 8) (#("di'yi" 0 5 (fontified t)) . -1) (undo-tree-id1024 . -5) (1 . 6) (#("di'y" 0 4 (fontified t)) . -1) (undo-tree-id1025 . -4) (1 . 5) (#("di" 0 2 (fontified t)) . -1) (undo-tree-id1026 . -2) (1 . 3) (#("d" 0 1 (fontified t)) . -1) (undo-tree-id1027 . -1) (1 . 2) (#("d" 0 1 (fontified t)) . -1) (undo-tree-id1028 . -1) (1 . 2) 2) nil (25737 28724 53564 0) 0 nil])
([nil nil ((7 . 9) (#("sao'mang" 0 8 (fontified t)) . -7) (undo-tree-id1006 . -8) (7 . 15) (#("sao'man" 0 7 (fontified t)) . -7) (undo-tree-id1007 . -7) (7 . 14) (#("sao'ma" 0 6 (fontified t)) . -7) (undo-tree-id1008 . -6) (7 . 13) (#("sao'm" 0 5 (fontified t)) . -7) (undo-tree-id1009 . -5) (7 . 12) (#("sao" 0 3 (fontified t)) . -7) (undo-tree-id1010 . -3) (7 . 10) (#("sa" 0 2 (fontified t)) . -7) (undo-tree-id1011 . -2) (7 . 9) (#("s" 0 1 (fontified t)) . -7) (undo-tree-id1012 . -1) (5 . 8) (#("meng'xin" 0 8 (fontified t)) . -5) (undo-tree-id1013 . -8) (5 . 13) (#("meng'xi" 0 7 (fontified t)) . -5) (undo-tree-id1014 . -7) (5 . 12) (#("meng'x" 0 6 (fontified t)) . -5) (undo-tree-id1015 . -6) (5 . 11) (#("meng" 0 4 (fontified t)) . -5) (undo-tree-id1016 . -4) (5 . 9) (#("meng" 0 4 (fontified t)) . -5) (undo-tree-id1017 . -4) (5 . 9) (#("me" 0 2 (fontified t)) . -5) (undo-tree-id1018 . -2) (5 . 7) (#("m" 0 1 (fontified t)) . -5) (undo-tree-id1019 . -1) (1 . 6)) nil (25737 28724 53399 0) 0 nil])
([nil nil ((9 . 11)) nil (25737 28724 53248 0) 0 nil])
([nil nil ((#("shi'shen'me" 0 11 (fontified t)) . -16) (undo-tree-id992 . -11) (16 . 27) (#("shi'shen'm" 0 10 (fontified t)) . -16) (undo-tree-id993 . -10) (16 . 26) (#("shi'shen" 0 8 (fontified t)) . -16) (undo-tree-id994 . -8) (16 . 24) (#("shi'she" 0 7 (fontified t)) . -16) (undo-tree-id995 . -7) (16 . 23) (#("shi'sh" 0 6 (fontified t)) . -16) (undo-tree-id996 . -6) (16 . 22) (#("shi's" 0 5 (fontified t)) . -16) (undo-tree-id997 . -5) (16 . 21) (#("shi" 0 3 (fontified t)) . -16) (undo-tree-id998 . -3) (16 . 19) (#("sh" 0 2 (fontified t)) . -16) (undo-tree-id999 . -2) (16 . 18) (#("s" 0 1 (fontified t)) . -16) (undo-tree-id1000 . -1) (16 . 17) (#("s" 0 1 (fontified t)) . -16) (undo-tree-id1001 . -1) (16 . 17) (#("sh" 0 2 (fontified t)) . -16) (undo-tree-id1002 . -2) (16 . 18) (#("shi" 0 3 (fontified t)) . -16) (undo-tree-id1003 . -3) (16 . 19) (#("sh" 0 2 (fontified t)) . -16) (undo-tree-id1004 . -2) (16 . 18) (#("s" 0 1 (fontified t)) . -16) (undo-tree-id1005 . -1) (16 . 17) 15) nil (25737 28724 53202 0) 0 nil])
([nil nil ((16 . 20)) nil (25737 28724 52984 0) 0 nil])
([nil nil ((20 . 21)) nil (25737 28724 52974 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -24) (undo-tree-id991 . -1) (21 . 25)) nil (25737 28724 52961 0) 0 nil])
([nil nil ((24 . 26)) nil (25737 28724 52927 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -22) (undo-tree-id984 . -1) (#(" " 0 1 (fontified t)) . -23) (undo-tree-id985 . -1) (#("a" 0 1 (fontified t)) . -24) (undo-tree-id986 . -1) (24 . 25) (#("a" 0 1 (fontified t)) . -24) (undo-tree-id987 . -1) (24 . 25) (#("a" 0 1 (fontified t)) . -24) (undo-tree-id988 . -1) (24 . 25) (#("a" 0 1 (fontified t)) . -24) (undo-tree-id989 . -1) (#("。" 0 1 (fontified t)) . -25) (undo-tree-id990 . -1) 26) nil (25737 28724 52895 0) 0 nil])
([nil nil ((22 . 24)) nil (25737 28724 52818 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -21) (undo-tree-id981 . -1) (#(" " 0 1 (fontified t)) . -22) (undo-tree-id982 . -1) (#(" " 0 1 (fontified t)) . -23) (undo-tree-id983 . -1) 24) nil (25737 28724 52800 0) 0 nil])
([nil nil ((#("a)" 0 2 (fontified t)) . -24) (undo-tree-id977 . -2) (undo-tree-id978 . 1) (undo-tree-id979 . -2) (24 . 26) (#("a" 0 1 (fontified t)) . -24) (undo-tree-id980 . -1) (21 . 25)) nil (25737 28724 52755 0) 0 nil])
([nil nil ((24 . 26)) nil (25737 28724 52697 0) 0 nil])
([nil nil ((26 . 27)) nil (25737 28724 52686 0) 0 nil])
([nil nil ((#("ren'lei" 0 7 (fontified t)) . -27) (undo-tree-id971 . -7) (27 . 34) (#("ren'le" 0 6 (fontified t)) . -27) (undo-tree-id972 . -6) (27 . 33) (#("ren'l" 0 5 (fontified t)) . -27) (undo-tree-id973 . -5) (27 . 32) (#("ren" 0 3 (fontified t)) . -27) (undo-tree-id974 . -3) (27 . 30) (#("r'e" 0 3 (fontified t)) . -27) (undo-tree-id975 . -3) (27 . 30) (#("r" 0 1 (fontified t)) . -27) (undo-tree-id976 . -1) (27 . 28)) nil (25737 28724 52655 0) 0 nil])
([nil nil ((35 . 37) (#("ren'zhi" 0 7 (fontified t)) . -35) (undo-tree-id949 . -7) (35 . 42) (#("ren'zh" 0 6 (fontified t)) . -35) (undo-tree-id950 . -6) (35 . 41) (#("ren'z" 0 5 (fontified t)) . -35) (undo-tree-id951 . -5) (35 . 40) (#("ren" 0 3 (fontified t)) . -35) (undo-tree-id952 . -3) (35 . 38) (#("re" 0 2 (fontified t)) . -35) (undo-tree-id953 . -2) (35 . 37) (#("r" 0 1 (fontified t)) . -35) (undo-tree-id954 . -1) (33 . 36) (#("ji'qi" 0 5 (fontified t)) . -33) (undo-tree-id955 . -5) (33 . 38) (#("ji'q" 0 4 (fontified t)) . -33) (undo-tree-id956 . -4) (33 . 37) (#("ji" 0 2 (fontified t)) . -33) (undo-tree-id957 . -2) (33 . 35) (#("j" 0 1 (fontified t)) . -33) (undo-tree-id958 . -1) (31 . 34) (#("v's" 0 3 (fontified t)) . -31) (undo-tree-id959 . -3) (31 . 34) (#("v's" 0 3 (fontified t)) . -31) (undo-tree-id960 . -3) (29 . 34) (#("ren'zhi" 0 7 (fontified t)) . -29) (undo-tree-id961 . -7) (29 . 36) (#("ren'zh" 0 6 (fontified t)) . -29) (undo-tree-id962 . -6) (29 . 35) (#("ren'zhe" 0 7 (fontified t)) . -29) (undo-tree-id963 . -7) (29 . 36) (#("ren'zhen" 0 8 (fontified t)) . -29) (undo-tree-id964 . -8) (29 . 37) (#("ren'zhe" 0 7 (fontified t)) . -29) (undo-tree-id965 . -7) (29 . 36) (#("ren'zh" 0 6 (fontified t)) . -29) (undo-tree-id966 . -6) (29 . 35) (#("ren'z" 0 5 (fontified t)) . -29) (undo-tree-id967 . -5) (29 . 34) (#("ren" 0 3 (fontified t)) . -29) (undo-tree-id968 . -3) (29 . 32) (#("r'e" 0 3 (fontified t)) . -29) (undo-tree-id969 . -3) (29 . 32) (#("r" 0 1 (fontified t)) . -29) (undo-tree-id970 . -1) (27 . 30)) nil (25737 28724 52423 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -41) (undo-tree-id948 . -1) (37 . 42)) nil (25737 28724 52000 0) 0 nil])
([nil nil ((41 . 43)) nil (25737 28724 51925 0) 0 nil])
([nil nil ((43 . 44)) nil (25737 28724 51919 0) 0 nil])
([nil nil ((#("si'xiang" 0 8 (fontified t)) . -44) (undo-tree-id941 . -8) (44 . 52) (#("si'xian" 0 7 (fontified t)) . -44) (undo-tree-id942 . -7) (44 . 51) (#("si'xia" 0 6 (fontified t)) . -44) (undo-tree-id943 . -6) (44 . 50) (#("si'xi" 0 5 (fontified t)) . -44) (undo-tree-id944 . -5) (44 . 49) (#("si'x" 0 4 (fontified t)) . -44) (undo-tree-id945 . -4) (44 . 48) (#("si" 0 2 (fontified t)) . -44) (undo-tree-id946 . -2) (44 . 46) (#("s" 0 1 (fontified t)) . -44) (undo-tree-id947 . -1) (44 . 45)) nil (25737 28724 51900 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -46) (undo-tree-id938 . -1) (46 . 47) (#("v's" 0 3 (fontified t)) . -46) (undo-tree-id939 . -3) (46 . 49) (#("v" 0 1 (fontified t)) . -46) (undo-tree-id940 . -1) (44 . 47)) nil (25737 28724 51843 0) 0 nil])
([nil nil ((#("si'kao" 0 6 (fontified t)) . -44) (undo-tree-id931 . -6) (44 . 50) (#("si'ka" 0 5 (fontified t)) . -44) (undo-tree-id932 . -5) (44 . 49) (#("si'k" 0 4 (fontified t)) . -44) (undo-tree-id933 . -4) (44 . 48) (#("si" 0 2 (fontified t)) . -44) (undo-tree-id934 . -2) (44 . 46) (#("s" 0 1 (fontified t)) . -44) (undo-tree-id935 . -1) (44 . 45) (#("思" 0 1 (fontified t)) . -44) (undo-tree-id936 . -1) (#("想" 0 1 (fontified t)) . -45) (undo-tree-id937 . -1) 46) nil (25737 28724 51810 0) 0 nil])
([nil nil ((46 . 48) (#("v's" 0 3 (fontified t)) . -46) (undo-tree-id929 . -3) (46 . 49) (#("v" 0 1 (fontified t)) . -46) (undo-tree-id930 . -1) (44 . 47)) nil (25737 28724 51764 0) 0 nil])
([nil nil ((#("si'wi" 0 5 (fontified t)) . -44) (undo-tree-id921 . -5) (44 . 49) (#("si'w" 0 4 (fontified t)) . -44) (undo-tree-id922 . -4) (44 . 48) (#("si" 0 2 (fontified t)) . -44) (undo-tree-id923 . -2) (44 . 46) (#("s" 0 1 (fontified t)) . -44) (undo-tree-id924 . -1) (44 . 45) (#("思" 0 1 (fontified t)) . -44) (undo-tree-id925 . -1) (#("考" 0 1 (fontified t)) . -45) (undo-tree-id926 . -1) (#("v" 0 1 (fontified t)) . -46) (undo-tree-id927 . -1) (#("s" 0 1 (fontified t)) . -47) (undo-tree-id928 . -1) 48) nil (25737 28724 51734 0) 0 nil])
([nil nil ((44 . 46)) nil (25737 28724 51686 0) 0 nil])
([nil nil ((#("私" 0 1 (fontified t)) . -44) (undo-tree-id919 . -1) (#("我" 0 1 (fontified t)) . -45) (undo-tree-id920 . -1) 46) nil (25737 28724 51678 0) 0 nil])
([nil nil ((45 . 48) (#("hei'he" 0 6 (fontified t)) . -45) (undo-tree-id914 . -6) (45 . 51) (#("hei'h" 0 5 (fontified t)) . -45) (undo-tree-id915 . -5) (45 . 50) (#("hei" 0 3 (fontified t)) . -45) (undo-tree-id916 . -3) (45 . 48) (#("he" 0 2 (fontified t)) . -45) (undo-tree-id917 . -2) (45 . 47) (#("h" 0 1 (fontified t)) . -45) (undo-tree-id918 . -1) (44 . 46)) nil (25737 28724 51654 0) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -46) (undo-tree-id905 . -1) (46 . 47) (#("he" 0 2 (fontified t)) . -46) (undo-tree-id906 . -2) (46 . 48) (#("he'z" 0 4 (fontified t)) . -46) (undo-tree-id907 . -4) (46 . 50) (#("h'e'z'i" 0 7 (fontified t)) . -46) (undo-tree-id908 . -7) (46 . 53) (#("he'z" 0 4 (fontified t)) . -46) (undo-tree-id909 . -4) (46 . 50) (#("he" 0 2 (fontified t)) . -46) (undo-tree-id910 . -2) (46 . 48) (#("h" 0 1 (fontified t)) . -46) (undo-tree-id911 . -1) (46 . 47) (#("河" 0 1 (fontified t)) . -46) (undo-tree-id912 . -1) (#("”" 0 1 (fontified t)) . -47) (undo-tree-id913 . -1) 48) nil (25737 28724 51604 0) 0 nil])
([nil nil ((#("hei'he" 0 6 (fontified t)) . -44) (undo-tree-id882 . -6) (44 . 50) (#("hei'h" 0 5 (fontified t)) . -44) (undo-tree-id883 . -5) (44 . 49) (#("hei" 0 3 (fontified t)) . -44) (undo-tree-id884 . -3) (44 . 47) (#("hei'j" 0 5 (fontified t)) . -44) (undo-tree-id885 . -5) (44 . 49) (#("hei'ji" 0 6 (fontified t)) . -44) (undo-tree-id886 . -6) (44 . 50) (#("hei'jia" 0 7 (fontified t)) . -44) (undo-tree-id887 . -7) (44 . 51) (#("hei'jia'z" 0 9 (fontified t)) . -44) (undo-tree-id888 . -9) (44 . 53) (#("hei'jia'zi" 0 10 (fontified t)) . -44) (undo-tree-id889 . -10) (44 . 54) (#("hei'jia'z" 0 9 (fontified t)) . -44) (undo-tree-id890 . -9) (44 . 53) (#("hei'jia" 0 7 (fontified t)) . -44) (undo-tree-id891 . -7) (44 . 51) (#("hei'jiai" 0 8 (fontified t)) . -44) (undo-tree-id892 . -8) (44 . 52) (#("hei'jia'iz" 0 10 (fontified t)) . -44) (undo-tree-id893 . -10) (44 . 54) (#("hei'jia'iz" 0 10 (fontified t)) . -44) (undo-tree-id894 . -10) (44 . 54) (#("hei'jia" 0 7 (fontified t)) . -44) (undo-tree-id895 . -7) (44 . 51) (#("hei'ji" 0 6 (fontified t)) . -44) (undo-tree-id896 . -6) (44 . 50) (#("hei'j" 0 5 (fontified t)) . -44) (undo-tree-id897 . -5) (44 . 49) (#("hei" 0 3 (fontified t)) . -44) (undo-tree-id898 . -3) (44 . 47) (#("hei'z" 0 5 (fontified t)) . -44) (undo-tree-id899 . -5) (44 . 49) (#("hei" 0 3 (fontified t)) . -44) (undo-tree-id900 . -3) (44 . 47) (#("he" 0 2 (fontified t)) . -44) (undo-tree-id901 . -2) (44 . 46) (#("h" 0 1 (fontified t)) . -44) (undo-tree-id902 . -1) (44 . 45) (#("“" 0 1 (fontified t)) . -44) (undo-tree-id903 . -1) (#("黑" 0 1 (fontified t)) . -45) (undo-tree-id904 . -1) 46) nil (25737 28724 51502 0) 0 nil])
([nil nil ((44 . 47)) nil (25737 28724 51366 0) 0 nil])
([nil nil ((44 . 45)) nil (25737 28724 51360 0) 0 nil])
([nil nil ((48 . 53)) nil (25737 28724 51355 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -52) (undo-tree-id881 . -1) 53) nil (25737 28724 51348 0) 0 nil])
([nil nil ((52 . 54)) nil (25737 28724 51337 0) 0 nil])
([nil nil ((54 . 55)) nil (25737 28724 51331 0) 0 nil])
([nil nil ((#("luo'ji" 0 6 (fontified t)) . -55) (undo-tree-id876 . -6) (55 . 61) (#("luo'j" 0 5 (fontified t)) . -55) (undo-tree-id877 . -5) (55 . 60) (#("luo" 0 3 (fontified t)) . -55) (undo-tree-id878 . -3) (55 . 58) (#("lu" 0 2 (fontified t)) . -55) (undo-tree-id879 . -2) (55 . 57) (#("l" 0 1 (fontified t)) . -55) (undo-tree-id880 . -1) (55 . 56)) nil (25737 28724 51317 0) 0 nil])
([nil nil ((63 . 65) (#("peng'zhuang" 0 11 (fontified t)) . -63) (undo-tree-id854 . -11) (63 . 74) (#("peng'zhuan" 0 10 (fontified t)) . -63) (undo-tree-id855 . -10) (63 . 73) (#("peng'zhua" 0 9 (fontified t)) . -63) (undo-tree-id856 . -9) (63 . 72) (#("peng'zhu" 0 8 (fontified t)) . -63) (undo-tree-id857 . -8) (63 . 71) (#("peng'zh" 0 7 (fontified t)) . -63) (undo-tree-id858 . -7) (63 . 70) (#("peng'z" 0 6 (fontified t)) . -63) (undo-tree-id859 . -6) (63 . 69) (#("peng" 0 4 (fontified t)) . -63) (undo-tree-id860 . -4) (63 . 67) (#("pen" 0 3 (fontified t)) . -63) (undo-tree-id861 . -3) (63 . 66) (#("pe" 0 2 (fontified t)) . -63) (undo-tree-id862 . -2) (63 . 65) (#("p" 0 1 (fontified t)) . -63) (undo-tree-id863 . -1) (61 . 64) (#("sui'ji" 0 6 (fontified t)) . -61) (undo-tree-id864 . -6) (61 . 67) (#("sui'j" 0 5 (fontified t)) . -61) (undo-tree-id865 . -5) (61 . 66) (#("sui" 0 3 (fontified t)) . -61) (undo-tree-id866 . -3) (61 . 64) (#("su" 0 2 (fontified t)) . -61) (undo-tree-id867 . -2) (61 . 63) (#("s" 0 1 (fontified t)) . -61) (undo-tree-id868 . -1) (59 . 62) (#("v's" 0 3 (fontified t)) . -59) (undo-tree-id869 . -3) (59 . 62) (#("v" 0 1 (fontified t)) . -59) (undo-tree-id870 . -1) (57 . 60) (#("si'wei" 0 6 (fontified t)) . -57) (undo-tree-id871 . -6) (57 . 63) (#("si'we" 0 5 (fontified t)) . -57) (undo-tree-id872 . -5) (57 . 62) (#("si'w" 0 4 (fontified t)) . -57) (undo-tree-id873 . -4) (57 . 61) (#("si" 0 2 (fontified t)) . -57) (undo-tree-id874 . -2) (57 . 59) (#("s" 0 1 (fontified t)) . -57) (undo-tree-id875 . -1) (55 . 58)) nil (25737 28724 51246 0) 0 nil])
([nil nil ((#("xia'cai" 0 7 (fontified t)) . -61) (undo-tree-id844 . -7) (61 . 68) (#("xia'ca" 0 6 (fontified t)) . -61) (undo-tree-id845 . -6) (61 . 67) (#("xia'c" 0 5 (fontified t)) . -61) (undo-tree-id846 . -5) (61 . 66) (#("xia" 0 3 (fontified t)) . -61) (undo-tree-id847 . -3) (61 . 64) (#("xi" 0 2 (fontified t)) . -61) (undo-tree-id848 . -2) (61 . 63) (#("x" 0 1 (fontified t)) . -61) (undo-tree-id849 . -1) (61 . 62) (#("随" 0 1 (fontified t)) . -61) (undo-tree-id850 . -1) (#("机" 0 1 (fontified t)) . -62) (undo-tree-id851 . -1) (#("碰" 0 1 (fontified t)) . -63) (undo-tree-id852 . -1) (#("撞" 0 1 (fontified t)) . -64) (undo-tree-id853 . -1) 65) nil (25737 28724 51100 0) 0 nil])
([nil nil ((61 . 63)) nil (25737 28724 51034 0) 0 nil])
([nil nil ((#("b）	”黑盒“" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t)) . 41) (undo-tree-id842 . -7) (undo-tree-id843 . -7)) nil (25737 28724 51027 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -45) (undo-tree-id840 . -1) (45 . 46) (#("c" 0 1 (fontified t)) . -45) (undo-tree-id841 . -1) 46) nil (25737 28724 51012 0) 0 nil])
([nil nil ((45 . 46)) nil (25737 28724 50996 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -37) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#(" " 0 1 (fontified t)) . -38) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#(" " 0 1 (fontified t)) . -39) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id838 . -1) (undo-tree-id839 . -1) 41) nil (25737 28724 50983 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -56) (undo-tree-id831 . -1) (52 . 57)) nil (25737 28724 50946 0) 0 nil])
([nil nil ((56 . 58)) nil (25737 28724 50936 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 64 . 65) (nil fontified nil 64 . 65) (nil fontified nil 62 . 64) (nil fontified nil 61 . 62) (nil fontified nil 60 . 61) (nil fontified nil 59 . 60) (nil fontified nil 58 . 59) (58 . 65)) nil (25737 28724 50926 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -60) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) 61) nil (25737 28724 50909 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -58) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (#("）" 0 1 (fontified t)) . -59) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . 1) (undo-tree-id825 . -1) 60) nil (25737 28724 50880 0) 0 nil])
([nil nil ((58 . 59)) nil (25737 28724 50843 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -56) (undo-tree-id817 . -1) (52 . 57)) nil (25737 28724 50836 0) 0 nil])
([nil nil ((56 . 58)) nil (25737 28724 50825 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -62) (undo-tree-id815 . -1) (62 . 63) (#("c" 0 1 (fontified t)) . -62) (undo-tree-id816 . -1) 63) nil (25737 28724 50816 0) 0 nil])
([nil nil ((62 . 63)) nil (25737 28724 50799 0) 0 nil])
([nil nil ((58 . 59)) nil (25737 28724 50794 0) 0 nil])
([nil nil ((#("gai'lv'xing" 0 11 (fontified t)) . -50) (undo-tree-id802 . -11) (50 . 61) (#("gai'lv'xing" 0 11 (fontified t)) . -50) (undo-tree-id803 . -11) (50 . 61) (#("gai'lv'xi" 0 9 (fontified t)) . -50) (undo-tree-id804 . -9) (50 . 59) (#("gai'lv'x" 0 8 (fontified t)) . -50) (undo-tree-id805 . -8) (50 . 58) (#("gai'lv" 0 6 (fontified t)) . -50) (undo-tree-id806 . -6) (50 . 56) (#("gai'l" 0 5 (fontified t)) . -50) (undo-tree-id807 . -5) (50 . 55) (#("gai" 0 3 (fontified t)) . -50) (undo-tree-id808 . -3) (50 . 53) (#("ga" 0 2 (fontified t)) . -50) (undo-tree-id809 . -2) (50 . 52) (#("g" 0 1 (fontified t)) . -50) (undo-tree-id810 . -1) (50 . 51) (#("瞎" 0 1 (fontified t)) . -50) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (#("猜" 0 1 (fontified t)) . -51) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 52) nil (25737 28724 50768 0) 0 nil])
([nil nil ((53 . 55) (#("si'wei" 0 6 (fontified t)) . -53) (undo-tree-id797 . -6) (53 . 59) (#("si'we" 0 5 (fontified t)) . -53) (undo-tree-id798 . -5) (53 . 58) (#("si'w" 0 4 (fontified t)) . -53) (undo-tree-id799 . -4) (53 . 57) (#("si" 0 2 (fontified t)) . -53) (undo-tree-id800 . -2) (53 . 55) (#("s" 0 1 (fontified t)) . -53) (undo-tree-id801 . -1) (50 . 54)) nil (25737 28724 50683 0) 0 nil])
([nil nil ((#("性" 0 1 (fontified t)) . -52) (undo-tree-id795 . -1) (undo-tree-id796 . -1) 53) nil (25737 28724 50647 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -54) (undo-tree-id786 . -1) (#(" " 0 1 (fontified t)) . -55) (undo-tree-id787 . -1) (#(" " 0 1 (fontified t)) . -56) (undo-tree-id788 . -1) (#(" " 0 1 (fontified t)) . -57) (undo-tree-id789 . -1) (#("c" 0 1 (fontified t)) . -58) (undo-tree-id790 . -1) (#("）" 0 1 (fontified t)) . -59) (undo-tree-id791 . -1) (undo-tree-id792 . 1) (undo-tree-id793 . -1) (#("	" 0 1 (fontified t)) . -60) (undo-tree-id794 . -1) 61) nil (25737 28724 50608 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -58) (undo-tree-id783 . -1) (58 . 59) (#("c" 0 1 (fontified t)) . -58) (undo-tree-id784 . -1) (58 . 59) (#("d" 0 1 (fontified t)) . -58) (undo-tree-id785 . -1) 59) nil (25737 28724 50530 0) 0 nil])
([nil nil ((58 . 59)) nil (25737 28724 50510 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -69) (undo-tree-id782 . -1) (65 . 70)) nil (25737 28724 50503 0) 0 nil])
([nil nil ((69 . 71)) nil (25737 28724 50493 0) 0 nil])
([nil nil ((#("ren'gong'zhi'neng" 0 17 (fontified t)) . -72) (undo-tree-id769 . -17) (72 . 89) (#("ren'gong'zhi'nen" 0 16 (fontified t)) . -72) (undo-tree-id770 . -16) (72 . 88) (#("ren'gong'zhi'ne" 0 15 (fontified t)) . -72) (undo-tree-id771 . -15) (72 . 87) (#("ren'gong'zhi'n" 0 14 (fontified t)) . -72) (undo-tree-id772 . -14) (72 . 86) (#("ren'gong'zhi" 0 12 (fontified t)) . -72) (undo-tree-id773 . -12) (72 . 84) (#("ren'gong'zh" 0 11 (fontified nil)) . -72) (72 . 83) (#("ren'gong'zh" 0 11 (fontified t)) . -72) (undo-tree-id774 . -11) (72 . 83) (#("ren'gong" 0 8 (fontified t)) . -72) (undo-tree-id775 . -8) (72 . 80) (#("ren'gon" 0 7 (fontified t)) . -72) (undo-tree-id776 . -7) (72 . 79) (#("ren'go" 0 6 (fontified t)) . -72) (undo-tree-id777 . -6) (72 . 78) (#("reng" 0 4 (fontified t)) . -72) (undo-tree-id778 . -4) (72 . 76) (#("ren" 0 3 (fontified t)) . -72) (undo-tree-id779 . -3) (72 . 75) (#("re" 0 2 (fontified t)) . -72) (undo-tree-id780 . -2) (72 . 74) (#("r" 0 1 (fontified t)) . -72) (undo-tree-id781 . -1) (71 . 73)) nil (25737 28724 50465 0) 0 nil])
([nil nil ((72 . 76)) nil (25737 28724 50387 0) 0 nil])
([nil nil ((76 . 78) (#("shi'ge" 0 6 (fontified t)) . -76) (undo-tree-id764 . -6) (76 . 82) (#("shi'g" 0 5 (fontified t)) . -76) (undo-tree-id765 . -5) (76 . 81) (#("shi" 0 3 (fontified t)) . -76) (undo-tree-id766 . -3) (76 . 79) (#("sh" 0 2 (fontified t)) . -76) (undo-tree-id767 . -2) (76 . 78) (#("s" 0 1 (fontified t)) . -76) (undo-tree-id768 . -1) (76 . 77)) nil (25737 28724 50373 0) 0 nil])
([nil nil ((76 . 81) (#("zhi" 0 3 (fontified t)) . -76) (undo-tree-id759 . -3) (76 . 79) (#("zh" 0 2 (fontified t)) . -76) (undo-tree-id760 . -2) (76 . 78) (#("z" 0 1 (fontified t)) . -76) (undo-tree-id761 . -1) (76 . 77) (#("是" 0 1 (fontified t)) . -76) (undo-tree-id762 . -1) (#("个" 0 1 (fontified t)) . -77) (undo-tree-id763 . -1) 78) nil (25737 28724 50334 0) 0 nil])
([nil nil ((#("zhi'bu'guo'shi" 0 14 (fontified t)) . -76) (undo-tree-id751 . -14) (76 . 90) (#("zhi'bu'guo'sh" 0 13 (fontified t)) . -76) (undo-tree-id752 . -13) (76 . 89) (#("zhi'bu'guo's" 0 12 (fontified t)) . -76) (undo-tree-id753 . -12) (76 . 88) (#("zhi'bu'guo" 0 10 (fontified t)) . -76) (undo-tree-id754 . -10) (76 . 86) (#("zhi'bu'gu" 0 9 (fontified t)) . -76) (undo-tree-id755 . -9) (76 . 85) (#("zhi'bu'g" 0 8 (fontified t)) . -76) (undo-tree-id756 . -8) (76 . 84) (#("zhi'bu" 0 6 (fontified t)) . -76) (undo-tree-id757 . -6) (76 . 82) (#("zhi'b" 0 5 (fontified t)) . -76) (undo-tree-id758 . -5) 81) nil (25737 28724 50272 0) 0 nil])
([nil nil ((82 . 84) (#("zhi'neng" 0 8 (fontified t)) . -82) (undo-tree-id737 . -8) (82 . 90) (#("zhi'nen" 0 7 (fontified t)) . -82) (undo-tree-id738 . -7) (82 . 89) (#("zhi'ne" 0 6 (fontified t)) . -82) (undo-tree-id739 . -6) (82 . 88) (#("zhi'n" 0 5 (fontified t)) . -82) (undo-tree-id740 . -5) (82 . 87) (#("zhi" 0 3 (fontified t)) . -82) (undo-tree-id741 . -3) (82 . 85) (#("z'h" 0 3 (fontified t)) . -82) (undo-tree-id742 . -3) (82 . 85) (#("z" 0 1 (fontified t)) . -82) (undo-tree-id743 . -1) (80 . 83) (#("ren'gong" 0 8 (fontified t)) . -80) (undo-tree-id744 . -8) (80 . 88) (#("ren'gon" 0 7 (fontified t)) . -80) (undo-tree-id745 . -7) (80 . 87) (#("ren'go" 0 6 (fontified t)) . -80) (undo-tree-id746 . -6) (80 . 86) (#("reng" 0 4 (fontified t)) . -80) (undo-tree-id747 . -4) (80 . 84) (#("ren" 0 3 (fontified t)) . -80) (undo-tree-id748 . -3) (80 . 83) (#("r'e" 0 3 (fontified t)) . -80) (undo-tree-id749 . -3) (80 . 83) (#("r" 0 1 (fontified t)) . -80) (undo-tree-id750 . -1) (76 . 81)) nil (25737 28724 50196 0) 0 nil])
([nil nil ((#("人" 0 1 (fontified t)) . -80) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("工" 0 1 (fontified t)) . -81) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#("智" 0 1 (fontified t)) . -82) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (#("能" 0 1 (fontified t)) . -83) (undo-tree-id735 . -1) (undo-tree-id736 . -1) 84) nil (25737 28724 50066 0) 0 nil])
([nil nil ((#("过" 0 1 (fontified t)) . -78) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#("是" 0 1 (fontified t)) . -79) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#("r" 0 1 (fontified t)) . -80) (undo-tree-id716 . -1) (80 . 81) (#("re" 0 2 (fontified t)) . -80) (undo-tree-id717 . -2) (80 . 82) (#("ren" 0 3 (fontified t)) . -80) (undo-tree-id718 . -3) (80 . 83) (#("ren'g" 0 5 (fontified t)) . -80) (undo-tree-id719 . -5) (80 . 85) (#("ren'go" 0 6 (fontified t)) . -80) (undo-tree-id720 . -6) (80 . 86) (#("ren'gon" 0 7 (fontified t)) . -80) (undo-tree-id721 . -7) (80 . 87) (#("ren'gong" 0 8 (fontified t)) . -80) (undo-tree-id722 . -8) (80 . 88) (#("ren'gon" 0 7 (fontified t)) . -80) (undo-tree-id723 . -7) (80 . 87) (#("ren'go" 0 6 (fontified t)) . -80) (undo-tree-id724 . -6) (80 . 86) (#("ren'g" 0 5 (fontified t)) . -80) (undo-tree-id725 . -5) (80 . 85) (#("ren" 0 3 (fontified t)) . -80) (undo-tree-id726 . -3) (80 . 83) (#("re" 0 2 (fontified t)) . -80) (undo-tree-id727 . -2) (80 . 82) (#("r" 0 1 (fontified t)) . -80) (undo-tree-id728 . -1) (80 . 81)) nil (25737 28724 49872 0) 0 nil])
([nil nil ((#("bu'cun'zai" 0 10 (fontified t)) . -76) (undo-tree-id694 . -10) (76 . 86) (#("bu'cun'za" 0 9 (fontified t)) . -76) (undo-tree-id695 . -9) (76 . 85) (#("bu'cun'z" 0 8 (fontified t)) . -76) (undo-tree-id696 . -8) (76 . 84) (#("bu'cun" 0 6 (fontified t)) . -76) (undo-tree-id697 . -6) (76 . 82) (#("bu'cu" 0 5 (fontified t)) . -76) (undo-tree-id698 . -5) (76 . 81) (#("bu'c" 0 4 (fontified t)) . -76) (undo-tree-id699 . -4) (76 . 80) (#("bu" 0 2 (fontified t)) . -76) (undo-tree-id700 . -2) (76 . 78) (#("b" 0 1 (fontified t)) . -76) (undo-tree-id701 . -1) (76 . 77) (#("bi" 0 2 (fontified t)) . -76) (undo-tree-id702 . -2) (76 . 78) (#("bin" 0 3 (fontified t)) . -76) (undo-tree-id703 . -3) (76 . 79) (#("b'i'n'g" 0 7 (fontified t)) . -76) (undo-tree-id704 . -7) (76 . 83) (#("bin" 0 3 (fontified t)) . -76) (undo-tree-id705 . -3) (76 . 79) (#("bi" 0 2 (fontified t)) . -76) (undo-tree-id706 . -2) (76 . 78) (#("b" 0 1 (fontified t)) . -76) (undo-tree-id707 . -1) (76 . 77) (#("只" 0 1 (fontified t)) . -76) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (#("不" 0 1 (fontified t)) . -77) (undo-tree-id710 . -1) (undo-tree-id711 . -1) 78) nil (25737 28724 49763 0) 0 nil])
([nil nil ((76 . 79)) nil (25737 28724 49672 0) 0 nil])
([nil nil ((#("shi'ge" 0 6 (fontified t)) . -76) (undo-tree-id686 . -6) (76 . 82) (#("shi'g" 0 5 (fontified t)) . -76) (undo-tree-id687 . -5) (76 . 81) (#("shi" 0 3 (fontified t)) . -76) (undo-tree-id688 . -3) (76 . 79) (#("sh" 0 2 (fontified t)) . -76) (undo-tree-id689 . -2) (76 . 78) (#("s" 0 1 (fontified t)) . -76) (undo-tree-id690 . -1) (76 . 77) (#("不" 0 1 (fontified t)) . -76) (undo-tree-id691 . -1) (#("存" 0 1 (fontified t)) . -77) (undo-tree-id692 . -1) (#("在" 0 1 (fontified t)) . -78) (undo-tree-id693 . -1) 79) nil (25737 28724 49655 0) 0 nil])
([nil nil ((78 . 80) (#("pian'ju" 0 7 (fontified t)) . -78) (undo-tree-id680 . -7) (78 . 85) (#("pian'j" 0 6 (fontified t)) . -78) (undo-tree-id681 . -6) (78 . 84) (#("pian" 0 4 (fontified t)) . -78) (undo-tree-id682 . -4) (78 . 82) (#("pia" 0 3 (fontified t)) . -78) (undo-tree-id683 . -3) (78 . 81) (#("pi" 0 2 (fontified t)) . -78) (undo-tree-id684 . -2) (78 . 80) (#("p" 0 1 (fontified t)) . -78) (undo-tree-id685 . -1) (76 . 79)) nil (25737 28724 49602 0) 0 nil])
([nil nil ((80 . 84)) nil (25737 28724 49567 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -81) (undo-tree-id677 . -1) (#(" " 0 1 (fontified t)) . -82) (undo-tree-id678 . -1) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id679 . -1) 84) nil (25737 28724 49558 0) 0 nil])
([nil nil ((81 . 83)) nil (25737 28724 49540 0) 0 nil])
([nil nil ((#("A'I'G'C" 0 7 (fontified t)) . -84) (undo-tree-id673 . -7) (84 . 91) (#("A'I'G" 0 5 (fontified t)) . -84) (undo-tree-id674 . -5) (84 . 89) (#("A'I" 0 3 (fontified t)) . -84) (undo-tree-id675 . -3) (84 . 87) (#("A" 0 1 (fontified t)) . -84) (undo-tree-id676 . -1) (83 . 85)) nil (25737 28724 49527 0) 0 nil])
([nil nil ((88 . 91) (#("shi'shen'me" 0 11 (fontified t)) . -88) (undo-tree-id664 . -11) (88 . 99) (#("shi'shen'm" 0 10 (fontified t)) . -88) (undo-tree-id665 . -10) (88 . 98) (#("shi'shen" 0 8 (fontified t)) . -88) (undo-tree-id666 . -8) (88 . 96) (#("shi'she" 0 7 (fontified t)) . -88) (undo-tree-id667 . -7) (88 . 95) (#("shi'sh" 0 6 (fontified t)) . -88) (undo-tree-id668 . -6) (88 . 94) (#("shi's" 0 5 (fontified t)) . -88) (undo-tree-id669 . -5) (88 . 93) (#("shi" 0 3 (fontified t)) . -88) (undo-tree-id670 . -3) (88 . 91) (#("sh" 0 2 (fontified t)) . -88) (undo-tree-id671 . -2) (88 . 90) (#("s" 0 1 (fontified t)) . -88) (undo-tree-id672 . -1) (84 . 89)) nil (25737 28724 49486 0) 0 nil])
([nil nil ((91 . 92)) nil (25737 28724 49435 0) 0 nil])
([nil nil ((92 . 95)) nil (25737 28724 49429 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -95) (undo-tree-id663 . -1) (95 . 96)) nil (25737 28724 49423 0) 0 nil])
([nil nil ((95 . 97)) nil (25737 28724 49413 0) 0 nil])
([nil nil ((#("sheng'cheng'ren'wu" 0 18 (fontified t)) . -98) (undo-tree-id648 . -18) (98 . 116) (#("sheng'cheng'ren'w" 0 17 (fontified t)) . -98) (undo-tree-id649 . -17) (98 . 115) (#("sheng'cheng'ren" 0 15 (fontified t)) . -98) (undo-tree-id650 . -15) (98 . 113) (#("sheng'cheng're" 0 14 (fontified t)) . -98) (undo-tree-id651 . -14) (98 . 112) (#("sheng'cheng'r" 0 13 (fontified t)) . -98) (undo-tree-id652 . -13) (98 . 111) (#("sheng'cheng" 0 11 (fontified t)) . -98) (undo-tree-id653 . -11) (98 . 109) (#("sheng'chen" 0 10 (fontified t)) . -98) (undo-tree-id654 . -10) (98 . 108) (#("sheng'che" 0 9 (fontified t)) . -98) (undo-tree-id655 . -9) (98 . 107) (#("sheng'ch" 0 8 (fontified t)) . -98) (undo-tree-id656 . -8) (98 . 106) (#("sheng'c" 0 7 (fontified t)) . -98) (undo-tree-id657 . -7) (98 . 105) (#("sheng" 0 5 (fontified t)) . -98) (undo-tree-id658 . -5) (98 . 103) (#("shen" 0 4 (fontified t)) . -98) (undo-tree-id659 . -4) (98 . 102) (#("she" 0 3 (fontified t)) . -98) (undo-tree-id660 . -3) (98 . 101) (#("sh" 0 2 (fontified t)) . -98) (undo-tree-id661 . -2) (98 . 100) (#("s" 0 1 (fontified t)) . -98) (undo-tree-id662 . -1) (97 . 99)) nil (25737 28724 49373 0) 0 nil])
([nil nil ((98 . 102)) nil (25737 28724 49279 0) 0 nil])
([nil nil ((#("sheng'cheng" 0 11 (fontified t)) . -98) (undo-tree-id634 . -11) (98 . 109) (#("sheng'chen" 0 10 (fontified t)) . -98) (undo-tree-id635 . -10) (98 . 108) (#("sheng'che" 0 9 (fontified t)) . -98) (undo-tree-id636 . -9) (98 . 107) (#("sheng'ch" 0 8 (fontified t)) . -98) (undo-tree-id637 . -8) (98 . 106) (#("sheng'c" 0 7 (fontified t)) . -98) (undo-tree-id638 . -7) (98 . 105) (#("sheng" 0 5 (fontified t)) . -98) (undo-tree-id639 . -5) (98 . 103) (#("shen" 0 4 (fontified t)) . -98) (undo-tree-id640 . -4) (98 . 102) (#("she" 0 3 (fontified t)) . -98) (undo-tree-id641 . -3) (98 . 101) (#("sh" 0 2 (fontified t)) . -98) (undo-tree-id642 . -2) (98 . 100) (#("s" 0 1 (fontified t)) . -98) (undo-tree-id643 . -1) (98 . 99) (#("生" 0 1 (fontified t)) . -98) (undo-tree-id644 . -1) (#("成" 0 1 (fontified t)) . -99) (undo-tree-id645 . -1) (#("任" 0 1 (fontified t)) . -100) (undo-tree-id646 . -1) (#("务" 0 1 (fontified t)) . -101) (undo-tree-id647 . -1) 102) nil (25737 28724 49252 0) 0 nil])
([nil nil ((101 . 103) (#("dui'kang" 0 8 (fontified t)) . -101) (undo-tree-id625 . -8) (101 . 109) (#("dui'kan" 0 7 (fontified t)) . -101) (undo-tree-id626 . -7) (101 . 108) (#("dui'ka" 0 6 (fontified t)) . -101) (undo-tree-id627 . -6) (101 . 107) (#("dui'ka" 0 6 (fontified t)) . -101) (undo-tree-id628 . -6) (101 . 107) (#("dui" 0 3 (fontified t)) . -101) (undo-tree-id629 . -3) (101 . 104) (#("du" 0 2 (fontified t)) . -101) (undo-tree-id630 . -2) (101 . 103) (#("d" 0 1 (fontified t)) . -101) (undo-tree-id631 . -1) (100 . 102) (#("yu" 0 2 (fontified t)) . -100) (undo-tree-id632 . -2) (100 . 102) (#("y" 0 1 (fontified t)) . -100) (undo-tree-id633 . -1) (98 . 101)) nil (25737 28724 49164 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -107) (undo-tree-id624 . -1) (103 . 108)) nil (25737 28724 49110 0) 0 nil])
([nil nil ((107 . 109)) nil (25737 28724 49101 0) 0 nil])
([nil nil ((#("zao'yin" 0 7 (fontified t)) . -110) (undo-tree-id618 . -7) (110 . 117) (#("zao'yi" 0 6 (fontified t)) . -110) (undo-tree-id619 . -6) (110 . 116) (#("zao'y" 0 5 (fontified t)) . -110) (undo-tree-id620 . -5) (110 . 115) (#("zao" 0 3 (fontified t)) . -110) (undo-tree-id621 . -3) (110 . 113) (#("za" 0 2 (fontified t)) . -110) (undo-tree-id622 . -2) (110 . 112) (#("z" 0 1 (fontified t)) . -110) (undo-tree-id623 . -1) (109 . 111)) nil (25737 28724 49086 0) 0 nil])
([nil nil ((113 . 115) (#("shou'lian" 0 9 (fontified t)) . -113) (undo-tree-id608 . -9) (113 . 122) (#("shou'li'a" 0 9 (fontified t)) . -113) (undo-tree-id609 . -9) (113 . 122) (#("shou'li" 0 7 (fontified t)) . -113) (undo-tree-id610 . -7) (113 . 120) (#("shou'l" 0 6 (fontified t)) . -113) (undo-tree-id611 . -6) (113 . 119) (#("shou" 0 4 (fontified t)) . -113) (undo-tree-id612 . -4) (113 . 117) (#("s'ho" 0 4 (fontified t)) . -113) (undo-tree-id613 . -4) (113 . 117) (#("sh" 0 2 (fontified t)) . -113) (undo-tree-id614 . -2) (113 . 115) (#("s" 0 1 (fontified t)) . -113) (undo-tree-id615 . -1) (112 . 114) (#("yu" 0 2 (fontified t)) . -112) (undo-tree-id616 . -2) (112 . 114) (#("y" 0 1 (fontified t)) . -112) (undo-tree-id617 . -1) (110 . 113)) nil (25737 28724 49035 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -119) (undo-tree-id607 . -1) (115 . 120)) nil (25737 28724 48974 0) 0 nil])
([nil nil ((119 . 121)) nil (25737 28724 48965 0) 0 nil])
([nil nil ((121 . 122)) nil (25737 28724 48959 0) 0 nil])
([nil nil ((#("shen'hua" 0 8 (fontified t)) . -65) (undo-tree-id600 . -8) (65 . 73) (#("shen'hu" 0 7 (fontified t)) . -65) (undo-tree-id601 . -7) (65 . 72) (#("shen'h" 0 6 (fontified t)) . -65) (undo-tree-id602 . -6) (65 . 71) (#("shen" 0 4 (fontified t)) . -65) (undo-tree-id603 . -4) (65 . 69) (#("she" 0 3 (fontified t)) . -65) (undo-tree-id604 . -3) (65 . 68) (#("sh" 0 2 (fontified t)) . -65) (undo-tree-id605 . -2) (65 . 67) (#("s" 0 1 (fontified t)) . -65) (undo-tree-id606 . -1) (65 . 66)) nil (25737 28724 48943 0) 0 nil])
([nil nil ((65 . 67)) nil (25737 28724 48904 0) 0 nil])
([nil nil ((#("shen'hua" 0 8 (fontified t)) . -65) (undo-tree-id591 . -8) (65 . 73) (#("shen'hu" 0 7 (fontified t)) . -65) (undo-tree-id592 . -7) (65 . 72) (#("shen'h" 0 6 (fontified t)) . -65) (undo-tree-id593 . -6) (65 . 71) (#("shen" 0 4 (fontified t)) . -65) (undo-tree-id594 . -4) (65 . 69) (#("she" 0 3 (fontified t)) . -65) (undo-tree-id595 . -3) (65 . 68) (#("sh" 0 2 (fontified t)) . -65) (undo-tree-id596 . -2) (65 . 67) (#("s" 0 1 (fontified t)) . -65) (undo-tree-id597 . -1) (65 . 66) (#("深" 0 1 (fontified t)) . -65) (undo-tree-id598 . -1) (#("化" 0 1 (fontified t)) . -66) (undo-tree-id599 . -1) 67) nil (25737 28724 48885 0) 0 nil])
([nil nil ((65 . 67)) nil (25737 28724 48835 0) 0 nil])
([nil nil ((124 . 128)) nil (25737 28724 48829 0) 0 nil])
([nil nil ((#("yu'yan'mo'xing" 0 14 (fontified t)) . -124) (undo-tree-id576 . -14) (124 . 138) (#("yu'yan'mo'xin" 0 13 (fontified t)) . -124) (undo-tree-id577 . -13) (124 . 137) (#("yu'yan'mo'xi" 0 12 (fontified t)) . -124) (undo-tree-id578 . -12) (124 . 136) (#("yu'yan'mo'x" 0 11 (fontified t)) . -124) (undo-tree-id579 . -11) (124 . 135) (#("yu'yan'mo" 0 9 (fontified t)) . -124) (undo-tree-id580 . -9) (124 . 133) (#("yu'yan'm" 0 8 (fontified t)) . -124) (undo-tree-id581 . -8) (124 . 132) (#("yu'yan" 0 6 (fontified t)) . -124) (undo-tree-id582 . -6) (124 . 130) (#("yu'ya" 0 5 (fontified t)) . -124) (undo-tree-id583 . -5) (124 . 129) (#("yu'y" 0 4 (fontified t)) . -124) (undo-tree-id584 . -4) (124 . 128) (#("yu" 0 2 (fontified t)) . -124) (undo-tree-id585 . -2) (124 . 126) (#("y" 0 1 (fontified t)) . -124) (undo-tree-id586 . -1) (124 . 125) (#("y" 0 1 (fontified t)) . -124) (undo-tree-id587 . -1) (#("u" 0 1 (fontified t)) . -125) (undo-tree-id588 . -1) (#("y" 0 1 (fontified t)) . -126) (undo-tree-id589 . -1) (#("a" 0 1 (fontified t)) . -127) (undo-tree-id590 . -1) 128) nil (25737 28724 48801 0) 0 nil])
([nil nil ((124 . 128)) nil (25737 28724 48725 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -132) (undo-tree-id575 . -1) (128 . 133)) nil (25737 28724 48718 0) 0 nil])
([nil nil ((132 . 134)) nil (25737 28724 48709 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -134) (undo-tree-id572 . -1) (134 . 135) (#("re" 0 2 (fontified t)) . -134) (undo-tree-id573 . -2) (134 . 136) (#("r" 0 1 (fontified t)) . -134) (undo-tree-id574 . -1) (134 . 135)) nil (25737 28724 48699 0) 0 nil])
([nil nil ((#("c'h'a't'g'p't" 0 13 (fontified t)) . -135) (undo-tree-id563 . -13) (135 . 148) (#("c'h'a't'g'p" 0 11 (fontified t)) . -135) (undo-tree-id564 . -11) (135 . 146) (#("c'h'a't'g" 0 9 (fontified t)) . -135) (undo-tree-id565 . -9) (135 . 144) (#("c'h'a't" 0 7 (fontified t)) . -135) (undo-tree-id566 . -7) (135 . 142) (#("cha" 0 3 (fontified t)) . -135) (undo-tree-id567 . -3) (135 . 138) (#("ch" 0 2 (fontified t)) . -135) (undo-tree-id568 . -2) (135 . 137) (#("ch't" 0 4 (fontified t)) . -135) (undo-tree-id569 . -4) (135 . 139) (#("ch" 0 2 (fontified t)) . -135) (undo-tree-id570 . -2) (135 . 137) (#("c" 0 1 (fontified t)) . -135) (undo-tree-id571 . -1) (134 . 136)) nil (25737 28724 48665 0) 0 nil])
([nil nil ((135 . 142)) nil (25737 28724 48612 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -135) (undo-tree-id555 . -1) (135 . 136) (#("c" 0 1 (fontified t)) . -135) (undo-tree-id556 . -1) (#("h" 0 1 (fontified t)) . -136) (undo-tree-id557 . -1) (#("a" 0 1 (fontified t)) . -137) (undo-tree-id558 . -1) (#("t" 0 1 (fontified t)) . -138) (undo-tree-id559 . -1) (#("g" 0 1 (fontified t)) . -139) (undo-tree-id560 . -1) (#("p" 0 1 (fontified t)) . -140) (undo-tree-id561 . -1) (#("t" 0 1 (fontified t)) . -141) (undo-tree-id562 . -1) 142) nil (25737 28724 48597 0) 0 nil])
([nil nil ((#("yu" 0 2 (fontified t)) . -128) (undo-tree-id553 . -2) (128 . 130) (#("y" 0 1 (fontified t)) . -128) (undo-tree-id554 . -1) (128 . 129) 127) nil (25737 28724 48555 0) 0 nil])
([nil nil ((132 . 134) (#("A'I" 0 3 (fontified t)) . -132) (undo-tree-id538 . -3) (132 . 135) (#("A" 0 1 (fontified t)) . -132) (undo-tree-id539 . -1) (132 . 133) (#("a" 0 1 (fontified t)) . -132) (undo-tree-id540 . -1) (132 . 133) (#("ai" 0 2 (fontified t)) . -132) (undo-tree-id541 . -2) (132 . 134) (#("a" 0 1 (fontified t)) . -132) (undo-tree-id542 . -1) (129 . 133) (#("dui'hua'xing" 0 12 (fontified t)) . -129) (undo-tree-id543 . -12) (129 . 141) (#("dui'hua'xin" 0 11 (fontified t)) . -129) (undo-tree-id544 . -11) (129 . 140) (#("dui'hua'xi" 0 10 (fontified t)) . -129) (undo-tree-id545 . -10) (129 . 139) (#("dui'hua'x" 0 9 (fontified t)) . -129) (undo-tree-id546 . -9) (129 . 138) (#("dui'hua" 0 7 (fontified t)) . -129) (undo-tree-id547 . -7) (129 . 136) (#("dui'hu" 0 6 (fontified t)) . -129) (undo-tree-id548 . -6) (129 . 135) (#("dui'h" 0 5 (fontified t)) . -129) (undo-tree-id549 . -5) (129 . 134) (#("dui" 0 3 (fontified t)) . -129) (undo-tree-id550 . -3) (129 . 132) (#("du" 0 2 (fontified t)) . -129) (undo-tree-id551 . -2) (129 . 131) (#("d" 0 1 (fontified t)) . -129) (undo-tree-id552 . -1) (128 . 130)) nil (25737 28724 48515 0) 0 nil])
([nil nil ((134 . 138)) nil (25737 28724 48430 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -134) (undo-tree-id534 . -1) (#(" " 0 1 (fontified t)) . -135) (undo-tree-id535 . -1) (#(" " 0 1 (fontified t)) . -136) (undo-tree-id536 . -1) (#(" " 0 1 (fontified t)) . -137) (undo-tree-id537 . -1) 138) nil (25737 28724 48420 0) 0 nil])
([nil nil ((#("sheng'cheng'mo'xing" 0 19 (fontified t)) . -141) (undo-tree-id520 . -19) (141 . 160) (#("sheng'cheng'mo'xin" 0 18 (fontified t)) . -141) (undo-tree-id521 . -18) (141 . 159) (#("sheng'cheng'mo'xi" 0 17 (fontified nil)) . -141) (141 . 158) (#("sheng'cheng'mo'xi" 0 17 (fontified nil)) . -141) (141 . 158) (#("sheng'cheng'mo'xi" 0 17 (fontified t)) . -141) (undo-tree-id522 . -17) (141 . 158) (#("sheng'cheng'm" 0 13 (fontified t)) . -141) (undo-tree-id523 . -13) (141 . 154) (#("sheng'cheng" 0 11 (fontified t)) . -141) (undo-tree-id524 . -11) (141 . 152) (#("sheng'chen" 0 10 (fontified t)) . -141) (undo-tree-id525 . -10) (141 . 151) (#("sheng'che" 0 9 (fontified t)) . -141) (undo-tree-id526 . -9) (141 . 150) (#("sheng'ch" 0 8 (fontified t)) . -141) (undo-tree-id527 . -8) (141 . 149) (#("sheng'c" 0 7 (fontified t)) . -141) (undo-tree-id528 . -7) (141 . 148) (#("sheng" 0 5 (fontified t)) . -141) (undo-tree-id529 . -5) (141 . 146) (#("shen" 0 4 (fontified t)) . -141) (undo-tree-id530 . -4) (141 . 145) (#("she" 0 3 (fontified t)) . -141) (undo-tree-id531 . -3) (141 . 144) (#("sh" 0 2 (fontified t)) . -141) (undo-tree-id532 . -2) (141 . 143) (#("s" 0 1 (fontified t)) . -141) (undo-tree-id533 . -1) (141 . 142)) nil (25737 28724 48374 0) 0 nil])
([nil nil ((145 . 146) (#("yu" 0 2 (fontified t)) . -145) (undo-tree-id518 . -2) (145 . 147) (#("y" 0 1 (fontified t)) . -145) (undo-tree-id519 . -1) (141 . 146)) nil (25737 28724 48287 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -134) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#(" " 0 1 (fontified t)) . -135) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#(" " 0 1 (fontified t)) . -136) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#(" " 0 1 (fontified t)) . -137) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("d" 0 1 (fontified t)) . -138) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("）" 0 1 (fontified t)) . -139) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . 1) (undo-tree-id510 . -1) (#("	" 0 1 (fontified t)) . -140) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#("生" 0 1 (fontified t)) . -141) (undo-tree-id513 . -1) (#("成" 0 1 (fontified t)) . -142) (undo-tree-id514 . -1) (#("模" 0 1 (fontified t)) . -143) (undo-tree-id515 . -1) (#("型" 0 1 (fontified t)) . -144) (undo-tree-id516 . -1) (#("与" 0 1 (fontified t)) . -145) (undo-tree-id517 . -1) 146) nil (25737 28724 48253 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -121) (undo-tree-id495 . -1) (121 . 122) (#("c" 0 1 (fontified t)) . -121) (undo-tree-id496 . -1) 122) nil (25737 28724 48168 0) 0 nil])
([nil nil ((121 . 122)) nil (25737 28724 48153 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -109) (undo-tree-id493 . -1) (109 . 110) (#("b" 0 1 (fontified t)) . -109) (undo-tree-id494 . -1) 110) nil (25737 28724 48145 0) 0 nil])
([nil nil ((109 . 110)) nil (25737 28724 48130 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -97) (undo-tree-id491 . -1) (97 . 98) (#("a" 0 1 (fontified t)) . -97) (undo-tree-id492 . -1) 98) nil (25737 28724 48122 0) 0 nil])
([nil nil ((97 . 98)) nil (25737 28724 48098 0) 0 nil])
([nil nil ((93 . 94)) nil (25737 28724 48092 0) 0 nil])
([nil nil ((#("a)" 0 2 (fontified t)) . -97) (undo-tree-id487 . -2) (undo-tree-id488 . 1) (undo-tree-id489 . -2) (97 . 99) (#("a" 0 1 (fontified t)) . -97) (undo-tree-id490 . -1) (94 . 98)) nil (25737 28724 48082 0) 0 nil])
([nil nil ((97 . 99)) nil (25737 28724 48028 0) 0 nil])
([nil nil ((99 . 100)) nil (25737 28724 48023 0) 0 nil])
([nil nil ((99 . 101) (#("	" 0 1 (fontified t)) . 99) (undo-tree-id486 . -1) 100) nil (25737 28724 48015 0) 0 nil])
([nil nil ((#("xiao'hai" 0 8 (fontified t)) . -100) (undo-tree-id478 . -8) (100 . 108) (#("xiao'ha" 0 7 (fontified t)) . -100) (undo-tree-id479 . -7) (100 . 107) (#("xiao'h" 0 6 (fontified t)) . -100) (undo-tree-id480 . -6) (100 . 106) (#("xiao" 0 4 (fontified t)) . -100) (undo-tree-id481 . -4) (100 . 104) (#("xia" 0 3 (fontified t)) . -100) (undo-tree-id482 . -3) (100 . 103) (#("xi" 0 2 (fontified t)) . -100) (undo-tree-id483 . -2) (100 . 102) (#("x" 0 1 (fontified t)) . -100) (undo-tree-id484 . -1) (100 . 101) (#("	" 0 1 (fontified t)) . -100) (undo-tree-id485 . -1) 101) nil (25737 28724 47992 0) 0 nil])
([nil nil ((103 . 104) (#("gou" 0 3 (fontified t)) . -103) (undo-tree-id472 . -3) (103 . 106) (#("go" 0 2 (fontified t)) . -103) (undo-tree-id473 . -2) (103 . 105) (#("g" 0 1 (fontified t)) . -103) (undo-tree-id474 . -1) (103 . 104) (#("o" 0 1 (fontified t)) . -103) (undo-tree-id475 . -1) (102 . 104) (#("yu" 0 2 (fontified t)) . -102) (undo-tree-id476 . -2) (102 . 104) (#("y" 0 1 (fontified t)) . -102) (undo-tree-id477 . -1) (100 . 103)) nil (25737 28724 47938 0) 0 nil])
([nil nil ((145 . 149)) nil (25737 28724 47902 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -146) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t)) . -147) (undo-tree-id470 . -1) (#(" " 0 1 (fontified t)) . -148) (undo-tree-id471 . -1) 149) nil (25737 28724 47893 0) 0 nil])
([nil nil ((146 . 148)) nil (25737 28724 47876 0) 0 nil])
([nil nil ((148 . 149)) nil (25737 28724 47871 0) 0 nil])
([nil nil ((#("tu'xiang'mo'xing" 0 16 (fontified t)) . -149) (undo-tree-id456 . -16) (149 . 165) (#("tu'xiang'mo'xin" 0 15 (fontified t)) . -149) (undo-tree-id457 . -15) (149 . 164) (#("tu'xiang'mo'xi" 0 14 (fontified t)) . -149) (undo-tree-id458 . -14) (149 . 163) (#("tu'xiang'mo'x" 0 13 (fontified t)) . -149) (undo-tree-id459 . -13) (149 . 162) (#("tu'xiang'mo" 0 11 (fontified t)) . -149) (undo-tree-id460 . -11) (149 . 160) (#("tu'xiang'm" 0 10 (fontified t)) . -149) (undo-tree-id461 . -10) (149 . 159) (#("tu'xiang" 0 8 (fontified t)) . -149) (undo-tree-id462 . -8) (149 . 157) (#("tu'xian" 0 7 (fontified t)) . -149) (undo-tree-id463 . -7) (149 . 156) (#("tu'xia" 0 6 (fontified t)) . -149) (undo-tree-id464 . -6) (149 . 155) (#("tu'xi" 0 5 (fontified t)) . -149) (undo-tree-id465 . -5) (149 . 154) (#("tu'x" 0 4 (fontified t)) . -149) (undo-tree-id466 . -4) (149 . 153) (#("tu" 0 2 (fontified t)) . -149) (undo-tree-id467 . -2) (149 . 151) (#("t" 0 1 (fontified t)) . -149) (undo-tree-id468 . -1) (149 . 150)) nil (25737 28724 47845 0) 0 nil])
([nil nil ((149 . 153)) nil (25737 28724 47775 0) 0 nil])
([nil nil ((153 . 154)) nil (25737 28724 47769 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -157) (undo-tree-id455 . -1) (154 . 158)) nil (25737 28724 47763 0) 0 nil])
([nil nil ((157 . 158)) nil (25737 28724 47753 0) 0 nil])
([nil nil ((158 . 159)) nil (25737 28724 47748 0) 0 nil])
([nil nil ((#("tu'xiang'mo'xing" 0 16 (fontified t)) . -149) (undo-tree-id438 . -16) (149 . 165) (#("tu'xiang'mo'xin" 0 15 (fontified t)) . -149) (undo-tree-id439 . -15) (149 . 164) (#("tu'xiang'mo'xi" 0 14 (fontified t)) . -149) (undo-tree-id440 . -14) (149 . 163) (#("tu'xiang'mo'x" 0 13 (fontified t)) . -149) (undo-tree-id441 . -13) (149 . 162) (#("tu'xiang'mo" 0 11 (fontified t)) . -149) (undo-tree-id442 . -11) (149 . 160) (#("tu'xiang'm" 0 10 (fontified t)) . -149) (undo-tree-id443 . -10) (149 . 159) (#("tu'xiang" 0 8 (fontified t)) . -149) (undo-tree-id444 . -8) (149 . 157) (#("tu'xian" 0 7 (fontified t)) . -149) (undo-tree-id445 . -7) (149 . 156) (#("tu'xia" 0 6 (fontified t)) . -149) (undo-tree-id446 . -6) (149 . 155) (#("tu'xi" 0 5 (fontified t)) . -149) (undo-tree-id447 . -5) (149 . 154) (#("tu'x" 0 4 (fontified t)) . -149) (undo-tree-id448 . -4) (149 . 153) (#("tu" 0 2 (fontified t)) . -149) (undo-tree-id449 . -2) (149 . 151) (#("t" 0 1 (fontified t)) . -149) (undo-tree-id450 . -1) (149 . 150) (#("图" 0 1 (fontified t)) . -149) (undo-tree-id451 . -1) (#("像" 0 1 (fontified t)) . -150) (undo-tree-id452 . -1) (#("模" 0 1 (fontified t)) . -151) (undo-tree-id453 . -1) (#("型" 0 1 (fontified t)) . -152) (undo-tree-id454 . -1) 153) nil (25737 28724 47717 0) 0 nil])
([nil nil ((149 . 153)) nil (25737 28724 47630 0) 0 nil])
([nil nil ((#("ji'qi'shi'jue" 0 13 (fontified t)) . -159) (undo-tree-id428 . -13) (159 . 172) (#("ji'qi'shi'ju" 0 12 (fontified t)) . -159) (undo-tree-id429 . -12) (159 . 171) (#("ji'qi'shi'j" 0 11 (fontified t)) . -159) (undo-tree-id430 . -11) (159 . 170) (#("ji'qi'shi" 0 9 (fontified t)) . -159) (undo-tree-id431 . -9) (159 . 168) (#("ji'qi'sh" 0 8 (fontified t)) . -159) (undo-tree-id432 . -8) (159 . 167) (#("ji'qi's" 0 7 (fontified t)) . -159) (undo-tree-id433 . -7) (159 . 166) (#("ji'qi" 0 5 (fontified t)) . -159) (undo-tree-id434 . -5) (159 . 164) (#("ji'q" 0 4 (fontified t)) . -159) (undo-tree-id435 . -4) (159 . 163) (#("ji" 0 2 (fontified t)) . -159) (undo-tree-id436 . -2) (159 . 161) (#("j" 0 1 (fontified t)) . -159) (undo-tree-id437 . -1) (159 . 160) 153) nil (25737 28724 47608 0) 0 nil])
([nil nil ((159 . 163)) nil (25737 28724 47553 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -167) (undo-tree-id427 . -1) (163 . 168)) nil (25737 28724 47546 0) 0 nil])
([nil nil ((167 . 169)) nil (25737 28724 47537 0) 0 nil])
([nil nil ((169 . 173) (#("tu'xiang'chu'li" 0 15 (fontified t)) . -169) (undo-tree-id415 . -15) (169 . 184) (#("tu'xiang'chu'l" 0 14 (fontified t)) . -169) (undo-tree-id416 . -14) (169 . 183) (#("tu'xiang'chu" 0 12 (fontified t)) . -169) (undo-tree-id417 . -12) (169 . 181) (#("tu'xiang'ch" 0 11 (fontified t)) . -169) (undo-tree-id418 . -11) (169 . 180) (#("tu'xiang'c" 0 10 (fontified t)) . -169) (undo-tree-id419 . -10) (169 . 179) (#("tu'xiang" 0 8 (fontified t)) . -169) (undo-tree-id420 . -8) (169 . 177) (#("tu'xian" 0 7 (fontified t)) . -169) (undo-tree-id421 . -7) (169 . 176) (#("tu'xia" 0 6 (fontified t)) . -169) (undo-tree-id422 . -6) (169 . 175) (#("tu'xi" 0 5 (fontified t)) . -169) (undo-tree-id423 . -5) (169 . 174) (#("tu'x" 0 4 (fontified t)) . -169) (undo-tree-id424 . -4) (169 . 173) (#("tu" 0 2 (fontified t)) . -169) (undo-tree-id425 . -2) (169 . 171) (#("t" 0 1 (fontified t)) . -169) (undo-tree-id426 . -1) (169 . 170)) nil (25737 28724 47512 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -177) (undo-tree-id414 . -1) (173 . 178)) nil (25737 28724 47439 0) 0 nil])
([nil nil ((179 . 183) (#("tu'xiang'sheng'cheng" 0 20 (fontified t)) . -179) (undo-tree-id397 . -20) (179 . 199) (#("tu'xiang'sheng'chen" 0 19 (fontified t)) . -179) (undo-tree-id398 . -19) (179 . 198) (#("tu'xiang'sheng'che" 0 18 (fontified t)) . -179) (undo-tree-id399 . -18) (179 . 197) (#("tu'xiang'sheng'ch" 0 17 (fontified t)) . -179) (undo-tree-id400 . -17) (179 . 196) (#("tu'xiang'sheng'c" 0 16 (fontified t)) . -179) (undo-tree-id401 . -16) (179 . 195) (#("tu'xiang'sheng" 0 14 (fontified t)) . -179) (undo-tree-id402 . -14) (179 . 193) (#("tu'xiang'shen" 0 13 (fontified t)) . -179) (undo-tree-id403 . -13) (179 . 192) (#("tu'xiang'she" 0 12 (fontified t)) . -179) (undo-tree-id404 . -12) (179 . 191) (#("tu'xiang'sh" 0 11 (fontified t)) . -179) (undo-tree-id405 . -11) (179 . 190) (#("tu'xiang's" 0 10 (fontified t)) . -179) (undo-tree-id406 . -10) (179 . 189) (#("tu'xiang" 0 8 (fontified t)) . -179) (undo-tree-id407 . -8) (179 . 187) (#("tu'xian" 0 7 (fontified t)) . -179) (undo-tree-id408 . -7) (179 . 186) (#("tu'xia" 0 6 (fontified t)) . -179) (undo-tree-id409 . -6) (179 . 185) (#("tu'xi" 0 5 (fontified t)) . -179) (undo-tree-id410 . -5) (179 . 184) (#("tu'x" 0 4 (fontified t)) . -179) (undo-tree-id411 . -4) (179 . 183) (#("tu" 0 2 (fontified t)) . -179) (undo-tree-id412 . -2) (179 . 181) (#("t" 0 1 (fontified t)) . -179) (undo-tree-id413 . -1) (177 . 180)) nil (25737 28724 47401 0) 0 nil])
([nil nil ((183 . 187)) nil (25737 28724 47308 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -129) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t)) . -130) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#(" " 0 1 (fontified t)) . -131) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("d" 0 1 (fontified t)) . -132) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("）" 0 1 (fontified t)) . -133) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("	" 0 1 (fontified t)) . -134) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 135) nil (25737 28724 47288 0) 0 nil])
([nil nil ((129 . 131)) nil (25737 28724 47212 0) 0 nil])
([nil nil ((131 . 132)) nil (25737 28724 47207 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -143) (undo-tree-id375 . -1) 144) nil (25737 28724 47200 0) 0 nil])
([nil nil ((143 . 144)) nil (25737 28724 47191 0) 0 nil])
([nil nil ((142 . 143)) nil (25737 28724 47185 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -146) (undo-tree-id374 . -1) (143 . 147)) nil (25737 28724 47179 0) 0 nil])
([nil nil ((146 . 148)) nil (25737 28724 47169 0) 0 nil])
([nil nil ((148 . 149)) nil (25737 28724 47164 0) 0 nil])
([nil nil ((163 . 164)) nil (25737 28724 47158 0) 0 nil])
([nil nil ((174 . 175)) nil (25737 28724 47153 0) 0 nil])
([nil nil ((185 . 186)) nil (25737 28724 47147 0) 0 nil])
([nil nil ((#("与" 0 1 (fontified t)) . -136) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("对" 0 1 (fontified t)) . -137) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("话" 0 1 (fontified t)) . -138) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("型" 0 1 (fontified t)) . -139) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("A" 0 1 (fontified t)) . -140) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("I" 0 1 (fontified t)) . -141) (undo-tree-id372 . -1) (undo-tree-id373 . -1) 142) nil (25737 28724 47132 0) 0 nil])
([nil nil ((#("zi'ran'yu'yan" 0 13 (fontified t)) . -143) (undo-tree-id352 . -13) (143 . 156) (#("zi'ran'yu'ya" 0 12 (fontified t)) . -143) (undo-tree-id353 . -12) (143 . 155) (#("zi'ran'yu'y" 0 11 (fontified t)) . -143) (undo-tree-id354 . -11) (143 . 154) (#("zi'ran'yu" 0 9 (fontified t)) . -143) (undo-tree-id355 . -9) (143 . 152) (#("zi'ran'y" 0 8 (fontified t)) . -143) (undo-tree-id356 . -8) (143 . 151) (#("zi'ran" 0 6 (fontified t)) . -143) (undo-tree-id357 . -6) (143 . 149) (#("zi'ra" 0 5 (fontified t)) . -143) (undo-tree-id358 . -5) (143 . 148) (#("zi'r" 0 4 (fontified t)) . -143) (undo-tree-id359 . -4) (143 . 147) (#("zi" 0 2 (fontified t)) . -143) (undo-tree-id360 . -2) (143 . 145) (#("z" 0 1 (fontified t)) . -143) (undo-tree-id361 . -1) (143 . 144) 136) nil (25737 28724 47069 0) 0 nil])
([nil nil ((147 . 149) (#("chu'li" 0 6 (fontified t)) . -147) (undo-tree-id347 . -6) (147 . 153) (#("chu'l" 0 5 (fontified t)) . -147) (undo-tree-id348 . -5) (147 . 152) (#("chu" 0 3 (fontified t)) . -147) (undo-tree-id349 . -3) (147 . 150) (#("ch" 0 2 (fontified t)) . -147) (undo-tree-id350 . -2) (147 . 149) (#("c" 0 1 (fontified t)) . -147) (undo-tree-id351 . -1) (143 . 148)) nil (25737 28724 47003 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -153) (undo-tree-id346 . -1) (149 . 154)) nil (25737 28724 46971 0) 0 nil])
([nil nil ((153 . 155)) nil (25737 28724 46962 0) 0 nil])
([nil nil ((#("zi'ran'yu'yan" 0 13 (fontified t)) . -156) (undo-tree-id336 . -13) (156 . 169) (#("zi'ran'yu'ya" 0 12 (fontified t)) . -156) (undo-tree-id337 . -12) (156 . 168) (#("zi'ran'yu'y" 0 11 (fontified t)) . -156) (undo-tree-id338 . -11) (156 . 167) (#("zi'ran'yu" 0 9 (fontified t)) . -156) (undo-tree-id339 . -9) (156 . 165) (#("zi'ran'y" 0 8 (fontified t)) . -156) (undo-tree-id340 . -8) (156 . 164) (#("zi'ran" 0 6 (fontified t)) . -156) (undo-tree-id341 . -6) (156 . 162) (#("zi'ra" 0 5 (fontified t)) . -156) (undo-tree-id342 . -5) (156 . 161) (#("zi'r" 0 4 (fontified t)) . -156) (undo-tree-id343 . -4) (156 . 160) (#("zi" 0 2 (fontified t)) . -156) (undo-tree-id344 . -2) (156 . 158) (#("z" 0 1 (fontified t)) . -156) (undo-tree-id345 . -1) (155 . 157)) nil (25737 28724 46940 0) 0 nil])
([nil nil ((156 . 160)) nil (25737 28724 46870 0) 0 nil])
([nil nil ((160 . 162) (#("sheng'cheng" 0 11 (fontified t)) . -160) (undo-tree-id326 . -11) (160 . 171) (#("sheng'chen" 0 10 (fontified t)) . -160) (undo-tree-id327 . -10) (160 . 170) (#("sheng'che" 0 9 (fontified t)) . -160) (undo-tree-id328 . -9) (160 . 169) (#("sheng'ch" 0 8 (fontified t)) . -160) (undo-tree-id329 . -8) (160 . 168) (#("sheng'c" 0 7 (fontified t)) . -160) (undo-tree-id330 . -7) (160 . 167) (#("sheng" 0 5 (fontified t)) . -160) (undo-tree-id331 . -5) (160 . 165) (#("shen" 0 4 (fontified t)) . -160) (undo-tree-id332 . -4) (160 . 164) (#("she" 0 3 (fontified t)) . -160) (undo-tree-id333 . -3) (160 . 163) (#("sh" 0 2 (fontified t)) . -160) (undo-tree-id334 . -2) (160 . 162) (#("s" 0 1 (fontified t)) . -160) (undo-tree-id335 . -1) (160 . 161)) nil (25737 28724 46846 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -166) (undo-tree-id325 . -1) (162 . 167)) nil (25737 28724 46768 0) 0 nil])
([nil nil ((166 . 168)) nil (25737 28724 46738 0) 0 nil])
([nil nil ((#("dui'hua" 0 7 (fontified t)) . -169) (undo-tree-id319 . -7) (169 . 176) (#("dui'hu" 0 6 (fontified t)) . -169) (undo-tree-id320 . -6) (169 . 175) (#("dui'h" 0 5 (fontified t)) . -169) (undo-tree-id321 . -5) (169 . 174) (#("dui" 0 3 (fontified t)) . -169) (undo-tree-id322 . -3) (169 . 172) (#("du" 0 2 (fontified t)) . -169) (undo-tree-id323 . -2) (169 . 171) (#("d" 0 1 (fontified t)) . -169) (undo-tree-id324 . -1) (168 . 170)) nil (25737 28724 46723 0) 0 nil])
([nil nil ((171 . 173) (#("mo'xing" 0 7 (fontified t)) . -171) (undo-tree-id313 . -7) (171 . 178) (#("mo'xin" 0 6 (fontified t)) . -171) (undo-tree-id314 . -6) (171 . 177) (#("mo'xi" 0 5 (fontified t)) . -171) (undo-tree-id315 . -5) (171 . 176) (#("mo'x" 0 4 (fontified t)) . -171) (undo-tree-id316 . -4) (171 . 175) (#("mo" 0 2 (fontified t)) . -171) (undo-tree-id317 . -2) (171 . 173) (#("m" 0 1 (fontified t)) . -171) (undo-tree-id318 . -1) (169 . 172)) nil (25737 28724 46672 0) 0 nil])
([nil nil ((#("模" 0 1 (fontified t)) . -171) (undo-tree-id311 . -1) (#("型" 0 1 (fontified t)) . -172) (undo-tree-id312 . -1) 173) nil (25737 28724 46634 0) 0 nil])
([nil nil ((#("ji'qi" 0 5 (fontified t)) . -169) (undo-tree-id307 . -5) (169 . 174) (#("ji'q" 0 4 (fontified t)) . -169) (undo-tree-id308 . -4) (169 . 173) (#("ji" 0 2 (fontified t)) . -169) (undo-tree-id309 . -2) (169 . 171) (#("j" 0 1 (fontified t)) . -169) (undo-tree-id310 . -1) (169 . 170) 170) nil (25737 28724 46614 0) 0 nil])
([nil nil ((169 . 171)) nil (25737 28724 46588 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -166) (undo-tree-id306 . -1) (162 . 167)) nil (25737 28724 46582 0) 0 nil])
([nil nil ((166 . 168)) nil (25737 28724 46572 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -169) (undo-tree-id303 . -1) (169 . 170) (#("yu" 0 2 (fontified t)) . -169) (undo-tree-id304 . -2) (169 . 171) (#("y" 0 1 (fontified t)) . -169) (undo-tree-id305 . -1) (168 . 170)) nil (25737 28724 46562 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -162) (undo-tree-id293 . -1) (#(" " 0 1 (fontified t)) . -163) (undo-tree-id294 . -1) (#(" " 0 1 (fontified t)) . -164) (undo-tree-id295 . -1) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id296 . -1) (#("c" 0 1 (fontified t)) . -166) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("）" 0 1 (fontified t)) . -167) (undo-tree-id299 . -1) (undo-tree-id300 . 1) (undo-tree-id301 . -1) (#("	" 0 1 (fontified t)) . -168) (undo-tree-id302 . -1) 169) nil (25737 28724 46532 0) 0 nil])
([nil nil ((214 . 218)) nil (25737 28724 46487 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -215) (undo-tree-id290 . -1) (#(" " 0 1 (fontified t)) . -216) (undo-tree-id291 . -1) (#(" " 0 1 (fontified t)) . -217) (undo-tree-id292 . -1) 218) nil (25737 28724 46478 0) 0 nil])
([nil nil ((215 . 217)) nil (25737 28724 46460 0) 0 nil])
([nil nil ((217 . 218)) nil (25737 28724 46455 0) 0 nil])
([nil nil ((#("yu'yin" 0 6 (fontified t)) . -218) (undo-tree-id285 . -6) (218 . 224) (#("yu'yi" 0 5 (fontified t)) . -218) (undo-tree-id286 . -5) (218 . 223) (#("yu'y" 0 4 (fontified t)) . -218) (undo-tree-id287 . -4) (218 . 222) (#("yu" 0 2 (fontified t)) . -218) (undo-tree-id288 . -2) (218 . 220) (#("y" 0 1 (fontified t)) . -218) (undo-tree-id289 . -1) (218 . 219)) nil (25737 28724 46441 0) 0 nil])
([nil nil ((220 . 222) (#("he'cheng" 0 8 (fontified t)) . -220) (undo-tree-id278 . -8) (220 . 228) (#("he'chen" 0 7 (fontified t)) . -220) (undo-tree-id279 . -7) (220 . 227) (#("he'che" 0 6 (fontified t)) . -220) (undo-tree-id280 . -6) (220 . 226) (#("he'ch" 0 5 (fontified t)) . -220) (undo-tree-id281 . -5) (220 . 225) (#("he'c" 0 4 (fontified t)) . -220) (undo-tree-id282 . -4) (220 . 224) (#("he" 0 2 (fontified t)) . -220) (undo-tree-id283 . -2) (220 . 222) (#("h" 0 1 (fontified t)) . -220) (undo-tree-id284 . -1) (218 . 221)) nil (25737 28724 46365 0) 0 nil])
([nil nil ((222 . 223)) nil (25737 28724 46251 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -226) (undo-tree-id277 . -1) (223 . 227)) nil (25737 28724 46243 0) 0 nil])
([nil nil ((226 . 228)) nil (25737 28724 46227 0) 0 nil])
([nil nil ((#("T'T'S" 0 5 (fontified t)) . -229) (undo-tree-id274 . -5) (229 . 234) (#("T'T'S" 0 5 (fontified t)) . -229) (undo-tree-id275 . -5) (229 . 234) (#("T" 0 1 (fontified t)) . -229) (undo-tree-id276 . -1) (228 . 230)) nil (25737 28724 46216 0) 0 nil])
([nil nil ((232 . 234) (#("mo'xing" 0 7 (fontified t)) . -232) (undo-tree-id268 . -7) (232 . 239) (#("mo'xin" 0 6 (fontified t)) . -232) (undo-tree-id269 . -6) (232 . 238) (#("mo'xi" 0 5 (fontified t)) . -232) (undo-tree-id270 . -5) (232 . 237) (#("mo'x" 0 4 (fontified t)) . -232) (undo-tree-id271 . -4) (232 . 236) (#("mo" 0 2 (fontified t)) . -232) (undo-tree-id272 . -2) (232 . 234) (#("m" 0 1 (fontified t)) . -232) (undo-tree-id273 . -1) (229 . 233)) nil (25737 28724 46184 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -238) (undo-tree-id267 . -1) (234 . 239)) nil (25737 28724 46144 0) 0 nil])
([nil nil ((238 . 240)) nil (25737 28724 46133 0) 0 nil])
([nil nil ((#("yin'se" 0 6 (fontified t)) . -241) (undo-tree-id262 . -6) (241 . 247) (#("yin's" 0 5 (fontified t)) . -241) (undo-tree-id263 . -5) (241 . 246) (#("yin" 0 3 (fontified t)) . -241) (undo-tree-id264 . -3) (241 . 244) (#("yi" 0 2 (fontified t)) . -241) (undo-tree-id265 . -2) (241 . 243) (#("y" 0 1 (fontified t)) . -241) (undo-tree-id266 . -1) (240 . 242)) nil (25737 28724 46116 0) 0 nil])
([nil nil ((243 . 245) (#("mo'xing" 0 7 (fontified t)) . -243) (undo-tree-id256 . -7) (243 . 250) (#("mo'xin" 0 6 (fontified t)) . -243) (undo-tree-id257 . -6) (243 . 249) (#("mo'xi" 0 5 (fontified t)) . -243) (undo-tree-id258 . -5) (243 . 248) (#("mo'x" 0 4 (fontified t)) . -243) (undo-tree-id259 . -4) (243 . 247) (#("mo" 0 2 (fontified t)) . -243) (undo-tree-id260 . -2) (243 . 245) (#("m" 0 1 (fontified t)) . -243) (undo-tree-id261 . -1) (241 . 244)) nil (25737 28724 46059 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -249) (undo-tree-id255 . -1) (245 . 250)) nil (25737 28724 46021 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -251) (undo-tree-id250 . -1) (251 . 252) (#("ya" 0 2 (fontified t)) . -251) (undo-tree-id251 . -2) (251 . 253) (#("yao" 0 3 (fontified t)) . -251) (undo-tree-id252 . -3) (251 . 254) (#("ya" 0 2 (fontified t)) . -251) (undo-tree-id253 . -2) (251 . 253) (#("y" 0 1 (fontified t)) . -251) (undo-tree-id254 . -1) (249 . 252)) nil (25737 28724 46004 0) 0 nil])
([nil nil ((#("yao'zi" 0 6 (fontified t)) . -252) (undo-tree-id245 . -6) (252 . 258) (#("yao'z" 0 5 (fontified t)) . -252) (undo-tree-id246 . -5) (252 . 257) (#("yao" 0 3 (fontified t)) . -252) (undo-tree-id247 . -3) (252 . 255) (#("ya" 0 2 (fontified t)) . -252) (undo-tree-id248 . -2) (252 . 254) (#("y" 0 1 (fontified t)) . -252) (undo-tree-id249 . -1) (251 . 253)) nil (25737 28724 45967 0) 0 nil])
([nil nil ((255 . 257) (#("yin'yun" 0 7 (fontified t)) . -255) (undo-tree-id237 . -7) (255 . 262) (#("yin'yu" 0 6 (fontified t)) . -255) (undo-tree-id238 . -6) (255 . 261) (#("yin'y" 0 5 (fontified t)) . -255) (undo-tree-id239 . -5) (255 . 260) (#("yin" 0 3 (fontified t)) . -255) (undo-tree-id240 . -3) (255 . 258) (#("yi" 0 2 (fontified t)) . -255) (undo-tree-id241 . -2) (255 . 257) (#("y" 0 1 (fontified t)) . -255) (undo-tree-id242 . -1) (254 . 256) (#("yu" 0 2 (fontified t)) . -254) (undo-tree-id243 . -2) (254 . 256) (#("y" 0 1 (fontified t)) . -254) (undo-tree-id244 . -1) (252 . 255)) nil (25737 28724 45925 0) 0 nil])
([nil nil ((257 . 261)) nil (25737 28724 45879 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -260) (undo-tree-id236 . -1) 261) nil (25737 28724 45873 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -258) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -259) (undo-tree-id235 . -1) 260) nil (25737 28724 45861 0) 0 nil])
([nil nil ((258 . 260)) nil (25737 28724 45846 0) 0 nil])
([nil nil ((260 . 261)) nil (25737 28724 45841 0) 0 nil])
([nil nil ((#("zhan'wang" 0 9 (fontified t)) . -261) (undo-tree-id226 . -9) (261 . 270) (#("zhan'wan" 0 8 (fontified t)) . -261) (undo-tree-id227 . -8) (261 . 269) (#("zhan'wa" 0 7 (fontified t)) . -261) (undo-tree-id228 . -7) (261 . 268) (#("zhan'w" 0 6 (fontified t)) . -261) (undo-tree-id229 . -6) (261 . 267) (#("zhan" 0 4 (fontified t)) . -261) (undo-tree-id230 . -4) (261 . 265) (#("zha" 0 3 (fontified t)) . -261) (undo-tree-id231 . -3) (261 . 264) (#("zh" 0 2 (fontified t)) . -261) (undo-tree-id232 . -2) (261 . 263) (#("z" 0 1 (fontified t)) . -261) (undo-tree-id233 . -1) (261 . 262)) nil (25737 28724 45822 0) 0 nil])
([nil nil ((261 . 263)) nil (25737 28724 45778 0) 0 nil])
([nil nil ((#("zhan'wang" 0 9 (fontified t)) . -261) (undo-tree-id216 . -9) (261 . 270) (#("zhan'wan" 0 8 (fontified t)) . -261) (undo-tree-id217 . -8) (261 . 269) (#("zhan'wa" 0 7 (fontified t)) . -261) (undo-tree-id218 . -7) (261 . 268) (#("zhan'w" 0 6 (fontified t)) . -261) (undo-tree-id219 . -6) (261 . 267) (#("zhan" 0 4 (fontified t)) . -261) (undo-tree-id220 . -4) (261 . 265) (#("zha" 0 3 (fontified t)) . -261) (undo-tree-id221 . -3) (261 . 264) (#("zh" 0 2 (fontified t)) . -261) (undo-tree-id222 . -2) (261 . 263) (#("z" 0 1 (fontified t)) . -261) (undo-tree-id223 . -1) (261 . 262) (#("战" 0 1 (fontified t)) . -261) (undo-tree-id224 . -1) (#("网" 0 1 (fontified t)) . -262) (undo-tree-id225 . -1) 263) nil (25737 28724 45756 0) 0 nil])
([nil nil ((263 . 265) (#("wei'lai" 0 7 (fontified t)) . -263) (undo-tree-id210 . -7) (263 . 270) (#("wei'la" 0 6 (fontified t)) . -263) (undo-tree-id211 . -6) (263 . 269) (#("wei'l" 0 5 (fontified t)) . -263) (undo-tree-id212 . -5) (263 . 268) (#("wei" 0 3 (fontified t)) . -263) (undo-tree-id213 . -3) (263 . 266) (#("w'e" 0 3 (fontified t)) . -263) (undo-tree-id214 . -3) (263 . 266) (#("w" 0 1 (fontified t)) . -263) (undo-tree-id215 . -1) (261 . 264)) nil (25737 28724 45669 0) 0 nil])
([nil nil ((265 . 266)) nil (25737 28724 45633 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -269) (undo-tree-id209 . -1) (266 . 270)) nil (25737 28724 45627 0) 0 nil])
([nil nil ((#("）" 0 1 (fontified nil)) . 272) (271 . 272) (270 . 272) (#("（" 0 1 (fontified nil)) . -270) (269 . 271)) nil (25737 28724 45614 0) 0 nil])
([nil nil ((#("（" 0 1 (fontified t)) . -270) (undo-tree-id205 . -1) (#("）" 0 1 (fontified t)) . -271) (undo-tree-id206 . -1) (undo-tree-id207 . 1) (undo-tree-id208 . -1) 272) nil (25737 28724 45601 0) 0 nil])
([nil nil ((270 . 271)) nil (25737 28724 45582 0) 0 nil])
([nil nil ((271 . 272)) nil (25737 28724 45576 0) 0 nil])
([nil nil ((#("wo'men" 0 6 (fontified t)) . -272) (undo-tree-id200 . -6) (272 . 278) (#("wo'me" 0 5 (fontified t)) . -272) (undo-tree-id201 . -5) (272 . 277) (#("wo'm" 0 4 (fontified t)) . -272) (undo-tree-id202 . -4) (272 . 276) (#("wo" 0 2 (fontified t)) . -272) (undo-tree-id203 . -2) (272 . 274) (#("w" 0 1 (fontified t)) . -272) (undo-tree-id204 . -1) (272 . 273)) nil (25737 28724 45563 0) 0 nil])
([nil nil ((274 . 275) (#("li" 0 2 (fontified t)) . -274) (undo-tree-id198 . -2) (274 . 276) (#("l" 0 1 (fontified t)) . -274) (undo-tree-id199 . -1) (272 . 275)) nil (25737 28724 45520 0) 0 nil])
([nil nil ((#("wo'men'li" 0 9 (fontified t)) . -272) (undo-tree-id188 . -9) (272 . 281) (#("wo'men'l" 0 8 (fontified t)) . -272) (undo-tree-id189 . -8) (272 . 280) (#("wo'men" 0 6 (fontified t)) . -272) (undo-tree-id190 . -6) (272 . 278) (#("wo'me" 0 5 (fontified t)) . -272) (undo-tree-id191 . -5) (272 . 277) (#("wo'm" 0 4 (fontified t)) . -272) (undo-tree-id192 . -4) (272 . 276) (#("wo" 0 2 (fontified t)) . -272) (undo-tree-id193 . -2) (272 . 274) (#("w" 0 1 (fontified t)) . -272) (undo-tree-id194 . -1) (272 . 273) (#("我" 0 1 (fontified t)) . -272) (undo-tree-id195 . -1) (#("们" 0 1 (fontified t)) . -273) (undo-tree-id196 . -1) (#("离" 0 1 (fontified t)) . -274) (undo-tree-id197 . -1) 275) nil (25737 28724 45477 0) 0 nil])
([nil nil ((272 . 275)) nil (25737 28724 45424 0) 0 nil])
([nil nil ((279 . 281) (#("duo'yuan" 0 8 (fontified t)) . -279) (undo-tree-id165 . -8) (279 . 287) (#("duo'yua" 0 7 (fontified t)) . -279) (undo-tree-id166 . -7) (279 . 286) (#("duo'yu" 0 6 (fontified t)) . -279) (undo-tree-id167 . -6) (279 . 285) (#("duo'y" 0 5 (fontified t)) . -279) (undo-tree-id168 . -5) (279 . 284) (#("duo" 0 3 (fontified t)) . -279) (undo-tree-id169 . -3) (279 . 282) (#("du" 0 2 (fontified t)) . -279) (undo-tree-id170 . -2) (279 . 281) (#("d" 0 1 (fontified t)) . -279) (undo-tree-id171 . -1) (277 . 280) (#("hai'you" 0 7 (fontified t)) . -277) (undo-tree-id172 . -7) (277 . 284) (#("hai'yo" 0 6 (fontified t)) . -277) (undo-tree-id173 . -6) (277 . 283) (#("hai'y" 0 5 (fontified t)) . -277) (undo-tree-id174 . -5) (277 . 282) (#("hai" 0 3 (fontified t)) . -277) (undo-tree-id175 . -3) (277 . 280) (#("ha" 0 2 (fontified t)) . -277) (undo-tree-id176 . -2) (277 . 279) (#("h" 0 1 (fontified t)) . -277) (undo-tree-id177 . -1) (275 . 278) (#("bai'lan" 0 7 (fontified t)) . -275) (undo-tree-id178 . -7) (275 . 282) (#("bai'la" 0 6 (fontified t)) . -275) (undo-tree-id179 . -6) (275 . 281) (#("bai'l" 0 5 (fontified t)) . -275) (undo-tree-id180 . -5) (275 . 280) (#("bai" 0 3 (fontified t)) . -275) (undo-tree-id181 . -3) (275 . 278) (#("ba" 0 2 (fontified t)) . -275) (undo-tree-id182 . -2) (275 . 277) (#("b" 0 1 (fontified t)) . -275) (undo-tree-id183 . -1) (275 . 276) (#("bi" 0 2 (fontified t)) . -275) (undo-tree-id184 . -2) (275 . 277) (#("bi'a" 0 4 (fontified t)) . -275) (undo-tree-id185 . -4) (275 . 279) (#("bi" 0 2 (fontified t)) . -275) (undo-tree-id186 . -2) (275 . 277) (#("b" 0 1 (fontified t)) . -275) (undo-tree-id187 . -1) (275 . 276)) nil (25737 28724 45381 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -285) (undo-tree-id164 . -1) (281 . 286)) nil (25737 28724 45258 0) 0 nil])
([nil nil ((285 . 287)) nil (25737 28724 45248 0) 0 nil])
([nil nil ((287 . 288)) nil (25737 28724 45242 0) 0 nil])
([nil nil ((#("hai'you" 0 7 (fontified t)) . -274) (undo-tree-id151 . -7) (274 . 281) (#("hai'yo" 0 6 (fontified t)) . -274) (undo-tree-id152 . -6) (274 . 280) (#("hai'y" 0 5 (fontified t)) . -274) (undo-tree-id153 . -5) (274 . 279) (#("hai" 0 3 (fontified t)) . -274) (undo-tree-id154 . -3) (274 . 277) (#("ha" 0 2 (fontified t)) . -274) (undo-tree-id155 . -2) (274 . 276) (#("h" 0 1 (fontified t)) . -274) (undo-tree-id156 . -1) (274 . 275) (#("离" 0 1 (fontified t)) . -274) (undo-tree-id157 . -1) (#("摆" 0 1 (fontified t)) . -275) (undo-tree-id158 . -1) (#("烂" 0 1 (fontified t)) . -276) (undo-tree-id159 . -1) (#("还" 0 1 (fontified t)) . -277) (undo-tree-id160 . -1) (#("有" 0 1 (fontified t)) . -278) (undo-tree-id161 . -1) (#("多" 0 1 (fontified t)) . -279) (undo-tree-id162 . -1) (#("远" 0 1 (fontified t)) . -280) (undo-tree-id163 . -1) 281) nil (25737 28724 45219 0) 0 nil])
([nil nil ((280 . 282) (#("bai'lan" 0 7 (fontified t)) . -280) (undo-tree-id132 . -7) (280 . 287) (#("bai'la" 0 6 (fontified t)) . -280) (undo-tree-id133 . -6) (280 . 286) (#("bai'l" 0 5 (fontified t)) . -280) (undo-tree-id134 . -5) (280 . 285) (#("bai" 0 3 (fontified t)) . -280) (undo-tree-id135 . -3) (280 . 283) (#("ba" 0 2 (fontified t)) . -280) (undo-tree-id136 . -2) (280 . 282) (#("b" 0 1 (fontified t)) . -280) (undo-tree-id137 . -1) (278 . 281) (#("cai'neng" 0 8 (fontified t)) . -278) (undo-tree-id138 . -8) (278 . 286) (#("cai'nen" 0 7 (fontified t)) . -278) (undo-tree-id139 . -7) (278 . 285) (#("cai'ne" 0 6 (fontified t)) . -278) (undo-tree-id140 . -6) (278 . 284) (#("cai'n" 0 5 (fontified t)) . -278) (undo-tree-id141 . -5) (278 . 283) (#("cai" 0 3 (fontified t)) . -278) (undo-tree-id142 . -3) (278 . 281) (#("ca" 0 2 (fontified t)) . -278) (undo-tree-id143 . -2) (278 . 280) (#("c" 0 1 (fontified t)) . -278) (undo-tree-id144 . -1) (276 . 279) (#("duo'jiu" 0 7 (fontified t)) . -276) (undo-tree-id145 . -7) (276 . 283) (#("duo'ji" 0 6 (fontified t)) . -276) (undo-tree-id146 . -6) (276 . 282) (#("duo'j" 0 5 (fontified t)) . -276) (undo-tree-id147 . -5) (276 . 281) (#("duo" 0 3 (fontified t)) . -276) (undo-tree-id148 . -3) (276 . 279) (#("du" 0 2 (fontified t)) . -276) (undo-tree-id149 . -2) (276 . 278) (#("d" 0 1 (fontified t)) . -276) (undo-tree-id150 . -1) (274 . 277)) nil (25737 28724 45123 0) 0 nil])
([nil nil ((4 . 5) (#("er" 0 2 (fontified t)) . -4) (undo-tree-id130 . -2) (4 . 6) (#("e" 0 1 (fontified t)) . -4) (undo-tree-id131 . -1) (3 . 5)) nil (25737 28724 45004 0) 0 nil])
([nil nil ((#("、" 0 1 (fontified t)) . -3) (undo-tree-id128 . -1) (#("二" 0 1 (fontified t)) . -4) (undo-tree-id129 . -1) 5) nil (25737 28724 44986 0) 0 nil])
([nil nil ((#("shu'ju" 0 6 (fontified t)) . -289) (undo-tree-id123 . -6) (289 . 295) (#("shu'j" 0 5 (fontified t)) . -289) (undo-tree-id124 . -5) (289 . 294) (#("shu" 0 3 (fontified t)) . -289) (undo-tree-id125 . -3) (289 . 292) (#("sh" 0 2 (fontified t)) . -289) (undo-tree-id126 . -2) (289 . 291) (#("s" 0 1 (fontified t)) . -289) (undo-tree-id127 . -1) (289 . 290)) nil (25737 28724 44964 0) 0 nil])
([nil nil ((292 . 295) (#("biao'zhu'ji" 0 11 (fontified t)) . -292) (undo-tree-id112 . -11) (292 . 303) (#("biao'zhu'ji" 0 11 (fontified t)) . -292) (undo-tree-id113 . -11) (292 . 303) (#("biao'zhu" 0 8 (fontified t)) . -292) (undo-tree-id114 . -8) (292 . 300) (#("biao'zh" 0 7 (fontified t)) . -292) (undo-tree-id115 . -7) (292 . 299) (#("biao'z" 0 6 (fontified t)) . -292) (undo-tree-id116 . -6) (292 . 298) (#("biao" 0 4 (fontified t)) . -292) (undo-tree-id117 . -4) (292 . 296) (#("bi'a" 0 4 (fontified t)) . -292) (undo-tree-id118 . -4) (292 . 296) (#("bi" 0 2 (fontified t)) . -292) (undo-tree-id119 . -2) (292 . 294) (#("b" 0 1 (fontified t)) . -292) (undo-tree-id120 . -1) (291 . 293) (#("yu" 0 2 (fontified t)) . -291) (undo-tree-id121 . -2) (291 . 293) (#("y" 0 1 (fontified t)) . -291) (undo-tree-id122 . -1) (289 . 292)) nil (25737 28724 44916 0) 0 nil])
([nil nil ((#(" a）	我们还有多久才能摆烂" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 8 (fontified t) 8 10 (fontified t) 10 12 (fontified t) 12 14 (fontified t)) . 268) (undo-tree-id110 . -14) (undo-tree-id111 . -14)) nil (25737 28724 44854 0) 0 nil])
([nil nil ((284 . 285)) nil (25737 28724 44842 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 298 . 299) (nil fontified nil 297 . 299) (nil fontified nil 295 . 297) (nil fontified nil 293 . 295) (nil fontified nil 291 . 293) (nil fontified nil 289 . 291) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 286 . 287) (nil fontified nil 285 . 286) (285 . 299)) nil (25737 28724 44832 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -285) (undo-tree-id109 . -1) 286) nil (25737 28724 44815 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -285) (undo-tree-id107 . -1) (285 . 286) (#("a" 0 1 (fontified t)) . -285) (undo-tree-id108 . -1) 286) nil (25737 28724 44802 0) 0 nil])
([nil nil ((285 . 286)) nil (25737 28724 44788 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -272) (undo-tree-id105 . -1) (272 . 273) (#("b" 0 1 (fontified t)) . -272) (undo-tree-id106 . -1) 273) nil (25737 28724 44779 0) 0 nil])
([nil nil ((272 . 273)) nil (25737 28724 44765 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -265) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t)) . -266) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t)) . -267) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 268) nil (25737 28724 44754 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -282) (undo-tree-id98 . -1) (278 . 283)) nil (25737 28724 44726 0) 0 nil])
([nil nil ((282 . 284)) nil (25737 28724 44716 0) 0 nil])
([nil nil ((284 . 285)) nil (25737 28724 44710 0) 0 nil])
([nil nil ((285 . 291)) nil (25737 28724 44705 0) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -285) (undo-tree-id92 . -1) (#("h" 0 1 (fontified t)) . -286) (undo-tree-id93 . -1) (#("e" 0 1 (fontified t)) . -287) (undo-tree-id94 . -1) (#("n" 0 1 (fontified t)) . -288) (undo-tree-id95 . -1) (#("l" 0 1 (fontified t)) . -289) (undo-tree-id96 . -1) (#("i" 0 1 (fontified t)) . -290) (undo-tree-id97 . -1) 291) nil (25737 28724 44691 0) 0 nil])
([nil nil ((#("zhen'li" 0 7 (fontified t)) . -285) (undo-tree-id87 . -7) (285 . 292) (#("zhen'l" 0 6 (fontified t)) . -285) (undo-tree-id88 . -6) (285 . 291) (#("zhen" 0 4 (fontified t)) . -285) (undo-tree-id89 . -4) (285 . 289) (#("zhen" 0 4 (fontified nil)) . -285) (285 . 289) (#("zh" 0 2 (fontified t)) . -285) (undo-tree-id90 . -2) (285 . 287) (#("z" 0 1 (fontified t)) . -285) (undo-tree-id91 . -1) (285 . 286)) nil (25737 28724 44644 0) 0 nil])
([nil nil ((293 . 295) (#("shou'li" 0 7 (fontified t)) . -293) (undo-tree-id61 . -7) (293 . 300) (#("shou'l" 0 6 (fontified t)) . -293) (undo-tree-id62 . -6) (293 . 299) (#("shou" 0 4 (fontified t)) . -293) (undo-tree-id63 . -4) (293 . 297) (#("sho" 0 3 (fontified t)) . -293) (undo-tree-id64 . -3) (293 . 296) (#("sh" 0 2 (fontified t)) . -293) (undo-tree-id65 . -2) (293 . 295) (#("s" 0 1 (fontified t)) . -293) (undo-tree-id66 . -1) (290 . 294) (#("shao'shu'ren" 0 12 (fontified t)) . -290) (undo-tree-id67 . -12) (290 . 302) (#("shao'shu're" 0 11 (fontified t)) . -290) (undo-tree-id68 . -11) (290 . 301) (#("shao'shu'r" 0 10 (fontified t)) . -290) (undo-tree-id69 . -10) (290 . 300) (#("shao'shu" 0 8 (fontified t)) . -290) (undo-tree-id70 . -8) (290 . 298) (#("shao'sh" 0 7 (fontified t)) . -290) (undo-tree-id71 . -7) (290 . 297) (#("shao's" 0 6 (fontified t)) . -290) (undo-tree-id72 . -6) (290 . 296) (#("shao" 0 4 (fontified t)) . -290) (undo-tree-id73 . -4) (290 . 294) (#("sha" 0 3 (fontified t)) . -290) (undo-tree-id74 . -3) (290 . 293) (#("sh" 0 2 (fontified t)) . -290) (undo-tree-id75 . -2) (290 . 292) (#("s" 0 1 (fontified t)) . -290) (undo-tree-id76 . -1) (289 . 291) (#("zai" 0 3 (fontified t)) . -289) (undo-tree-id77 . -3) (289 . 292) (#("za" 0 2 (fontified t)) . -289) (undo-tree-id78 . -2) (289 . 291) (#("z" 0 1 (fontified t)) . -289) (undo-tree-id79 . -1) (287 . 290) (#("zhang'wo" 0 8 (fontified t)) . -287) (undo-tree-id80 . -8) (287 . 295) (#("zhang'w" 0 7 (fontified t)) . -287) (undo-tree-id81 . -7) (287 . 294) (#("zhang" 0 5 (fontified t)) . -287) (undo-tree-id82 . -5) (287 . 292) (#("zhan" 0 4 (fontified t)) . -287) (undo-tree-id83 . -4) (287 . 291) (#("zha" 0 3 (fontified t)) . -287) (undo-tree-id84 . -3) (287 . 290) (#("zh" 0 2 (fontified t)) . -287) (undo-tree-id85 . -2) (287 . 289) (#("z" 0 1 (fontified t)) . -287) (undo-tree-id86 . -1) (285 . 288)) nil (25737 28724 44570 0) 0 nil])
([nil nil ((#("）" 0 1 (fontified t)) . 289) (288 . 289) (287 . 289) (#("（" 0 1 (fontified nil)) . -287) (287 . 288)) nil (25737 28724 44429 0) 0 nil])
([nil nil ((#("wei'li" 0 6 (fontified t)) . -288) (undo-tree-id56 . -6) (288 . 294) (#("wei'l" 0 5 (fontified t)) . -288) (undo-tree-id57 . -5) (288 . 293) (#("wei" 0 3 (fontified t)) . -288) (undo-tree-id58 . -3) (288 . 291) (#("w'e" 0 3 (fontified t)) . -288) (undo-tree-id59 . -3) (288 . 291) (#("w" 0 1 (fontified t)) . -288) (undo-tree-id60 . -1) (288 . 289) 289) nil (25737 28724 44411 0) 0 nil])
([nil nil ((288 . 290)) nil (25737 28724 44380 0) 0 nil])
([nil nil ((#("wei'lai" 0 7 (fontified t)) . -288) (undo-tree-id48 . -7) (288 . 295) (#("wei'la" 0 6 (fontified t)) . -288) (undo-tree-id49 . -6) (288 . 294) (#("wei'l" 0 5 (fontified t)) . -288) (undo-tree-id50 . -5) (288 . 293) (#("wei" 0 3 (fontified t)) . -288) (undo-tree-id51 . -3) (288 . 291) (#("w'e" 0 3 (fontified t)) . -288) (undo-tree-id52 . -3) (288 . 291) (#("w" 0 1 (fontified t)) . -288) (undo-tree-id53 . -1) (288 . 289) (#("为" 0 1 (fontified t)) . -288) (undo-tree-id54 . -1) (#("例" 0 1 (fontified t)) . -289) (undo-tree-id55 . -1) 290) nil (25737 28724 44363 0) 0 nil])
([nil nil ((288 . 290)) nil (25737 28724 44319 0) 0 nil])
([nil nil ((#("）" 0 1 (fontified t)) . 299) (298 . 299) (297 . 299) (#("（" 0 1 (fontified nil)) . -297) (297 . 298)) nil (25737 28724 44311 0) 0 nil])
([nil nil ((#("gong'si" 0 7 (fontified t)) . -298) (undo-tree-id42 . -7) (298 . 305) (#("gong's" 0 6 (fontified t)) . -298) (undo-tree-id43 . -6) (298 . 304) (#("gong" 0 4 (fontified t)) . -298) (undo-tree-id44 . -4) (298 . 302) (#("gon" 0 3 (fontified t)) . -298) (undo-tree-id45 . -3) (298 . 301) (#("go" 0 2 (fontified t)) . -298) (undo-tree-id46 . -2) (298 . 300) (#("g" 0 1 (fontified t)) . -298) (undo-tree-id47 . -1) (298 . 299) 299) nil (25737 28724 44292 0) 0 nil])
([nil nil ((298 . 300)) nil (25737 28724 44246 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -282) (undo-tree-id41 . -1) (278 . 283)) nil (25737 28724 44239 0) 0 nil])
([nil nil ((282 . 284)) nil (25737 28724 44228 0) 0 nil])
([nil nil ((#("sheng'cheng" 0 11 (fontified t)) . -285) (undo-tree-id31 . -11) (285 . 296) (#("sheng'chen" 0 10 (fontified t)) . -285) (undo-tree-id32 . -10) (285 . 295) (#("sheng'che" 0 9 (fontified t)) . -285) (undo-tree-id33 . -9) (285 . 294) (#("sheng'ch" 0 8 (fontified t)) . -285) (undo-tree-id34 . -8) (285 . 293) (#("sheng'c" 0 7 (fontified t)) . -285) (undo-tree-id35 . -7) (285 . 292) (#("sheng" 0 5 (fontified t)) . -285) (undo-tree-id36 . -5) (285 . 290) (#("shen" 0 4 (fontified t)) . -285) (undo-tree-id37 . -4) (285 . 289) (#("she" 0 3 (fontified t)) . -285) (undo-tree-id38 . -3) (285 . 288) (#("sh" 0 2 (fontified t)) . -285) (undo-tree-id39 . -2) (285 . 287) (#("s" 0 1 (fontified t)) . -285) (undo-tree-id40 . -1) (284 . 286)) nil (25737 28724 44204 0) 0 nil])
([nil nil ((288 . 291) (#("ju'xian'xing" 0 12 (fontified t)) . -288) (undo-tree-id19 . -12) (288 . 300) (#("ju'xian'xin" 0 11 (fontified t)) . -288) (undo-tree-id20 . -11) (288 . 299) (#("ju'xian'xi" 0 10 (fontified t)) . -288) (undo-tree-id21 . -10) (288 . 298) (#("ju'xian'x" 0 9 (fontified t)) . -288) (undo-tree-id22 . -9) (288 . 297) (#("ju'xian" 0 7 (fontified t)) . -288) (undo-tree-id23 . -7) (288 . 295) (#("ju'xia" 0 6 (fontified t)) . -288) (undo-tree-id24 . -6) (288 . 294) (#("ju'xi" 0 5 (fontified t)) . -288) (undo-tree-id25 . -5) (288 . 293) (#("ju'x" 0 4 (fontified t)) . -288) (undo-tree-id26 . -4) (288 . 292) (#("ju" 0 2 (fontified t)) . -288) (undo-tree-id27 . -2) (288 . 290) (#("j" 0 1 (fontified t)) . -288) (undo-tree-id28 . -1) (287 . 289) (#("de" 0 2 (fontified t)) . -287) (undo-tree-id29 . -2) (287 . 289) (#("d" 0 1 (fontified t)) . -287) (undo-tree-id30 . -1) (285 . 288)) nil (25737 28724 44112 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -295) (undo-tree-id17 . -1) (295 . 296) (#("b" 0 1 (fontified t)) . -295) (undo-tree-id18 . -1) 296) nil (25737 28724 44042 0) 0 nil])
([nil nil ((295 . 296)) nil (25737 28724 44027 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -320) (undo-tree-id15 . -1) (320 . 321) (#("c" 0 1 (fontified t)) . -320) (undo-tree-id16 . -1) 321) nil (25737 28724 44018 0) 0 nil])
([nil nil ((320 . 321)) nil (25737 28724 44002 0) 0 nil])
([nil nil ((#("sheng'cheng" 0 11 (fontified t)) . -285) (undo-tree-id0 . -11) (285 . 296) (#("sheng'chen" 0 10 (fontified t)) . -285) (undo-tree-id1 . -10) (285 . 295) (#("sheng'che" 0 9 (fontified t)) . -285) (undo-tree-id2 . -9) (285 . 294) (#("sheng'ch" 0 8 (fontified t)) . -285) (undo-tree-id3 . -8) (285 . 293) (#("sheng'c" 0 7 (fontified t)) . -285) (undo-tree-id4 . -7) (285 . 292) (#("sheng" 0 5 (fontified t)) . -285) (undo-tree-id5 . -5) (285 . 290) (#("shen" 0 4 (fontified t)) . -285) (undo-tree-id6 . -4) (285 . 289) (#("she" 0 3 (fontified t)) . -285) (undo-tree-id7 . -3) (285 . 288) (#("sh" 0 2 (fontified t)) . -285) (undo-tree-id8 . -2) (285 . 287) (#("s" 0 1 (fontified t)) . -285) (undo-tree-id9 . -1) (285 . 286) (#("A" 0 1 (fontified t)) . -285) (undo-tree-id10 . -1) (285 . 286) (#("A'I" 0 3 (fontified t)) . -285) (undo-tree-id11 . -3) (285 . 288) (#("A" 0 1 (fontified t)) . -285) (undo-tree-id12 . -1) (285 . 286) (#("生" 0 1 (fontified t)) . -285) (undo-tree-id13 . -1) (#("成" 0 1 (fontified t)) . -286) (undo-tree-id14 . -1) 287) nil (25737 28724 43970 0) 0 nil])
([nil nil ((285 . 287)) nil (25737 28724 43859 0) 0 nil])
([nil nil ((237 . 240) (#("S 模" 0 3 (fontified nil)) . -237) (#("S模" 0 1 (fontified t) 1 2 (fontified t)) . -237) (239 . 242) (94 . 97) (#("C 是" 0 3 (fontified nil)) . -94) (#("C是" 0 1 (fontified t) 1 2 (fontified t)) . -94) (96 . 99) (nil fontified t 54 . 55) (#("s概" 0 1 (fontified t) 1 2 (fontified t)) . -53) (55 . 58) (nil fontified t 35 . 36) (#("s机" 0 1 (fontified t) 1 2 (fontified t)) . -34) (36 . 39) (15 . 18) (#("I 是" 0 3 (fontified nil)) . -15) (#("I是" 0 1 (fontified t) 1 2 (fontified t)) . -15) (17 . 20) (#("维v" 0 1 (fontified t) 1 2 (fontified t)) . -48) (50 . 53) (#("知v" 0 1 (fontified t) 1 2 (fontified t)) . -30) (32 . 35) (334 . 335)) nil (25737 28724 43831 0) 0 nil])
([nil nil ((#("di'er'tian" 0 10 (fontified t)) . -342) (undo-tree-id1102 . -10) (342 . 352) (#("di'er'tia" 0 9 (fontified t)) . -342) (undo-tree-id1103 . -9) (342 . 351) (#("di'er'ti" 0 8 (fontified t)) . -342) (undo-tree-id1104 . -8) (342 . 350) (#("di'er't" 0 7 (fontified t)) . -342) (undo-tree-id1105 . -7) (342 . 349) (#("di'er" 0 5 (fontified t)) . -342) (undo-tree-id1106 . -5) (342 . 347) (#("die" 0 3 (fontified t)) . -342) (undo-tree-id1107 . -3) (342 . 345) (#("di" 0 2 (fontified t)) . -342) (undo-tree-id1108 . -2) (342 . 344) (#("d" 0 1 (fontified t)) . -342) (undo-tree-id1109 . -1) (342 . 343) (#("   " 0 3 (fontified t)) . 341) (undo-tree-id1110 . -3) (341 . 345) (#(" " 0 1 (fontified t)) . 340) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (341 . 342) (t 25737 28724 93998 260000)) nil (25737 28794 46340 0) 0 nil])
([nil nil ((346 . 350) (#("zhuan'xiang'ke'cheng" 0 20 (fontified t)) . -346) (undo-tree-id1083 . -20) (346 . 366) (#("zhuan'xiang'ke'chen" 0 19 (fontified t)) . -346) (undo-tree-id1084 . -19) (346 . 365) (#("zhuan'xiang'ke'che" 0 18 (fontified t)) . -346) (undo-tree-id1085 . -18) (346 . 364) (#("zhuan'xiang'ke'ch" 0 17 (fontified t)) . -346) (undo-tree-id1086 . -17) (346 . 363) (#("zhuan'xiang'ke'c" 0 16 (fontified t)) . -346) (undo-tree-id1087 . -16) (346 . 362) (#("zhuan'xiang'ke" 0 14 (fontified t)) . -346) (undo-tree-id1088 . -14) (346 . 360) (#("zhuan'xiang'k" 0 13 (fontified t)) . -346) (undo-tree-id1089 . -13) (346 . 359) (#("zhuan'xiang" 0 11 (fontified t)) . -346) (undo-tree-id1090 . -11) (346 . 357) (#("zhuan'xian" 0 10 (fontified t)) . -346) (undo-tree-id1091 . -10) (346 . 356) (#("zhuan'xia" 0 9 (fontified t)) . -346) (undo-tree-id1092 . -9) (346 . 355) (#("zhuan'xi" 0 8 (fontified t)) . -346) (undo-tree-id1093 . -8) (346 . 354) (#("zhuan'x" 0 7 (fontified t)) . -346) (undo-tree-id1094 . -7) (346 . 353) (#("zhuan" 0 5 (fontified t)) . -346) (undo-tree-id1095 . -5) (346 . 351) (#("zhua'ni" 0 7 (fontified t)) . -346) (undo-tree-id1096 . -7) (346 . 353) (#("zhuan" 0 5 (fontified t)) . -346) (undo-tree-id1097 . -5) (346 . 351) (#("zhua" 0 4 (fontified t)) . -346) (undo-tree-id1098 . -4) (346 . 350) (#("zhu" 0 3 (fontified t)) . -346) (undo-tree-id1099 . -3) (346 . 349) (#("zh" 0 2 (fontified t)) . -346) (undo-tree-id1100 . -2) (346 . 348) (#("z" 0 1 (fontified t)) . -346) (undo-tree-id1101 . -1) (342 . 347)) nil (25737 28794 46244 0) 0 nil])
([nil nil ((350 . 352)) nil (25737 28794 46091 0) 0 nil])
([nil nil ((352 . 354)) nil (25737 28794 46085 0) 0 nil])
([nil nil ((354 . 355)) nil (25737 28794 46079 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -355) (undo-tree-id1082 . -1) (355 . 356)) nil (25737 28794 46071 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -354) (undo-tree-id1081 . -1) 355) nil (25737 28794 46055 0) 0 nil])
([nil nil ((355 . 357) (#("tu'xiang" 0 8 (fontified t)) . -355) (undo-tree-id1074 . -8) (355 . 363) (#("tu'xian" 0 7 (fontified t)) . -355) (undo-tree-id1075 . -7) (355 . 362) (#("tu'xia" 0 6 (fontified t)) . -355) (undo-tree-id1076 . -6) (355 . 361) (#("tu'xi" 0 5 (fontified t)) . -355) (undo-tree-id1077 . -5) (355 . 360) (#("tu'x" 0 4 (fontified t)) . -355) (undo-tree-id1078 . -4) (355 . 359) (#("tu" 0 2 (fontified t)) . -355) (undo-tree-id1079 . -2) (355 . 357) (#("t" 0 1 (fontified t)) . -355) (undo-tree-id1080 . -1) (354 . 356)) nil (25737 28794 46018 0) 0 nil])
([nil nil ((358 . 359) (t 25737 28794 61619 862000)) nil (25737 29284 653211 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -358) (undo-tree-id1327 . -1) 359) nil (25737 29284 653194 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -361) (undo-tree-id1326 . -1) (358 . 362)) nil (25737 29284 653167 0) 0 nil])
([nil nil ((363 . 365) (#("tu'xiang" 0 8 (fontified t)) . -363) (undo-tree-id1319 . -8) (363 . 371) (#("tu'xian" 0 7 (fontified t)) . -363) (undo-tree-id1320 . -7) (363 . 370) (#("tu'xia" 0 6 (fontified t)) . -363) (undo-tree-id1321 . -6) (363 . 369) (#("tu'xi" 0 5 (fontified t)) . -363) (undo-tree-id1322 . -5) (363 . 368) (#("tu'x" 0 4 (fontified t)) . -363) (undo-tree-id1323 . -4) (363 . 367) (#("tu" 0 2 (fontified t)) . -363) (undo-tree-id1324 . -2) (363 . 365) (#("t" 0 1 (fontified t)) . -363) (undo-tree-id1325 . -1) (361 . 364)) nil (25737 29284 653124 0) 0 nil])
([nil nil ((#("）" 0 1 (fontified t)) . -362) (undo-tree-id1316 . -1) (#("图" 0 1 (fontified t)) . -363) (undo-tree-id1317 . -1) (#("像" 0 1 (fontified t)) . -364) (undo-tree-id1318 . -1) 365) nil (25737 29284 653027 0) 0 nil])
([nil nil ((362 . 363)) nil (25737 29284 652987 0) 0 nil])
([nil nil ((#("ji'qi" 0 5 (fontified t)) . -364) (undo-tree-id1312 . -5) (364 . 369) (#("ji'q" 0 4 (fontified t)) . -364) (undo-tree-id1313 . -4) (364 . 368) (#("ji" 0 2 (fontified t)) . -364) (undo-tree-id1314 . -2) (364 . 366) (#("j" 0 1 (fontified t)) . -364) (undo-tree-id1315 . -1) (363 . 365)) nil (25737 29284 652963 0) 0 nil])
([nil nil ((368 . 370) (#("shi'jian" 0 8 (fontified t)) . -368) (undo-tree-id1299 . -8) (368 . 376) (#("shi'jia" 0 7 (fontified t)) . -368) (undo-tree-id1300 . -7) (368 . 375) (#("shi'ji" 0 6 (fontified t)) . -368) (undo-tree-id1301 . -6) (368 . 374) (#("shi'j" 0 5 (fontified t)) . -368) (undo-tree-id1302 . -5) (368 . 373) (#("shi" 0 3 (fontified t)) . -368) (undo-tree-id1303 . -3) (368 . 371) (#("sh" 0 2 (fontified t)) . -368) (undo-tree-id1304 . -2) (368 . 370) (#("s" 0 1 (fontified t)) . -368) (undo-tree-id1305 . -1) (366 . 369) (#("shi'jue" 0 7 (fontified t)) . -366) (undo-tree-id1306 . -7) (366 . 373) (#("shi'ju" 0 6 (fontified t)) . -366) (undo-tree-id1307 . -6) (366 . 372) (#("shi'j" 0 5 (fontified t)) . -366) (undo-tree-id1308 . -5) (366 . 371) (#("shi" 0 3 (fontified t)) . -366) (undo-tree-id1309 . -3) (366 . 369) (#("sh" 0 2 (fontified t)) . -366) (undo-tree-id1310 . -2) (366 . 368) (#("s" 0 1 (fontified t)) . -366) (undo-tree-id1311 . -1) (364 . 367)) nil (25737 29284 652866 0) 0 nil])
([nil nil ((#("事" 0 1 (fontified t)) . -368) (undo-tree-id1297 . -1) (#("件" 0 1 (fontified t)) . -369) (undo-tree-id1298 . -1) 370) nil (25737 29284 652756 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -372) (undo-tree-id1296 . -1) (368 . 373)) nil (25737 29284 652740 0) 0 nil])
([nil nil ((372 . 374)) nil (25737 29284 652729 0) 0 nil])
([nil nil ((#("ji'qi" 0 5 (fontified t)) . -375) (undo-tree-id1292 . -5) (375 . 380) (#("ji'q" 0 4 (fontified t)) . -375) (undo-tree-id1293 . -4) (375 . 379) (#("ji" 0 2 (fontified t)) . -375) (undo-tree-id1294 . -2) (375 . 377) (#("j" 0 1 (fontified t)) . -375) (undo-tree-id1295 . -1) (374 . 376)) nil (25737 29284 652716 0) 0 nil])
([nil nil ((377 . 379) (#("kou'tu" 0 6 (fontified t)) . -377) (undo-tree-id1287 . -6) (377 . 383) (#("kou't" 0 5 (fontified t)) . -377) (undo-tree-id1288 . -5) (377 . 382) (#("kou" 0 3 (fontified t)) . -377) (undo-tree-id1289 . -3) (377 . 380) (#("ko" 0 2 (fontified t)) . -377) (undo-tree-id1290 . -2) (377 . 379) (#("k" 0 1 (fontified t)) . -377) (undo-tree-id1291 . -1) (375 . 378)) nil (25737 29284 652679 0) 0 nil])
([nil nil ((#("机" 0 1 (fontified t)) . -375) (undo-tree-id1283 . -1) (#("器" 0 1 (fontified t)) . -376) (undo-tree-id1284 . -1) (#("抠" 0 1 (fontified t)) . -377) (undo-tree-id1285 . -1) (#("图" 0 1 (fontified t)) . -378) (undo-tree-id1286 . -1) 379) nil (25737 29284 652639 0) 0 nil])
([nil nil ((375 . 381)) nil (25737 29284 652613 0) 0 nil])
([nil nil ((#("wu'ti" 0 5 (fontified t)) . -375) (undo-tree-id1273 . -5) (375 . 380) (#("wu't" 0 4 (fontified t)) . -375) (undo-tree-id1274 . -4) (375 . 379) (#("wu" 0 2 (fontified t)) . -375) (undo-tree-id1275 . -2) (375 . 377) (#("wu" 0 2 (fontified t)) . -375) (undo-tree-id1276 . -2) (375 . 377) (#("w" 0 1 (fontified t)) . -375) (undo-tree-id1277 . -1) (#("u" 0 1 (fontified t)) . -376) (undo-tree-id1278 . -1) (#("t" 0 1 (fontified t)) . -377) (undo-tree-id1279 . -1) (#("i" 0 1 (fontified t)) . -378) (undo-tree-id1280 . -1) (#(" " 0 1 (fontified t)) . -379) (undo-tree-id1281 . -1) (#("s" 0 1 (fontified t)) . -380) (undo-tree-id1282 . -1) 381) nil (25737 29284 652592 0) 0 nil])
([nil nil ((377 . 379) (#("shi'bie" 0 7 (fontified t)) . -377) (undo-tree-id1267 . -7) (377 . 384) (#("shi'bi" 0 6 (fontified t)) . -377) (undo-tree-id1268 . -6) (377 . 383) (#("shi'b" 0 5 (fontified t)) . -377) (undo-tree-id1269 . -5) (377 . 382) (#("shi" 0 3 (fontified t)) . -377) (undo-tree-id1270 . -3) (377 . 380) (#("sh" 0 2 (fontified t)) . -377) (undo-tree-id1271 . -2) (377 . 379) (#("s" 0 1 (fontified t)) . -377) (undo-tree-id1272 . -1) (375 . 378)) nil (25737 29284 652526 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -383) (undo-tree-id1266 . -1) (379 . 384)) nil (25737 29284 652484 0) 0 nil])
([nil nil ((383 . 385)) nil (25737 29284 652473 0) 0 nil])
([nil nil ((385 . 386)) nil (25737 29284 652467 0) 0 nil])
([nil nil ((386 . 393)) nil (25737 29284 652461 0) 0 nil])
([nil nil ((#("tu'xiang" 0 8 (fontified t)) . -386) (undo-tree-id1252 . -8) (386 . 394) (#("tu'xian" 0 7 (fontified t)) . -386) (undo-tree-id1253 . -7) (386 . 393) (#("tu'xia" 0 6 (fontified t)) . -386) (undo-tree-id1254 . -6) (386 . 392) (#("tu'xi" 0 5 (fontified t)) . -386) (undo-tree-id1255 . -5) (386 . 391) (#("tu'x" 0 4 (fontified t)) . -386) (undo-tree-id1256 . -4) (386 . 390) (#("tu" 0 2 (fontified t)) . -386) (undo-tree-id1257 . -2) (386 . 388) (#("t" 0 1 (fontified t)) . -386) (undo-tree-id1258 . -1) (386 . 387) (#("t" 0 1 (fontified t)) . -386) (undo-tree-id1259 . -1) (#("u" 0 1 (fontified t)) . -387) (undo-tree-id1260 . -1) (#("x" 0 1 (fontified t)) . -388) (undo-tree-id1261 . -1) (#("i" 0 1 (fontified t)) . -389) (undo-tree-id1262 . -1) (#("a" 0 1 (fontified t)) . -390) (undo-tree-id1263 . -1) (#("n" 0 1 (fontified t)) . -391) (undo-tree-id1264 . -1) (#("g" 0 1 (fontified t)) . -392) (undo-tree-id1265 . -1) 393) nil (25737 29284 652432 0) 0 nil])
([nil nil ((388 . 390) (#("sheng'cheng" 0 11 (fontified t)) . -388) (undo-tree-id1242 . -11) (388 . 399) (#("sheng'chen" 0 10 (fontified t)) . -388) (undo-tree-id1243 . -10) (388 . 398) (#("sheng'che" 0 9 (fontified t)) . -388) (undo-tree-id1244 . -9) (388 . 397) (#("sheng'ch" 0 8 (fontified t)) . -388) (undo-tree-id1245 . -8) (388 . 396) (#("sheng'c" 0 7 (fontified t)) . -388) (undo-tree-id1246 . -7) (388 . 395) (#("sheng" 0 5 (fontified t)) . -388) (undo-tree-id1247 . -5) (388 . 393) (#("shen" 0 4 (fontified t)) . -388) (undo-tree-id1248 . -4) (388 . 392) (#("she" 0 3 (fontified t)) . -388) (undo-tree-id1249 . -3) (388 . 391) (#("sh" 0 2 (fontified t)) . -388) (undo-tree-id1250 . -2) (388 . 390) (#("s" 0 1 (fontified t)) . -388) (undo-tree-id1251 . -1) (386 . 389)) nil (25737 29284 652334 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -394) (undo-tree-id1241 . -1) (390 . 395)) nil (25737 29284 652267 0) 0 nil])
([nil nil ((394 . 396)) nil (25737 29284 652256 0) 0 nil])
([nil nil ((#("zi'tai" 0 6 (fontified t)) . -397) (undo-tree-id1236 . -6) (397 . 403) (#("zi'ta" 0 5 (fontified t)) . -397) (undo-tree-id1237 . -5) (397 . 402) (#("zi't" 0 4 (fontified t)) . -397) (undo-tree-id1238 . -4) (397 . 401) (#("zi" 0 2 (fontified t)) . -397) (undo-tree-id1239 . -2) (397 . 399) (#("z" 0 1 (fontified t)) . -397) (undo-tree-id1240 . -1) (396 . 398)) nil (25737 29284 652241 0) 0 nil])
([nil nil ((399 . 401) (#("kong'zhi" 0 8 (fontified t)) . -399) (undo-tree-id1229 . -8) (399 . 407) (#("kong'zh" 0 7 (fontified t)) . -399) (undo-tree-id1230 . -7) (399 . 406) (#("kong'z" 0 6 (fontified t)) . -399) (undo-tree-id1231 . -6) (399 . 405) (#("kong" 0 4 (fontified t)) . -399) (undo-tree-id1232 . -4) (399 . 403) (#("kon" 0 3 (fontified t)) . -399) (undo-tree-id1233 . -3) (399 . 402) (#("ko" 0 2 (fontified t)) . -399) (undo-tree-id1234 . -2) (399 . 401) (#("k" 0 1 (fontified t)) . -399) (undo-tree-id1235 . -1) (397 . 400)) nil (25737 29284 652193 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -405) (undo-tree-id1228 . -1) (401 . 406)) nil (25737 29284 652146 0) 0 nil])
([nil nil ((405 . 406)) nil (25737 29284 652135 0) 0 nil])
([nil nil ((406 . 407)) nil (25737 29284 652129 0) 0 nil])
([nil nil ((#("wei" 0 3 (fontified t)) . -408) (undo-tree-id1224 . -3) (408 . 411) (#("wei" 0 3 (fontified t)) . -408) (undo-tree-id1225 . -3) (408 . 411) (#("w'e" 0 3 (fontified t)) . -408) (undo-tree-id1226 . -3) (408 . 411) (#("w" 0 1 (fontified t)) . -408) (undo-tree-id1227 . -1) (407 . 409)) nil (25737 29284 652116 0) 0 nil])
([nil nil ((409 . 411) (#("dong'hua" 0 8 (fontified t)) . -409) (undo-tree-id1217 . -8) (409 . 417) (#("dong'hu" 0 7 (fontified t)) . -409) (undo-tree-id1218 . -7) (409 . 416) (#("dong'h" 0 6 (fontified t)) . -409) (undo-tree-id1219 . -6) (409 . 415) (#("dong" 0 4 (fontified t)) . -409) (undo-tree-id1220 . -4) (409 . 413) (#("don" 0 3 (fontified t)) . -409) (undo-tree-id1221 . -3) (409 . 412) (#("do" 0 2 (fontified t)) . -409) (undo-tree-id1222 . -2) (409 . 411) (#("d" 0 1 (fontified t)) . -409) (undo-tree-id1223 . -1) (408 . 410)) nil (25737 29284 652076 0) 0 nil])
([nil nil ((413 . 414) (#("   " 0 3 (fontified t)) . 412) (undo-tree-id1216 . -3) (411 . 416)) nil (25737 29284 652027 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -413) (undo-tree-id1215 . -1) 414) nil (25737 29284 652014 0) 0 nil])
([nil nil ((413 . 415)) nil (25737 29284 652003 0) 0 nil])
([nil nil ((415 . 416)) nil (25737 29284 651997 0) 0 nil])
([nil nil ((#("yu'yin" 0 6 (fontified t)) . -416) (undo-tree-id1210 . -6) (416 . 422) (#("yu'yi" 0 5 (fontified t)) . -416) (undo-tree-id1211 . -5) (416 . 421) (#("yu'y" 0 4 (fontified t)) . -416) (undo-tree-id1212 . -4) (416 . 420) (#("yu" 0 2 (fontified t)) . -416) (undo-tree-id1213 . -2) (416 . 418) (#("y" 0 1 (fontified t)) . -416) (undo-tree-id1214 . -1) (416 . 417)) nil (25737 29284 651982 0) 0 nil])
([nil nil ((416 . 418)) nil (25737 29284 651942 0) 0 nil])
([nil nil ((418 . 419)) nil (25737 29284 651936 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -422) (undo-tree-id1209 . -1) (419 . 423)) nil (25737 29284 651929 0) 0 nil])
([nil nil ((422 . 424)) nil (25737 29284 651918 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -415) (undo-tree-id1208 . -1) (411 . 416)) nil (25737 29284 651911 0) 0 nil])
([nil nil ((415 . 417)) nil (25737 29284 651898 0) 0 nil])
([nil nil ((418 . 426) (#("wei'ti" 0 6 (fontified t)) . -418) (undo-tree-id1203 . -6) (418 . 424) (#("wei't" 0 5 (fontified t)) . -418) (undo-tree-id1204 . -5) (418 . 423) (#("wei" 0 3 (fontified t)) . -418) (undo-tree-id1205 . -3) (418 . 421) (#("w'e" 0 3 (fontified t)) . -418) (undo-tree-id1206 . -3) (418 . 421) (#("w" 0 1 (fontified t)) . -418) (undo-tree-id1207 . -1) (417 . 419)) nil (25737 29284 651879 0) 0 nil])
([nil nil ((#("wei'tiao" 0 8 (fontified t)) . -418) (undo-tree-id1199 . -8) (418 . 426) (#("wei'tia" 0 7 (fontified t)) . -418) (undo-tree-id1200 . -7) (418 . 425) (#("wei'ti" 0 6 (fontified t)) . -418) (undo-tree-id1201 . -6) (418 . 424) (#("wei'ti'o" 0 8 (fontified t)) . -418) (undo-tree-id1202 . -8) 426) nil (25737 29284 651798 0) 0 nil])
([nil nil ((422 . 424) (#("xun'lian" 0 8 (fontified t)) . -422) (undo-tree-id1186 . -8) (422 . 430) (#("xun'lia" 0 7 (fontified t)) . -422) (undo-tree-id1187 . -7) (422 . 429) (#("xun'li" 0 6 (fontified t)) . -422) (undo-tree-id1188 . -6) (422 . 428) (#("xun'l" 0 5 (fontified t)) . -422) (undo-tree-id1189 . -5) (422 . 427) (#("xun" 0 3 (fontified t)) . -422) (undo-tree-id1190 . -3) (422 . 425) (#("xu" 0 2 (fontified t)) . -422) (undo-tree-id1191 . -2) (422 . 424) (#("x" 0 1 (fontified t)) . -422) (undo-tree-id1192 . -1) (420 . 423) (#("mo'xing" 0 7 (fontified t)) . -420) (undo-tree-id1193 . -7) (420 . 427) (#("mo'xin" 0 6 (fontified t)) . -420) (undo-tree-id1194 . -6) (420 . 426) (#("mo'xi" 0 5 (fontified t)) . -420) (undo-tree-id1195 . -5) (420 . 425) (#("mo'x" 0 4 (fontified t)) . -420) (undo-tree-id1196 . -4) (420 . 424) (#("mo" 0 2 (fontified t)) . -420) (undo-tree-id1197 . -2) (420 . 422) (#("m" 0 1 (fontified t)) . -420) (undo-tree-id1198 . -1) (418 . 421)) nil (25737 29284 651746 0) 0 nil])
([nil nil ((#("训" 0 1 (fontified t)) . -422) (undo-tree-id1184 . -1) (#("练" 0 1 (fontified t)) . -423) (undo-tree-id1185 . -1) 424) nil (25737 29284 651666 0) 0 nil])
([nil nil ((435 . 436)) nil (25737 29284 651651 0) 0 nil])
([nil nil ((#("T'T'S" 0 5 (fontified t)) . -436) (undo-tree-id1178 . -5) (436 . 441) (#("T'T" 0 3 (fontified t)) . -436) (undo-tree-id1179 . -3) (436 . 439) (#("T" 0 1 (fontified t)) . -436) (undo-tree-id1180 . -1) (436 . 437) (#("y" 0 1 (fontified t)) . -436) (undo-tree-id1181 . -1) (436 . 437) (#("yu" 0 2 (fontified t)) . -436) (undo-tree-id1182 . -2) (436 . 438) (#("y" 0 1 (fontified t)) . -436) (undo-tree-id1183 . -1) (436 . 437)) nil (25737 29284 651634 0) 0 nil])
([nil nil ((436 . 439)) nil (25737 29284 651573 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -443) (undo-tree-id1177 . -1) (439 . 444)) nil (25737 29284 651560 0) 0 nil])
([nil nil ((443 . 445)) nil (25737 29284 651539 0) 0 nil])
([nil nil ((#("yin'se" 0 6 (fontified t)) . -446) (undo-tree-id1172 . -6) (446 . 452) (#("yin's" 0 5 (fontified t)) . -446) (undo-tree-id1173 . -5) (446 . 451) (#("yin" 0 3 (fontified t)) . -446) (undo-tree-id1174 . -3) (446 . 449) (#("yi" 0 2 (fontified t)) . -446) (undo-tree-id1175 . -2) (446 . 448) (#("y" 0 1 (fontified t)) . -446) (undo-tree-id1176 . -1) (445 . 447)) nil (25737 29284 651513 0) 0 nil])
([nil nil ((446 . 448)) nil (25737 29284 651469 0) 0 nil])
([nil nil ((448 . 450) (#("pi'pei" 0 6 (fontified t)) . -448) (undo-tree-id1167 . -6) (448 . 454) (#("pi'pe" 0 5 (fontified t)) . -448) (undo-tree-id1168 . -5) (448 . 453) (#("p'i'p" 0 5 (fontified t)) . -448) (undo-tree-id1169 . -5) (448 . 453) (#("pi" 0 2 (fontified t)) . -448) (undo-tree-id1170 . -2) (448 . 450) (#("p" 0 1 (fontified t)) . -448) (undo-tree-id1171 . -1) (448 . 449)) nil (25737 29284 651454 0) 0 nil])
([nil nil ((#("sheng'cheng" 0 11 (fontified t)) . -439) (undo-tree-id1155 . -11) (439 . 450) (#("sheng'chen" 0 10 (fontified t)) . -439) (undo-tree-id1156 . -10) (439 . 449) (#("sheng'che" 0 9 (fontified t)) . -439) (undo-tree-id1157 . -9) (439 . 448) (#("sheng'ch" 0 8 (fontified t)) . -439) (undo-tree-id1158 . -8) (439 . 447) (#("sheng'c" 0 7 (fontified t)) . -439) (undo-tree-id1159 . -7) (439 . 446) (#("sheng" 0 5 (fontified t)) . -439) (undo-tree-id1160 . -5) (439 . 444) (#("shen" 0 4 (fontified t)) . -439) (undo-tree-id1161 . -4) (439 . 443) (#("shen'c" 0 6 (fontified t)) . -439) (undo-tree-id1162 . -6) (439 . 445) (#("shen" 0 4 (fontified t)) . -439) (undo-tree-id1163 . -4) (439 . 443) (#("she" 0 3 (fontified t)) . -439) (undo-tree-id1164 . -3) (439 . 442) (#("sh" 0 2 (fontified t)) . -439) (undo-tree-id1165 . -2) (439 . 441) (#("s" 0 1 (fontified t)) . -439) (undo-tree-id1166 . -1) (439 . 440) 450) nil (25737 29284 651396 0) 0 nil])
([nil nil ((439 . 441)) nil (25737 29284 651278 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -456) (undo-tree-id1154 . -1) (452 . 457)) nil (25737 29284 651265 0) 0 nil])
([nil nil ((456 . 458)) nil (25737 29284 651246 0) 0 nil])
([nil nil ((458 . 459)) nil (25737 29284 651236 0) 0 nil])
([nil nil ((#("A'I" 0 3 (fontified t)) . -459) (undo-tree-id1152 . -3) (459 . 462) (#("A" 0 1 (fontified t)) . -459) (undo-tree-id1153 . -1) (459 . 460)) nil (25737 29284 651221 0) 0 nil])
([nil nil ((461 . 463) (#("ge'shou" 0 7 (fontified t)) . -461) (undo-tree-id1146 . -7) (461 . 468) (#("ge'sho" 0 6 (fontified t)) . -461) (undo-tree-id1147 . -6) (461 . 467) (#("ge'sh" 0 5 (fontified t)) . -461) (undo-tree-id1148 . -5) (461 . 466) (#("ge's" 0 4 (fontified t)) . -461) (undo-tree-id1149 . -4) (461 . 465) (#("ge" 0 2 (fontified t)) . -461) (undo-tree-id1150 . -2) (461 . 463) (#("g" 0 1 (fontified t)) . -461) (undo-tree-id1151 . -1) (459 . 462)) nil (25737 29284 651170 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -467) (undo-tree-id1145 . -1) (463 . 468)) nil (25737 29284 651099 0) 0 nil])
([nil nil ((467 . 469)) nil (25737 29284 651077 0) 0 nil])
([nil nil ((#("A'I" 0 3 (fontified t)) . -470) (undo-tree-id1143 . -3) (470 . 473) (#("A" 0 1 (fontified t)) . -470) (undo-tree-id1144 . -1) (469 . 471)) nil (25737 29284 651056 0) 0 nil])
([nil nil ((472 . 475) (#("bei'jing'yin" 0 12 (fontified t)) . -472) (undo-tree-id1133 . -12) (472 . 484) (#("bei'jing'yi" 0 11 (fontified t)) . -472) (undo-tree-id1134 . -11) (472 . 483) (#("bei'jing'y" 0 10 (fontified t)) . -472) (undo-tree-id1135 . -10) (472 . 482) (#("bei'jing" 0 8 (fontified t)) . -472) (undo-tree-id1136 . -8) (472 . 480) (#("bei'jin" 0 7 (fontified t)) . -472) (undo-tree-id1137 . -7) (472 . 479) (#("bei'ji" 0 6 (fontified t)) . -472) (undo-tree-id1138 . -6) (472 . 478) (#("bei'j" 0 5 (fontified t)) . -472) (undo-tree-id1139 . -5) (472 . 477) (#("bei" 0 3 (fontified t)) . -472) (undo-tree-id1140 . -3) (472 . 475) (#("be" 0 2 (fontified t)) . -472) (undo-tree-id1141 . -2) (472 . 474) (#("b" 0 1 (fontified t)) . -472) (undo-tree-id1142 . -1) (470 . 473)) nil (25737 29284 650952 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -479) (undo-tree-id1132 . -1) (475 . 480)) nil (25737 29284 650886 0) 0 nil])
([nil nil ((479 . 480)) nil (25737 29284 650875 0) 0 nil])
([nil nil ((#("b'g'm" 0 5 (fontified t)) . -472) (undo-tree-id1126 . -5) (472 . 477) (#("b'g" 0 3 (fontified t)) . -472) (undo-tree-id1127 . -3) (472 . 475) (#("b" 0 1 (fontified t)) . -472) (undo-tree-id1128 . -1) (472 . 473) (#("背" 0 1 (fontified t)) . -472) (undo-tree-id1129 . -1) (#("景" 0 1 (fontified t)) . -473) (undo-tree-id1130 . -1) (#("音" 0 1 (fontified t)) . -474) (undo-tree-id1131 . -1) 475) nil (25737 29284 650859 0) 0 nil])
([nil nil ((472 . 475)) nil (25737 29284 650803 0) 0 nil])
([nil nil ((472 . 474) (#("g" 0 1 (fontified t)) . -472) (undo-tree-id1122 . -1) (472 . 473) (#("b" 0 1 (fontified t)) . -472) (undo-tree-id1123 . -1) (#("g" 0 1 (fontified t)) . -473) (undo-tree-id1124 . -1) (#("m" 0 1 (fontified t)) . -474) (undo-tree-id1125 . -1) 475) nil (25737 29284 650776 0) 0 nil])
([nil nil ((#("ge'qu" 0 5 (fontified t)) . -472) (undo-tree-id1119 . -5) (472 . 477) (#("ge'q" 0 4 (fontified t)) . -472) (undo-tree-id1120 . -4) (472 . 476) (#("ge" 0 2 (fontified t)) . -472) (undo-tree-id1121 . -2) 474) nil (25737 29284 650712 0) 0 nil])
([nil nil ((472 . 474)) nil (25737 29284 650679 0) 0 nil])
([nil nil ((479 . 480)) nil (25737 29284 650665 0) 0 nil])
([nil nil ((#("A'I" 0 3 (fontified t)) . -481) (undo-tree-id1117 . -3) (481 . 484) (#("A" 0 1 (fontified t)) . -481) (undo-tree-id1118 . -1) (480 . 482)) nil (25737 29284 650638 0) 0 nil])
([nil nil ((483 . 485) (#("ge'ci" 0 5 (fontified t)) . -483) (undo-tree-id1113 . -5) (483 . 488) (#("ge'c" 0 4 (fontified t)) . -483) (undo-tree-id1114 . -4) (483 . 487) (#("ge" 0 2 (fontified t)) . -483) (undo-tree-id1115 . -2) (483 . 485) (#("g" 0 1 (fontified t)) . -483) (undo-tree-id1116 . -1) (481 . 484)) nil (25737 29284 650540 0) 0 nil])
([nil nil ((473 . 476) (#("I 歌" 0 3 (fontified nil)) . -473) (#("I歌" 0 1 (fontified t) 1 2 (fontified t)) . -473) (475 . 478) (461 . 464) (#("I 歌" 0 3 (fontified nil)) . -461) (#("I歌" 0 1 (fontified t) 1 2 (fontified t)) . -461) (463 . 466) (438 . 441) (#("S 生" 0 3 (fontified nil)) . -438) (#("S生" 0 1 (fontified t) 1 2 (fontified t)) . -438) (440 . 443) (485 . 486)) nil (25737 29284 650451 0) 0 nil])
([nil nil ((488 . 492) (t 25737 29284 690184 209000)) nil (25737 29335 578550 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -492) (undo-tree-id1328 . -1) (492 . 493)) nil (25737 29335 578530 0) 0 nil])
([nil nil ((492 . 494)) nil (25737 29335 578486 0) 0 nil])
([nil nil ((494 . 495)) nil (25737 29335 578478 0) 0 nil])
([nil nil ((99 . 100)) nil (25737 29335 578468 0) 0 nil])
([nil nil ((486 . 489) (#("I 歌" 0 3 (fontified nil)) . -486) (#("I歌" 0 1 (fontified t) 1 2 (fontified t)) . -486) (488 . 491) 496) nil (25737 29335 578446 0) 0 nil])
([nil nil ((#("ge'sheng" 0 8 (fontified t)) . -464) (undo-tree-id1335 . -8) (464 . 472) (#("ge'sheng" 0 8 (fontified t)) . -464) (undo-tree-id1336 . -8) (464 . 472) (#("ge'she" 0 6 (fontified t)) . -464) (undo-tree-id1337 . -6) (464 . 470) (#("ge'sh" 0 5 (fontified t)) . -464) (undo-tree-id1338 . -5) (464 . 469) (#("ge's" 0 4 (fontified t)) . -464) (undo-tree-id1339 . -4) (464 . 468) (#("ge" 0 2 (fontified t)) . -464) (undo-tree-id1340 . -2) (464 . 466) (#("g" 0 1 (fontified t)) . -464) (undo-tree-id1341 . -1) (464 . 465) (#("歌" 0 1 (fontified t)) . -464) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (#("手" 0 1 (fontified t)) . -465) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) 466 (t 25737 29335 605072 608000)) nil (25737 29442 865491 0) 0 nil])
([nil nil ((464 . 466)) nil (25737 29442 865410 0) 0 nil])
([nil nil ((#("A'I" 0 3 (fontified t)) . -497) (undo-tree-id1333 . -3) (497 . 500) (#("A" 0 1 (fontified t)) . -497) (undo-tree-id1334 . -1) (497 . 498) 490) nil (25737 29442 865397 0) 0 nil])
([nil nil ((499 . 501) (#("ge'ci" 0 5 (fontified t)) . -499) (undo-tree-id1329 . -5) (499 . 504) (#("ge'c" 0 4 (fontified t)) . -499) (undo-tree-id1330 . -4) (499 . 503) (#("ge" 0 2 (fontified t)) . -499) (undo-tree-id1331 . -2) (499 . 501) (#("g" 0 1 (fontified t)) . -499) (undo-tree-id1332 . -1) (497 . 500)) nil (25737 29442 865357 0) 0 nil])
([nil nil ((498 . 501) (#("I 歌" 0 3 (fontified nil)) . -498) (#("I歌" 0 1 (fontified t) 1 2 (fontified t)) . -498) (500 . 503) 501) nil (25737 29442 865264 0) 0 nil])
([nil nil ((#("shou" 0 4 (fontified t)) . -501) (undo-tree-id1346 . -4) (501 . 505) (#("sho" 0 3 (fontified t)) . -501) (undo-tree-id1347 . -3) (501 . 504) (#("sh" 0 2 (fontified t)) . -501) (undo-tree-id1348 . -2) (501 . 503) (#("s" 0 1 (fontified t)) . -501) (undo-tree-id1349 . -1) (501 . 502) (#("词" 0 1 (fontified t)) . -501) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) 502 (t 25737 29442 899413 280000)) nil (25737 29602 232634 0) 0 nil])
([nil current ((501 . 502)) nil (25737 29602 232554 0) 0 nil])
nil

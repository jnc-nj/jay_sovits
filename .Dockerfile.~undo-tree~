(undo-tree-save-format-version . 1)
"c378424291dc2045bcc3002b81f7ef11421789a1"
[nil nil nil nil (25730 56698 849093 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 38 . 39) (nil fontified nil 1 . 39) (1 . 39) (t 25730 56681 464422 718000)) nil (25730 56698 849081 0) 0 nil])
([nil nil ((39 . 40)) nil (25730 56698 849061 0) 0 nil])
([nil nil ((40 . 41) (t 25730 56698 857773 232000)) nil (25730 56783 734958 0) 0 nil])
([nil nil ((41 . 55)) nil (25730 56783 734950 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 101 . 102) (nil fontified nil 55 . 102) (55 . 102)) nil (25730 56783 734940 0) 0 nil])
([nil nil ((102 . 103)) nil (25730 56783 734930 0) 0 nil])
([nil nil ((103 . 124)) nil (25730 56783 734922 0) 0 nil])
([nil nil ((124 . 138)) nil (25730 56783 734911 0) 0 nil])
([nil nil ((138 . 140)) nil (25730 56783 734892 0) 0 nil])
([nil nil ((103 . 104) (t 25730 56783 738347 79000)) nil (25730 56797 643381 0) 0 nil])
([nil nil ((103 . 104)) nil (25730 56797 643343 0) 0 nil])
([nil nil ((104 . 109)) nil (25730 56797 643313 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -108) (undo-tree-id0 . -1) 109) nil (25730 56797 643302 0) 0 nil])
([nil nil ((108 . 123)) nil (25730 56797 643273 0) 0 nil])
([nil nil ((123 . 124)) nil (25730 56797 643263 0) 0 nil])
([nil nil ((161 . 162)) nil (25730 56797 643246 0) 0 nil])
([nil nil ((124 . 125) (t 25730 56797 647253 837000)) nil (25730 56922 799406 0) 0 nil])
([nil nil ((125 . 140)) nil (25730 56922 799394 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -135) (undo-tree-id3 . -1) (#("d" 0 1 (fontified t)) . -136) (undo-tree-id4 . -1) (#("a" 0 1 (fontified t)) . -137) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t)) . -138) (undo-tree-id6 . -1) (#("a" 0 1 (fontified t)) . -139) (undo-tree-id7 . -1) 140) nil (25730 56922 799372 0) 0 nil])
([nil nil ((135 . 144)) nil (25730 56922 799315 0) 0 nil])
([nil nil ((144 . 150)) nil (25730 56922 799302 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -102) (undo-tree-id2 . -1) 103) nil (25730 56922 799283 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -122) (undo-tree-id1 . -1) 123) nil (25730 56922 799249 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -186) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 187 (t 25730 56922 804117 604000)) nil (25730 56973 952298 0) 0 nil])
([nil nil ((186 . 187) (t 25730 56973 956456 43000)) nil (25730 56989 476104 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -186) (undo-tree-id77 . -1) 187) nil (25730 56989 476094 0) 0 nil])
([nil nil ((186 . 192)) nil (25730 56989 476073 0) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 199) (198 . 199) (197 . 199) (#("[" 0 1 (fontified nil)) . -197) (192 . 198)) nil (25730 56989 476064 0) 0 nil])
([nil nil ((199 . 208) (198 . 200) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -198) (198 . 199)) nil (25730 56989 476047 0) 0 nil])
([nil nil ((210 . 211)) nil (25730 56989 476027 0) 0 nil])
([nil nil ((#("/bin/bash" 0 9 (face font-lock-string-face fontified t)) . 199) (undo-tree-id78 . -9) (undo-tree-id79 . -8) (undo-tree-id80 . -9) (undo-tree-id81 . -8) (t 25730 56989 507184 245000)) nil (25730 61254 160846 0) 0 nil])
([nil nil ((199 . 205)) nil (25730 61254 160801 0) 0 nil])
([nil nil ((#("python" 0 6 (face font-lock-string-face fontified t)) . -199) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -3) (undo-tree-id85 . -6) (undo-tree-id86 . -3) 205 (t 25730 61254 167605 892000)) nil (25730 61586 124945 0) 0 nil])
([nil nil ((199 . 208)) nil (25730 61586 124827 0) 0 nil])
([nil nil ((#("RUN mkdir dataset_raw/jay
" 0 3 (face font-lock-keyword-face fontified t) 3 25 (fontified t) 25 26 (fontified t)) . 123) (undo-tree-id87 . -26) (undo-tree-id88 . -26) (undo-tree-id89 . -26) (undo-tree-id90 . -26) (t 25730 61586 130306 249000)) nil (25730 62347 621676 0) 0 nil])
([nil nil ((#("WORKDIR so-vits-svc
" 0 7 (face font-lock-keyword-face fontified t) 7 19 (fontified t) 19 20 (fontified t)) . 103) (undo-tree-id91 . -20) (undo-tree-id92 . -20) (undo-tree-id93 . -20) (undo-tree-id94 . -20) (t 25730 62347 627431 513000)) nil (25730 62363 756227 0) 0 nil])
([nil nil ((107 . 125)) nil (25730 62363 756183 0) 0 nil])
([nil nil ((183 . 185) (182 . 184) (#("\"" 0 1 (fontified nil)) . -182) (181 . 183) (t 25730 62363 760722 308000)) nil (25730 63497 205099 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . -183) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -184) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 185 (t 25730 63497 210982 394000)) nil (25730 63773 403327 0) 0 nil])
([nil nil ((183 . 187)) nil (25730 63773 403289 0) 0 nil])
([nil nil ((190 . 192) (189 . 191) (#("\"" 0 1 (fontified nil)) . -189) (188 . 190)) nil (25730 63773 403280 0) 0 nil])
([nil nil ((195 . 204) (194 . 196) (#("\"" 0 1 (fontified nil)) . -194) (193 . 195)) nil (25730 63773 403596 0) 0 nil])
([nil nil ((182 . 183) (t 25730 63774 842063 452000)) nil (25730 63831 50373 0) 0 nil] [nil nil ((#("FROM nvcr.io/nvidia/tensorrt:22.04-py3

RUN git clone https://github.com/svc-develop-team/so-vits-svc
RUN cd so-vits-svc && pip install -r requirements.txt

ENTRYPOINT [\"/bin/bash\",\"tail\",\"-f\",\"/dev/null\"]
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 37 (face dockerfile-image-name fontified t) 37 38 (face dockerfile-image-name rear-nonsticky t fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 43 (face font-lock-keyword-face fontified t) 43 54 (fontified t) 54 100 (fontified t) 100 101 (rear-nonsticky t fontified t) 101 102 (fontified t) 102 105 (face font-lock-keyword-face fontified t) 105 127 (fontified t) 127 156 (fontified t) 156 157 (fontified t) 157 167 (face font-lock-keyword-face fontified t) 167 168 (fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t) 169 179 (face font-lock-string-face fontified t) 179 180 (face font-lock-string-face fontified t) 180 181 (fontified t) 181 186 (face font-lock-string-face fontified t) 186 187 (face font-lock-string-face fontified t) 187 188 (fontified t) 188 191 (face font-lock-string-face fontified t) 191 192 (face font-lock-string-face fontified t) 192 193 (fontified t) 193 203 (face font-lock-string-face fontified t) 203 204 (face font-lock-string-face fontified t) 204 205 (face (rainbow-delimiters-depth-1-face) fontified t) 205 206 (fontified t)) . 1) (undo-tree-id95 . -206) (undo-tree-id96 . -157) (undo-tree-id97 . -206) (undo-tree-id98 . -170) (undo-tree-id99 . -179) (undo-tree-id100 . -206) (undo-tree-id101 . -102) (undo-tree-id102 . -5) (undo-tree-id103 . -102) (undo-tree-id104 . -206) (undo-tree-id105 . -206) (undo-tree-id106 . -102) (undo-tree-id107 . -124) (undo-tree-id108 . -206) (undo-tree-id109 . -39) (undo-tree-id110 . -206) (undo-tree-id111 . -206) (undo-tree-id112 . -39) (undo-tree-id113 . -206) (undo-tree-id114 . -206) (undo-tree-id115 . -182) (undo-tree-id116 . -206) (undo-tree-id117 . -182) (undo-tree-id118 . -206) (undo-tree-id119 . -182) (undo-tree-id120 . -206) (undo-tree-id121 . -206) (undo-tree-id122 . -206)) ((1 . 207)) (25730 63773 403233 0) 0 nil])
([nil nil ((183 . 185) (182 . 184) (#("\"" 0 1 (fontified nil)) . -182) (182 . 183)) nil (25730 63831 50350 0) 0 nil])
nil
([nil nil ((#(",\"-c\",\"tail\",\"-f\",\"/dev/null\"" 0 1 (fontified t) 1 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (fontified t) 6 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (fontified t) 18 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t)) . 181) (undo-tree-id132 . -29) (undo-tree-id133 . -7) (undo-tree-id134 . -7) (undo-tree-id135 . -7) (undo-tree-id136 . -4) (undo-tree-id137 . -29) (t 25730 63831 54620 200000)) nil (25730 63879 288443 0) 0 nil])
([nil nil ((183 . 184) (t 25730 63879 293495 940000)) nil (25730 64133 522970 0) 0 nil])
([nil nil ((184 . 196)) nil (25730 64133 522962 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-comment-face fontified t)) . -193) (undo-tree-id138 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -194) (undo-tree-id139 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -195) (undo-tree-id140 . -1) 196) nil (25730 64133 522951 0) 0 nil])
([nil nil ((193 . 203)) nil (25730 64133 522920 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 254 . 255) (nil fontified nil 232 . 255) (nil fontified nil 203 . 232) (203 . 255)) nil (25730 64133 522912 0) 0 nil])
([nil nil ((255 . 259)) nil (25730 64133 522903 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 300 . 301) (nil fontified nil 285 . 301) (nil fontified nil 273 . 285) (nil fontified nil 259 . 273) (259 . 301)) nil (25730 64133 522895 0) 0 nil])
([nil nil ((301 . 305)) nil (25730 64133 522885 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 354 . 355) (nil fontified nil 335 . 355) (nil fontified nil 323 . 335) (nil fontified nil 305 . 323) (305 . 355)) nil (25730 64133 522877 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 209 . 210) (nil fontified nil 200 . 210) (200 . 210)) nil (25730 64133 522865 0) 0 nil])
([nil nil ((210 . 211)) nil (25730 64133 522856 0) 0 nil])
([nil nil ((366 . 374)) nil (25730 64133 522849 0) 0 nil])
([nil nil ((211 . 224)) nil (25730 64133 522842 0) 0 nil])
([nil nil ((224 . 234)) nil (25730 64133 522833 0) 0 nil])
([nil nil ((397 . 398)) nil (25730 64133 522815 0) 0 nil])
([nil nil ((197 . 206) (t 25730 64133 560229 276000)) nil (25732 56 715318 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -205) (undo-tree-id141 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -206) (undo-tree-id142 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -207) (undo-tree-id143 . -1) 208) nil (25732 56 715304 0) 0 nil])
([nil nil ((395 . 399)) nil (25732 56 715270 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 446 . 447) (nil fontified nil 416 . 447) (nil fontified nil 399 . 416) (399 . 447)) nil (25732 56 715258 0) 0 nil])
([nil nil ((447 . 448)) nil (25732 56 715236 0) 0 nil])
([nil nil ((448 . 451) (t 25732 56 723235 809000)) nil (25732 200 599651 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 498 . 499) (nil fontified nil 468 . 499) (nil fontified nil 451 . 468) (451 . 499)) nil (25732 200 599631 0) 0 nil])
([nil nil ((260 . 264) (t 25732 200 606292 281000)) nil (25732 272 920094 0) 0 nil])
([nil nil ((504 . 507) (t 25732 272 924640 74000)) nil (25732 1313 534373 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 558 . 559) (nil fontified nil 526 . 559) (nil fontified nil 507 . 526) (507 . 559)) nil (25732 1313 534350 0) 0 nil])
([nil nil ((559 . 560)) nil (25732 1313 534317 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -213) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -214) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("l" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -215) (undo-tree-id150 . -1) 216 (t 25732 1313 541902 584000)) nil (25732 1512 404686 0) 0 nil])
([nil nil ((213 . 214)) nil (25732 1512 404629 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 572 . 573) (nil fontified nil 558 . 573) (558 . 573) (t 25732 1512 408948 400000)) nil (25732 1662 721121 0) 0 nil])
([nil nil ((573 . 574)) nil (25732 1662 721067 0) 0 nil])
([nil nil ((215 . 228) (t 25732 1662 735832 423000)) nil (25732 22398 258774 0) 0 nil])
([nil nil ((595 . 596)) nil (25732 22398 258765 0) 0 nil])
([nil nil ((596 . 598)) nil (25732 22398 258757 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 803 . 804) (nil fontified nil 598 . 804) (598 . 804)) nil (25732 22398 258748 0) 0 nil])
([nil nil ((645 . 647)) nil (25732 22398 258737 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -692) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("
" 0 1 (fontified t)) . -693) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 694) nil (25732 22398 258722 0) 0 nil])
([nil nil ((693 . 695)) nil (25732 22398 258675 0) 0 nil])
([nil nil ((806 . 807) 695) nil (25732 22398 258652 0) 0 nil])
([nil nil ((699 . 700)) nil (25732 22402 851431 0) 0 nil])
([nil nil ((#("!" 0 1 (face font-lock-comment-face fontified t)) . -699) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 700) nil (25732 22402 851406 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -735) (undo-tree-id174 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -736) (undo-tree-id175 . -1) (#("4" 0 1 (face font-lock-comment-face fontified t)) . -737) (undo-tree-id176 . -1) 738 (t 25732 22404 104038 624000)) nil (25732 22415 945894 0) 0 nil])
([nil nil ((735 . 738)) nil (25732 22415 945850 0) 0 nil])
([nil nil ((570 . 574) (t 25732 22415 952393 465000)) nil (25732 22468 157881 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 650 . 651) (nil fontified nil 624 . 651) (nil fontified nil 574 . 624) (574 . 651)) nil (25732 22468 157861 0) 0 nil])
([nil nil ((888 . 889) (t 25732 22468 164354 429000)) nil (25732 22524 919951 0) 0 nil])
([nil nil ((889 . 891)) nil (25732 22524 919943 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 938 . 939) (nil fontified nil 891 . 939) (891 . 939)) nil (25732 22524 919933 0) 0 nil])
([nil nil ((939 . 940)) nil (25732 22524 919914 0) 0 nil])
([nil nil ((#("君の知らない物語-src" 0 12 (face font-lock-comment-face fontified t)) . 856) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (t 25732 22524 959786 722000)) nil (25732 22821 431265 0) 0 nil])
([nil nil ((856 . 860)) nil (25732 22821 431226 0) 0 nil])
([nil nil ((#("nen" 0 3 (face font-lock-comment-face fontified t)) . -875) (undo-tree-id177 . -3) (undo-tree-id178 . -3) 878) nil (25732 22821 431199 0) 0 nil])
([nil nil ((875 . 878)) nil (25732 22821 431153 0) 0 nil])
([nil nil ((652 . 655)) nil (25732 22821 431141 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 736 . 737) (nil fontified nil 706 . 737) (nil fontified nil 655 . 706) (655 . 737)) nil (25732 22821 431119 0) 0 nil])
([nil nil ((737 . 738)) nil (25732 22821 431086 0) 0 nil])
([nil nil ((965 . 967) (t 25732 22821 440132 787000)) nil (25732 23118 144228 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -966) (undo-tree-id186 . -1) 967) nil (25732 23118 144220 0) 0 nil])
([nil nil ((966 . 969)) nil (25732 23118 144209 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -968) (undo-tree-id185 . -1) 969) nil (25732 23118 144202 0) 0 nil])
([nil nil ((968 . 974)) nil (25732 23118 144192 0) 0 nil])
([nil nil ((976 . 985) (975 . 977) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -975) (974 . 976)) nil (25732 23118 144184 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 998 . 999) (nil fontified nil 985 . 999) (985 . 999)) nil (25732 23118 144174 0) 0 nil])
([nil nil ((985 . 995)) nil (25732 23118 144166 0) 0 nil])
([nil nil ((1010 . 1013)) nil (25732 23118 144161 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -1012) (undo-tree-id184 . -1) 1013) nil (25732 23118 144153 0) 0 nil])
([nil nil ((1016 . 1033) (1015 . 1017) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1015) (1012 . 1016)) nil (25732 23118 144138 0) 0 nil])
([nil nil ((1033 . 1038)) nil (25732 23118 144128 0) 0 nil])
([nil nil ((#("json" 0 4 (face font-lock-comment-face fontified t)) . -1034) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) 1038) nil (25732 23118 144115 0) 0 nil])
([nil nil ((1034 . 1038)) nil (25732 23118 144078 0) 0 nil])
([nil nil ((#("-s \"jay\" " 0 3 (face font-lock-comment-face fontified t) 3 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face fontified t rear-nonsticky t) 8 9 (face font-lock-comment-face fontified t)) . 957) (undo-tree-id225 . -9) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -9) (t 25732 23118 149877 549000)) nil (25733 18387 619855 0) 0 nil])
([nil nil ((1030 . 1031)) nil (25733 18387 619836 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1039 . 1040) (nil fontified nil 1039 . 1040) (nil fontified nil 1038 . 1039) (nil fontified nil 1034 . 1038) (nil fontified nil 1031 . 1034) (1031 . 1040)) nil (25733 18387 619828 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1039) (undo-tree-id224 . -1) 1040) nil (25733 18387 619816 0) 0 nil])
([nil nil ((1040 . 1041)) nil (25733 18387 619806 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1219 . 1220) (nil fontified nil 1219 . 1220) (nil fontified nil 1218 . 1219) (nil fontified nil 1214 . 1218) (nil fontified nil 1211 . 1214) (nil fontified nil 1209 . 1211) (nil fontified nil 1186 . 1209) (nil fontified nil 1180 . 1186) (nil fontified nil 1179 . 1180) (nil fontified nil 1166 . 1179) (nil fontified nil 1146 . 1166) (nil fontified nil 1137 . 1146) (nil fontified nil 1131 . 1137) (nil fontified nil 1121 . 1131) (nil fontified nil 1117 . 1121) (nil fontified nil 1096 . 1117) (nil fontified nil 1092 . 1096) (nil fontified nil 1070 . 1092) (nil fontified nil 1042 . 1070) (nil fontified nil 1040 . 1042) (1040 . 1220)) nil (25733 18387 619792 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1219) (undo-tree-id223 . -1) 1220) nil (25733 18387 619764 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1083) (undo-tree-id219 . -1) (#("8" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id220 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1085) (undo-tree-id221 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1086) (undo-tree-id222 . -1) 1087) nil (25733 18387 619749 0) 0 nil])
([nil nil ((1083 . 1087)) nil (25733 18387 619722 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1082) (undo-tree-id214 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1083) (undo-tree-id215 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id216 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1085) (undo-tree-id217 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1086) (undo-tree-id218 . -1) 1087) nil (25733 18387 619710 0) 0 nil])
([nil nil ((1082 . 1088)) nil (25733 18387 619683 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1083) (undo-tree-id213 . -1) 1084) nil (25733 18387 619676 0) 0 nil])
([nil nil ((1083 . 1084)) nil (25733 18387 619666 0) 0 nil])
([nil nil ((#("-shd -dm \"logs/44k/diffusion/model_62000.pt\" -dc \"configs/diffusion.yaml\"" 0 9 (face font-lock-comment-face fontified t) 9 29 (face font-lock-comment-face fontified t) 29 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t rear-nonsticky t) 43 49 (face font-lock-comment-face fontified t) 49 72 (face font-lock-comment-face fontified t) 72 73 (face font-lock-comment-face fontified t)) . -1138) (undo-tree-id211 . -73) (undo-tree-id212 . -73) 1211) nil (25733 18387 619647 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1138) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 1139) nil (25733 18387 619610 0) 0 nil])
([nil nil ((1146 . 1149) (t 25733 18387 632474 585000)) nil (25733 18832 7922 0) 0 nil])
([nil nil ((228 . 241)) nil (25733 18832 7904 0) 0 nil])
([nil nil ((1214 . 1215) (t 25733 18832 14590 626000)) nil (25733 18881 434194 0) 0 nil])
([nil nil ((1215 . 1236)) nil (25733 18881 434177 0) 0 nil])
([nil nil ((1236 . 1257)) nil (25733 18881 434170 0) 0 nil])
([nil nil ((1257 . 1278)) nil (25733 18881 434159 0) 0 nil])
([nil nil ((1278 . 1284)) nil (25733 18881 434142 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -915) (undo-tree-id234 . -1) (#("8" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id235 . -1) (#("8" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id236 . -1) 918 (t 25733 18881 442335 488000)) nil (25733 23273 573723 0) 0 nil])
([nil nil ((915 . 919)) nil (25733 23273 573673 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -762) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -763) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("6" 0 1 (face font-lock-comment-face fontified t)) . -764) (undo-tree-id233 . -1) 765) nil (25733 23273 573642 0) 0 nil])
([nil nil ((762 . 765)) nil (25733 23273 573559 0) 0 nil])
([nil nil ((1163 . 1164) (t 25733 23273 587347 651000)) nil (25733 46139 765101 0) 0 nil])
([nil nil ((1164 . 1166)) nil (25733 46139 765094 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1160) (undo-tree-id305 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1161) (undo-tree-id306 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1162) (undo-tree-id307 . -1) 1163) nil (25733 46139 765085 0) 0 nil])
([nil nil ((nil fontified nil 1340 . 1341) (nil fontified nil 1336 . 1340) (nil fontified nil 1333 . 1336) (nil fontified nil 1331 . 1333) (nil fontified nil 1308 . 1331) (nil fontified nil 1302 . 1308) (nil fontified nil 1301 . 1302) (nil fontified nil 1288 . 1301) (nil fontified nil 1268 . 1288) (nil fontified nil 1259 . 1268) (nil fontified nil 1253 . 1259) (nil fontified nil 1243 . 1253) (nil fontified nil 1239 . 1243) (nil fontified nil 1218 . 1239) (nil fontified nil 1214 . 1218) (nil fontified nil 1191 . 1214) (nil fontified nil 1163 . 1191) (1163 . 1341)) nil (25733 46139 765056 0) 0 nil])
([nil nil ((1341 . 1345)) nil (25733 46139 765030 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id302 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id303 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -918) (undo-tree-id304 . -1) 919) nil (25733 46139 765020 0) 0 nil])
([nil nil ((916 . 919)) nil (25733 46139 765001 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1204) (undo-tree-id299 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1205) (undo-tree-id300 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1206) (undo-tree-id301 . -1) 1207) nil (25733 46139 764990 0) 0 nil])
([nil nil ((1204 . 1206)) nil (25733 46139 764971 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1205) (undo-tree-id298 . -1) 1206) nil (25733 46139 764963 0) 0 nil])
([nil nil ((1205 . 1207)) nil (25733 46139 764953 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1294) (undo-tree-id295 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . -1295) (undo-tree-id296 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1296) (undo-tree-id297 . -1) 1297) nil (25733 46139 764943 0) 0 nil])
([nil nil ((1294 . 1298)) nil (25733 46139 764914 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1097) (undo-tree-id292 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1098) (undo-tree-id293 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1099) (undo-tree-id294 . -1) 1100) nil (25733 46139 764904 0) 0 nil])
([nil nil ((1097 . 1100)) nil (25733 46139 764885 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1007) (undo-tree-id291 . -1) 1008) nil (25733 46139 764878 0) 0 nil])
([nil nil ((1007 . 1008)) nil (25733 46139 764868 0) 0 nil])
([nil nil ((1006 . 1007)) nil (25733 46139 764862 0) 0 nil])
([nil nil ((1161 . 1164)) nil (25733 46139 764856 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1161) (undo-tree-id288 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1162) (undo-tree-id289 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -1163) (undo-tree-id290 . -1) 1164) nil (25733 46139 764846 0) 0 nil])
([nil nil ((1153 . 1165)) nil (25733 46139 764827 0) 0 nil])
([nil nil ((1166 . 1175) (1165 . 1167) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1165) (1165 . 1166)) nil (25733 46139 764819 0) 0 nil])
([nil nil ((1176 . 1177)) nil (25733 46139 764809 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1190 . 1191) (nil fontified nil 1175 . 1191) (1175 . 1191)) nil (25733 46139 764800 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1190) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) 1191) nil (25733 46139 764757 0) 0 nil])
([nil nil ((1196 . 1198) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1196) (1191 . 1197) (t 25733 46139 787497 6000)) nil (25733 46172 851015 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1226 . 1227) (nil fontified nil 1197 . 1227) (1197 . 1227)) nil (25733 46172 850995 0) 0 nil])
([nil nil ((#("# python inference_main.py -m \"logs/44k/G_137600.pth\" -c \"configs/config.json\" -n \"test.wav\" -t 0 -cr 0.5 -cm \"logs/44k/kmeans_10000.pt\" -fr \"logs/44k/feature_and_index.pkl\" -s \"jay\"
# python inference_main.py -m \"logs/44k/G_137600.pth\" -c \"configs/config.json\" -n \"test.wav\" -t 0 -shd -dm \"logs/44k/diffusion/model_160000.pt\" -dc \"configs/diffusion.yaml\" -s \"jay\" -od
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 30 (face font-lock-comment-face fontified t) 30 53 (face font-lock-comment-face fontified t) 53 57 (face font-lock-comment-face fontified t) 57 78 (face font-lock-comment-face fontified t) 78 82 (face font-lock-comment-face fontified t) 82 92 (face font-lock-comment-face fontified t) 92 110 (face font-lock-comment-face fontified t) 110 120 (face font-lock-comment-face fontified t) 120 135 (face font-lock-comment-face fontified t) 135 141 (face font-lock-comment-face fontified t) 141 142 (face font-lock-comment-face fontified t) 142 171 (face font-lock-comment-face fontified t) 171 172 (face font-lock-comment-face rear-nonsticky t fontified t) 172 173 (face font-lock-comment-face fontified t) 173 174 (face font-lock-comment-face fontified t) 174 177 (face font-lock-comment-face fontified t) 177 181 (face font-lock-comment-face fontified t) 181 182 (face font-lock-comment-face fontified t rear-nonsticky t) 182 183 (face font-lock-comment-face fontified t) 183 185 (face font-lock-comment-delimiter-face fontified t) 185 213 (face font-lock-comment-face fontified t) 213 236 (face font-lock-comment-face fontified t) 236 240 (face font-lock-comment-face fontified t) 240 261 (face font-lock-comment-face fontified t) 261 265 (face font-lock-comment-face fontified t) 265 275 (face font-lock-comment-face fontified t) 275 281 (face font-lock-comment-face fontified t) 281 290 (face font-lock-comment-face fontified t) 290 310 (face font-lock-comment-face fontified t) 310 324 (face font-lock-comment-face fontified t) 324 325 (face font-lock-comment-face fontified t rear-nonsticky t) 325 331 (face font-lock-comment-face fontified t) 331 354 (face font-lock-comment-face fontified t) 354 356 (face font-lock-comment-face fontified t) 356 359 (face font-lock-comment-face fontified t) 359 363 (face font-lock-comment-face fontified t) 363 364 (face font-lock-comment-face fontified t rear-nonsticky t) 364 368 (face font-lock-comment-face fontified t) 368 369 (face font-lock-comment-face fontified t)) . 1055) (undo-tree-id308 . -369) (undo-tree-id309 . -185) (undo-tree-id310 . -369) (undo-tree-id311 . -182) (undo-tree-id312 . -182) (undo-tree-id313 . -120) (undo-tree-id314 . -142) (undo-tree-id315 . -369) (undo-tree-id316 . -203) (t 25733 46172 858784 363000)) nil (25734 63928 986337 0) 0 nil])
([nil nil ((#("# python train.py -c configs/config.json -m 44k
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t)) . 825) (undo-tree-id318 . -48) (undo-tree-id319 . -47) (undo-tree-id320 . -47) (undo-tree-id321 . -47) (undo-tree-id322 . -47) (undo-tree-id323 . -48) (t 25734 63929 3585 333000)) nil (25734 63937 292920 0) 0 nil])
([nil nil ((775 . 776)) nil (25734 63937 292881 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 823 . 824) (nil fontified nil 823 . 824) (nil fontified nil 778 . 823) (nil fontified nil 776 . 778) (776 . 824)) nil (25734 63937 292870 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -823) (undo-tree-id317 . -1) 824) nil (25734 63937 292850 0) 0 nil])
([nil nil ((872 . 873)) nil (25734 63937 292809 0) 0 nil])
([nil nil ((1047 . 1051) (t 25734 63937 299927 980000)) nil (25734 64053 31388 0) 0 nil])
([nil nil ((1051 . 1053) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1051) (1051 . 1052)) nil (25734 64053 31380 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1074 . 1075) (nil fontified nil 1052 . 1075) (1052 . 1075)) nil (25734 64053 31370 0) 0 nil])
([nil nil ((1076 . 1085)) nil (25734 64053 31362 0) 0 nil])
([nil nil ((1085 . 1089)) nil (25734 64053 31357 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1120 . 1121) (nil fontified nil 1089 . 1121) (1089 . 1121)) nil (25734 64053 31350 0) 0 nil])
([nil nil ((1121 . 1122)) nil (25734 64053 31342 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1119) (undo-tree-id324 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -1120) (undo-tree-id325 . -1) (#(" " 0 1 (fontified t)) . -1121) (undo-tree-id326 . -1) 1122) nil (25734 64053 31330 0) 0 nil])
([nil nil ((1119 . 1120)) nil (25734 64053 31294 0) 0 nil])
([nil nil ((1052 . 1053)) nil (25734 64053 31277 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1007) (undo-tree-id332 . -1) (#("6" 0 1 (face font-lock-comment-face fontified t)) . -1008) (undo-tree-id333 . -1) 1009 (t 25734 64053 49841 564000)) nil (25734 64088 39980 0) 0 nil])
([nil nil ((1007 . 1009)) nil (25734 64088 39963 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("7" 0 1 (face font-lock-comment-face fontified t)) . -918) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("6" 0 1 (face font-lock-comment-face fontified t)) . -919) (undo-tree-id331 . -1) 920) nil (25734 64088 39948 0) 0 nil])
([nil nil ((917 . 920)) nil (25734 64088 39899 0) 0 nil])
([nil nil ((1121 . 1122) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1091) (undo-tree-id334 . -1) (1090 . 1091) (1090 . 1091) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1120) (1120 . 1121) (t 25734 64088 46888 174000)) nil (25734 64102 291749 0) 0 nil])
([nil nil ((#("\"logs/44k/feature_and_index.pkl\"" 0 1 (face font-lock-comment-face fontified t) 1 31 (face font-lock-comment-face fontified t) 31 32 (face font-lock-comment-face fontified t)) . 1090) (undo-tree-id339 . -32) (undo-tree-id340 . -32) (t 25734 64102 299689 418000)) nil (25734 64140 540084 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1089) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) 1090) nil (25734 64140 540053 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -919) (undo-tree-id359 . -1) 920 (t 25734 64140 547130 974000)) nil (25734 64618 766968 0) 0 nil])
([nil nil ((919 . 920)) nil (25734 64618 766956 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1086) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1087) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1088) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1089) (undo-tree-id358 . -1) 1090) nil (25734 64618 766940 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 919 . 920) (nil fontified nil 901 . 920) (901 . 920)) nil (25734 64618 766885 0) 0 nil])
([nil nil ((920 . 921)) nil (25734 64618 766876 0) 0 nil])
([nil nil ((#("--feature_retrieval" 0 18 (face font-lock-comment-face fontified t) 18 19 (face font-lock-comment-face rear-nonsticky t fontified t)) . 901) (undo-tree-id344 . -19) (undo-tree-id345 . -19)) nil (25734 64618 766868 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -900) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 901) nil (25734 64618 766849 0) 0 nil])
([nil nil ((nil fontified nil 1065 . 1066) (nil fontified nil 1047 . 1065) (1047 . 1066)) nil (25734 64618 766814 0) 0 nil])
([nil nil ((1066 . 1067)) nil (25734 64618 766794 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1046) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 1047 (t 25734 64618 776387 814000)) nil (25734 64623 781969 0) 0 nil])
([nil nil ((1046 . 1047)) nil (25734 64623 781915 0) 0 nil])
([nil nil ((#("--feature_retrieval " 0 18 (face font-lock-comment-face fontified t) 18 19 (face font-lock-comment-face fontified t rear-nonsticky t) 19 20 (face font-lock-comment-face fontified t)) . 1047) (undo-tree-id362 . -20) (undo-tree-id363 . -20) (t 25734 64623 792120 656000)) nil (25734 64782 147626 0) 0 nil])
([nil nil ((1047 . 1051) (t 25734 64782 155718 791000)) nil (25734 64833 231603 0) 0 nil])
([nil nil ((#("logs/44k/kmeans_10000.pt" 0 1 (face font-lock-comment-face fontified t) 1 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1056) (undo-tree-id364 . -24) (undo-tree-id365 . -19) (undo-tree-id366 . -24) 1072) nil (25734 64833 231588 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1085 . 1086) (nil fontified nil 1056 . 1086) (1056 . 1086)) nil (25734 64833 231542 0) 0 nil])
([nil nil ((#("-n \"test.wav\"" 0 3 (face font-lock-comment-face fontified t) 3 13 (face font-lock-comment-face fontified t)) . 953) (undo-tree-id369 . -13) (undo-tree-id370 . -13) (t 25734 64833 239619 408000)) nil (25734 65079 834512 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -952) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 953) nil (25734 65079 834496 0) 0 nil])
([nil nil ((1090 . 1091)) nil (25734 65079 834471 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1103 . 1104) (nil fontified nil 1094 . 1104) (nil fontified nil 1091 . 1094) (1091 . 1104)) nil (25734 65079 834461 0) 0 nil])
([nil nil ((1099 . 1100)) nil (25734 65079 834442 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1078) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1079) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -1080) (undo-tree-id375 . -1) (undo-tree-id376 . -1) 1081 (t 25734 65079 848291 314000)) nil (25734 65348 106993 0) 0 nil])
([nil nil ((1078 . 1079)) nil (25734 65348 106936 0) 0 nil])
([nil nil ((1089 . 1098) (t 25734 65348 118261 39000)) nil (25735 710 887544 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1078) (undo-tree-id380 . -1) 1079) nil (25735 710 887535 0) 0 nil])
([nil nil ((1078 . 1081)) nil (25735 710 887504 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1098) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 1099) nil (25735 710 887471 0) 0 nil])
([nil nil ((1098 . 1099)) nil (25735 710 887435 0) 0 nil])
([nil nil ((1099 . 1107)) nil (25735 710 887428 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1106) (undo-tree-id377 . -1) 1107) nil (25735 710 887414 0) 0 nil])
([nil nil ((1106 . 1112)) nil (25735 710 887377 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -1121) (undo-tree-id391 . -1) 1122 (t 25735 710 895339 265000)) nil (25735 904 303660 0) 0 nil])
([nil nil ((1121 . 1122)) nil (25735 904 303648 0) 0 nil])
([nil nil ((#("-cl 25" 0 6 (face font-lock-comment-face fontified t)) . 1106) (undo-tree-id389 . -6) (undo-tree-id390 . -6)) nil (25735 904 303640 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1105) (undo-tree-id387 . -1) (undo-tree-id388 . -1) 1106) nil (25735 904 303622 0) 0 nil])
([nil nil ((#("-lg 1" 0 5 (face font-lock-comment-face fontified t)) . 1100) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5)) nil (25735 904 303600 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1099) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) 1100) nil (25735 904 303566 0) 0 nil])
([nil nil ((1099 . 1107) (t 25735 904 314347 611000)) nil (25735 2318 300093 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1116) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 1117) nil (25735 2318 300083 0) 0 nil])
([nil nil ((1116 . 1117)) nil (25735 2318 300055 0) 0 nil])
([nil nil ((1107 . 1108)) nil (25735 2318 300042 0) 0 nil])
([nil nil ((1108 . 1112)) nil (25735 2318 300019 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1109) (undo-tree-id396 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1110) (undo-tree-id397 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1111) (undo-tree-id398 . -1) 1112 (t 25735 2318 311933 131000)) nil (25735 2935 915188 0) 0 nil])
([nil nil ((1109 . 1111)) nil (25735 2935 915164 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -918) (undo-tree-id394 . -1) (#("4" 0 1 (face font-lock-comment-face fontified t)) . -919) (undo-tree-id395 . -1) 920) nil (25735 2935 915151 0) 0 nil])
([nil nil ((918 . 920)) nil (25735 2940 499019 0) 0 nil])
([nil nil ((#("-cl 25 -t 1" 0 11 (face font-lock-comment-face fontified t)) . 1100) (undo-tree-id424 . -11) (undo-tree-id425 . -11) (t 25735 2935 926388 763000)) nil (25735 3109 385307 0) 0 nil] [nil nil ((#("python inference_main.py -m \"logs/44k/G_151200.pth\" -c \"configs/config.json\" -t 0 -shd -dm \"logs/44k/diffusion/model_200000.pt\" -dc \"configs/diffusion.yaml\" -fr -cm \"logs/44k/feature_and_index.pkl\" -cr 0.8 -s \"jay\" -lea 0.5 -cl 25 -t 1 -n \"test5.wav\"
" 0 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 28 (face font-lock-comment-face fontified t) 28 51 (face font-lock-comment-face fontified t) 51 55 (face font-lock-comment-face fontified t) 55 76 (face font-lock-comment-face fontified t) 76 82 (face font-lock-comment-face fontified t) 82 91 (face font-lock-comment-face fontified t) 91 111 (face font-lock-comment-face fontified t) 111 125 (face font-lock-comment-face fontified t) 125 126 (face font-lock-comment-face fontified t rear-nonsticky t) 126 132 (face font-lock-comment-face fontified t) 132 155 (face font-lock-comment-face fontified t) 155 161 (face font-lock-comment-face fontified t) 161 165 (face font-lock-comment-face fontified t) 165 166 (face font-lock-comment-face fontified t) 166 195 (face font-lock-comment-face fontified t) 195 196 (face font-lock-comment-face rear-nonsticky t fontified t) 196 206 (face font-lock-comment-face fontified t) 206 209 (face font-lock-comment-face fontified t) 209 213 (face font-lock-comment-face fontified t) 213 214 (face font-lock-comment-face fontified t rear-nonsticky t) 214 236 (face font-lock-comment-face fontified t) 236 239 (face font-lock-comment-face fontified t) 239 249 (face font-lock-comment-face fontified t) 249 250 (face font-lock-comment-face rear-nonsticky t fontified t) 250 251 (face font-lock-comment-face fontified t)) . 876) (undo-tree-id399 . -251) (undo-tree-id400 . -251) (undo-tree-id401 . -251) (undo-tree-id402 . -251) (undo-tree-id403 . -157) (undo-tree-id404 . -166) (undo-tree-id405 . -166) (undo-tree-id406 . -166) (undo-tree-id407 . -251) (undo-tree-id408 . -76) (undo-tree-id409 . -215) (undo-tree-id410 . -251) (undo-tree-id411 . -223) (undo-tree-id412 . -251) (undo-tree-id413 . -223) (undo-tree-id414 . -251) (undo-tree-id415 . -251) (undo-tree-id416 . -251) (undo-tree-id417 . -235) (undo-tree-id418 . -7) 883 (t 25735 2935 926388 763000)) ((876 . 1127)) (25735 2940 410405 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1080) (undo-tree-id423 . -1) 1081) nil (25735 3109 385292 0) 0 nil])
([nil nil ((876 . 877)) ((#("w" 0 1 (face font-lock-comment-face fontified t)) . 876) (undo-tree-id419 . -1) (undo-tree-id420 . -1)) (25735 2940 410178 0) 0 nil])
([nil nil ((1080 . 1081)) nil (25735 3109 385281 0) 0 nil])
nil
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -918) (undo-tree-id422 . -1) 919) nil (25735 3109 385273 0) 0 nil])
([nil nil ((919 . 920)) nil (25735 3109 385262 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1109) (undo-tree-id421 . -1) 1110) nil (25735 3109 385252 0) 0 nil])
([nil nil ((1109 . 1110)) nil (25735 3109 385219 0) 0 nil])
([nil nil ((1100 . 1104) (t 25735 3109 395164 713000)) nil (25735 3712 871830 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1103) (undo-tree-id426 . -1) 1104) nil (25735 3712 871818 0) 0 nil])
([nil nil ((1103 . 1105)) nil (25735 3712 871784 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1114) (undo-tree-id431 . -1) 1115 (t 25735 3712 889456 435000)) nil (25736 564 438102 0) 0 nil])
([nil nil ((1114 . 1115)) nil (25736 564 438090 0) 0 nil])
([nil nil ((1110 . 1112)) nil (25736 564 438082 0) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-comment-face fontified t)) . -1111) (undo-tree-id430 . -1) 1112) nil (25736 564 438073 0) 0 nil])
([nil nil ((1111 . 1116)) nil (25736 564 438057 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id427 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id428 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . -918) (undo-tree-id429 . -1) 919) nil (25736 564 438041 0) 0 nil])
([nil nil ((916 . 919)) nil (25736 564 437982 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1099) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1100) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1101) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1102) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1103) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1104) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 1105 (t 25736 564 490687 183000)) nil (25736 612 733507 0) 0 nil])
([nil nil ((#("spkr1/" 0 6 (face font-lock-comment-face fontified t)) . 1104) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (t 25736 612 741988 172000)) nil (25736 699 798883 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1078) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1079) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -1080) (undo-tree-id457 . -1) (undo-tree-id458 . -1) 1081 (t 25736 699 807461 929000)) nil (25736 765 444685 0) 0 nil])
([nil nil ((1078 . 1079)) nil (25736 765 444627 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -956) (undo-tree-id459 . -1) 957 (t 25736 765 453188 74000)) nil (25736 776 533969 0) 0 nil])
([nil nil ((956 . 958)) nil (25736 776 533931 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -957) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 958 (t 25736 776 542345 31000)) nil (25736 853 922982 0) 0 nil])
([nil nil ((957 . 958)) nil (25736 853 922942 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1079) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 1080 (t 25736 853 931178 789000)) nil (25736 901 779696 0) 0 nil])
([nil nil ((1079 . 1082)) nil (25736 901 779655 0) 0 nil])
([nil nil ((964 . 968) (t 25736 901 789094 26000)) nil (25736 938 999812 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -956) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . -957) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 958 (t 25736 939 7854 533000)) nil (25736 1000 102481 0) 0 nil])
([nil nil ((956 . 957)) nil (25736 1000 102433 0) 0 nil])
([nil nil ((958 . 961) (t 25736 1000 110906 802000)) nil (25736 1034 491312 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -957) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -958) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -959) (undo-tree-id472 . -1) (undo-tree-id473 . -1) 960 (t 25736 1034 500959 323000)) nil (25736 1172 298428 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 918 (t 25736 1172 307962 259000)) nil (25736 1369 994369 0) 0 nil])
([nil nil ((916 . 919)) nil (25736 1369 994346 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id475 . -1) (#("8" 0 1 (face font-lock-comment-face fontified t)) . -918) (undo-tree-id476 . -1) 919) nil (25736 1369 994337 0) 0 nil])
([nil nil ((917 . 918)) nil (25736 1369 994309 0) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id474 . -1) 1085) nil (25736 1369 994295 0) 0 nil])
([nil nil ((1084 . 1085)) nil (25736 1369 994220 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -962) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -963) (undo-tree-id483 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -964) (undo-tree-id484 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -965) (undo-tree-id485 . -1) 966 (t 25736 1370 5362 48000)) nil (25736 1408 92860 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1080) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 1081 (t 25736 1408 110467 26000)) nil (25736 1515 447434 0) 0 nil])
([nil nil ((1080 . 1081)) nil (25736 1515 447387 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id488 . -1) (undo-tree-id489 . -1) 918 (t 25736 1515 456220 158000)) nil (25736 1630 584449 0) 0 nil])
([nil nil ((917 . 918)) nil (25736 1630 584398 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -1097) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -1098) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 1099 (t 25736 1630 593668 644000)) nil (25736 1937 124776 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1106) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 1107 (t 25736 1937 134809 428000)) nil (25736 2041 548746 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id569 . -1) 918 (t 25736 2041 566082 323000)) nil (25736 2049 141074 0) 0 nil])
([nil nil ((917 . 918)) nil (25736 2049 141039 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("8" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id572 . -1) 918 (t 25736 2049 149724 712000)) nil (25736 2050 568056 0) 0 nil])
([nil nil ((916 . 918)) nil (25736 2050 568013 0) 0 nil])
([nil nil ((1234 . 1235) (t 25736 2050 585718 463000)) nil (25736 2420 28115 0) 0 nil])
([nil nil ((1235 . 1236)) nil (25736 2420 28108 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -1235) (undo-tree-id608 . -1) 1236) nil (25736 2420 28101 0) 0 nil])
([nil nil ((1235 . 1249)) nil (25736 2420 28090 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -1246) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1247) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1248) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 1249) nil (25736 2420 28079 0) 0 nil])
([nil nil ((1246 . 1257)) nil (25736 2420 28051 0) 0 nil])
([nil nil ((1257 . 1258)) nil (25736 2420 28045 0) 0 nil])
([nil nil ((nil fontified nil 1492 . 1493) (nil fontified nil 1483 . 1492) (nil fontified nil 1480 . 1483) (nil fontified nil 1472 . 1480) (nil fontified nil 1471 . 1472) (nil fontified nil 1467 . 1471) (nil fontified nil 1464 . 1467) (nil fontified nil 1454 . 1464) (nil fontified nil 1453 . 1454) (nil fontified nil 1424 . 1453) (nil fontified nil 1423 . 1424) (nil fontified nil 1419 . 1423) (nil fontified nil 1413 . 1419) (nil fontified nil 1390 . 1413) (nil fontified nil 1384 . 1390) (nil fontified nil 1383 . 1384) (nil fontified nil 1369 . 1383) (nil fontified nil 1349 . 1369) (nil fontified nil 1340 . 1349) (nil fontified nil 1334 . 1340) (nil fontified nil 1313 . 1334) (nil fontified nil 1309 . 1313) (nil fontified nil 1286 . 1309) (nil fontified nil 1283 . 1286) (nil fontified nil 1282 . 1283) (nil fontified nil 1258 . 1282) (1258 . 1493)) nil (25736 2420 28027 0) 0 nil])
([nil nil ((1258 . 1260)) nil (25736 2420 27990 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1257) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1258) (undo-tree-id600 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1259) (undo-tree-id601 . -1) 1260) nil (25736 2420 27979 0) 0 nil])
([nil nil ((1257 . 1258)) nil (25736 2420 27955 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -1484) (undo-tree-id589 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1485) (undo-tree-id590 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1486) (undo-tree-id591 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1487) (undo-tree-id592 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1488) (undo-tree-id593 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1489) (undo-tree-id594 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1490) (undo-tree-id595 . -1) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -1491) (undo-tree-id596 . -1) 1492) nil (25736 2420 27939 0) 0 nil])
([nil nil ((1484 . 1486)) nil (25736 2420 27899 0) 0 nil])
([nil nil ((1487 . 1492)) nil (25736 2420 27893 0) 0 nil])
([nil nil ((1247 . 1250)) nil (25736 2420 27887 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -1246) (undo-tree-id585 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1247) (undo-tree-id586 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1248) (undo-tree-id587 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1249) (undo-tree-id588 . -1) 1250) nil (25736 2420 27876 0) 0 nil])
([nil nil ((1246 . 1249)) nil (25736 2420 27853 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-face fontified t)) . -1249) (undo-tree-id584 . -1) 1250) nil (25736 2420 27845 0) 0 nil])
([nil nil ((1249 . 1250)) nil (25736 2420 27834 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -1246) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1247) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1248) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (#("/" 0 1 (face font-lock-comment-face fontified t)) . -1249) (undo-tree-id582 . -1) (undo-tree-id583 . -1) 1250) nil (25736 2420 27817 0) 0 nil])
([nil nil ((1246 . 1252)) nil (25736 2420 27744 0) 0 nil])
([nil nil ((1496 . 1497)) nil (25736 2420 27727 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -1246) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (#("/" 0 1 (face font-lock-comment-face fontified t)) . -1247) (undo-tree-id636 . -1) (undo-tree-id637 . -1) 1248 (t 25736 2420 66758 161000)) nil (25736 2478 684611 0) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-comment-face fontified t)) . -1250) (undo-tree-id629 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1251) (undo-tree-id630 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1252) (undo-tree-id631 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1253) (undo-tree-id632 . -1) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -1254) (undo-tree-id633 . -1) 1255) nil (25736 2478 684582 0) 0 nil])
([nil nil ((1250 . 1253)) nil (25736 2478 684555 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -1252) (undo-tree-id628 . -1) 1253) nil (25736 2478 684546 0) 0 nil])
([nil nil ((1252 . 1255)) nil (25736 2478 684535 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -1246) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1247) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1248) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("/" 0 1 (face font-lock-comment-face fontified t)) . -1249) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("*" 0 1 (face font-lock-comment-face fontified t)) . -1250) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1251) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1252) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1253) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -1254) (undo-tree-id626 . -1) (undo-tree-id627 . -1) 1255) nil (25736 2478 684510 0) 0 nil])
([nil nil ((1246 . 1252)) nil (25736 2478 684425 0) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-comment-face fontified t)) . -1251) (undo-tree-id609 . -1) 1252) nil (25736 2478 684413 0) 0 nil])
([nil nil ((1251 . 1253)) nil (25736 2972 518297 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-comment-face fontified t)) . -1483) (undo-tree-id845 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1484) (undo-tree-id846 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1485) (undo-tree-id847 . -1) (#("\"" 0 1 (face font-lock-comment-face fontified t rear-nonsticky t)) . -1486) (undo-tree-id848 . -1) 1487) nil (25736 3023 800662 0) 0 nil] [nil nil ((#("
# for f in ./*.wav; do python inference_main.py -m \"logs/44k/G_200000.pth\" -c \"configs/config.json\" -t 0 -shd -dm \"logs/44k/diffusion/model_200000.pt\" -dc \"configs/diffusion.yaml\" -fr -cm \"logs/44k/feature_and_index.pkl\" -cr 0.5 -s \"jay\" -lea 0 -n \"$f\" done
" 0 1 (fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 24 (face font-lock-comment-face fontified t) 24 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 52 (face font-lock-comment-face fontified t) 52 75 (face font-lock-comment-face fontified t) 75 79 (face font-lock-comment-face fontified t) 79 100 (face font-lock-comment-face fontified t) 100 106 (face font-lock-comment-face fontified t) 106 115 (face font-lock-comment-face fontified t) 115 135 (face font-lock-comment-face fontified t) 135 149 (face font-lock-comment-face fontified t) 149 150 (face font-lock-comment-face fontified t rear-nonsticky t) 150 151 (face font-lock-comment-face fontified t) 151 156 (face font-lock-comment-face fontified t) 156 179 (face font-lock-comment-face fontified t) 179 180 (face font-lock-comment-face fontified t) 180 185 (face font-lock-comment-face fontified t) 185 189 (face font-lock-comment-face fontified t) 189 190 (face font-lock-comment-face fontified t) 190 219 (face font-lock-comment-face fontified t) 219 220 (face font-lock-comment-face fontified t rear-nonsticky t) 220 221 (face font-lock-comment-face fontified t) 221 230 (face font-lock-comment-face fontified t) 230 233 (face font-lock-comment-face fontified t) 233 237 (face font-lock-comment-face fontified t) 237 238 (face font-lock-comment-face fontified t rear-nonsticky t) 238 246 (face font-lock-comment-face fontified t) 246 249 (face font-lock-comment-face fontified t) 249 252 (face font-lock-comment-face fontified t) 252 253 (face font-lock-comment-face fontified t rear-nonsticky t) 253 258 (face font-lock-comment-face fontified t) 258 259 (face font-lock-comment-face fontified t)) . -1234) (undo-tree-id651 . -259) (undo-tree-id652 . -23) (undo-tree-id653 . -258) (undo-tree-id654 . -12) (undo-tree-id655 . -93) (undo-tree-id656 . -170) (undo-tree-id657 . -258) (undo-tree-id658 . -3) (undo-tree-id659 . -259) (undo-tree-id660 . -259) 1493 (t 25736 2478 696659 424000)) ((1234 . 1493)) (25736 2972 117631 0) 0 nil])
([nil nil ((1484 . 1486) (#("{" 0 1 (face font-lock-comment-face fontified nil)) . -1484) (1483 . 1485)) nil (25736 3023 800632 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1233) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 1234) ((1233 . 1234)) (25736 2971 973719 0) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-comment-face fontified nil)) . -1484) (undo-tree-id844 . -1) (#("}" 0 1 (face font-lock-comment-face fontified t)) . 1485)) nil (25736 3023 800619 0) 0 nil])
([nil nil ((1233 . 1234)) ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 1233) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (t 25736 2806 564406 907000)) (25736 2806 527080 0) 0 nil])
([nil nil ((1494 . 1496) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1494) (1485 . 1495) (1484 . 1486) (#("(" 0 1 (face font-lock-comment-face fontified nil)) . -1484) (1484 . 1485)) nil (25736 3023 800593 0) 0 nil])
nil
([nil nil ((1495 . 1497)) nil (25736 3023 800914 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-comment-face fontified t)) . -1497) (undo-tree-id854 . -1) 1498 (t 25736 3025 305604 825000)) nil (25736 3061 141916 0) 0 nil] [nil nil ((1499 . 1500) (1495 . 1496) (1500 . 1501) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1484) (1483 . 1484) (1483 . 1484) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1499) (1499 . 1500)) ((#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1499) (1499 . 1500) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1483) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1483) (1484 . 1485) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1500) (#("\\" 0 1 (face font-lock-comment-face fontified nil)) . 1495) (#("\\" 0 1 (face font-lock-comment-face fontified t)) . 1499)) (25736 3023 800549 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-comment-face fontified t)) . -1494) (undo-tree-id853 . -1) 1495) nil (25736 3061 141900 0) 0 nil])
nil
([nil nil ((1498 . 1499) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1484) (1483 . 1484) (1483 . 1484)) nil (25736 3061 141884 0) 0 nil])
([nil nil ((1247 . 1249)) nil (25736 3061 141871 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -1246) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1247) (undo-tree-id851 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1248) (undo-tree-id852 . -1) 1249) nil (25736 3061 141853 0) 0 nil])
([nil nil ((1246 . 1249)) nil (25736 3061 141764 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1501) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1502) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1503) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1504) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1505) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) 1506 (t 25736 3061 153995 59000)) nil (25736 3091 253582 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1377) (undo-tree-id875 . -1) 1378 (t 25736 3091 262923 563000)) nil (25736 3500 304911 0) 0 nil])
([nil nil ((1377 . 1378)) nil (25736 3500 304843 0) 0 nil])
([nil nil ((1482 . 1483) (t 25736 3500 315428 460000)) nil (25736 4132 284212 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -1482) (undo-tree-id883 . -1) 1483) nil (25736 4132 284204 0) 0 nil])
([nil nil ((1482 . 1494)) nil (25736 4132 284193 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1491) (undo-tree-id880 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1492) (undo-tree-id881 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1493) (undo-tree-id882 . -1) 1494) nil (25736 4132 284183 0) 0 nil])
([nil nil ((#("-t 0" 0 4 (face font-lock-comment-face fontified t)) . 1337) (undo-tree-id878 . -4) (undo-tree-id879 . -4)) nil (25736 4132 284161 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1336) (undo-tree-id876 . -1) (undo-tree-id877 . -1) 1337) nil (25736 4132 284135 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1489 . 1490) (nil fontified nil 1486 . 1490) (1486 . 1490)) nil (25736 4132 284104 0) 0 nil])
([nil nil ((1490 . 1491)) nil (25736 4132 284084 0) 0 nil])
([nil nil ((#("-shd -dm \"logs/44k/diffusion/model_100000.pt\" -dc \"configs/diffusion.yaml\"" 0 9 (face font-lock-comment-face fontified t) 9 29 (face font-lock-comment-face fontified t) 29 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t rear-nonsticky t) 44 45 (face font-lock-comment-face fontified t) 45 50 (face font-lock-comment-face fontified t) 50 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t)) . 1337) (undo-tree-id889 . -74) (undo-tree-id890 . -74) 1411 (t 25736 4132 304141 556000)) nil (25736 4616 548279 0) 0 nil])
([nil nil ((1437 . 1438)) nil (25736 4616 548264 0) 0 nil])
([nil nil ((1438 . 1440)) nil (25736 4616 548258 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1513 . 1514) (nil fontified nil 1513 . 1514) (nil fontified nil 1490 . 1513) (nil fontified nil 1485 . 1490) (nil fontified nil 1484 . 1485) (nil fontified nil 1483 . 1484) (nil fontified nil 1469 . 1483) (nil fontified nil 1449 . 1469) (nil fontified nil 1440 . 1449) (1440 . 1514)) nil (25736 4616 548249 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1300) (undo-tree-id887 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1301) (undo-tree-id888 . -1) 1302) nil (25736 4616 548230 0) 0 nil])
([nil nil ((1300 . 1302)) nil (25736 4616 548212 0) 0 nil])
([nil nil ((#("-shd -dm \"logs/44k/diffusion/model_100000.pt\" -dc \"configs/diffusion.yaml\"" 0 9 (face font-lock-comment-face fontified t) 9 29 (face font-lock-comment-face fontified t) 29 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t rear-nonsticky t) 44 45 (face font-lock-comment-face fontified t) 45 50 (face font-lock-comment-face fontified t) 50 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t rear-nonsticky t)) . 1440) (undo-tree-id885 . -74) (undo-tree-id886 . -74) 1514) nil (25736 4616 548205 0) 0 nil])
([nil nil ((nil fontified nil 1410 . 1411) (nil fontified nil 1387 . 1410) (nil fontified nil 1382 . 1387) (nil fontified nil 1381 . 1382) (nil fontified nil 1380 . 1381) (nil fontified nil 1366 . 1380) (nil fontified nil 1346 . 1366) (nil fontified nil 1337 . 1346) (1337 . 1411)) nil (25736 4616 548185 0) 0 nil])
([nil nil ((1411 . 1412)) nil (25736 4616 548170 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1412) (undo-tree-id884 . -1) 1413) nil (25736 4616 548158 0) 0 nil])
([nil nil ((1514 . 1515) 1415) nil (25736 4616 548110 0) 0 nil])
([nil nil ((1476 . 1478) (t 25736 4616 576616 557000)) nil (25736 4629 389284 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1459) (undo-tree-id891 . -1) 1460) nil (25736 4629 389269 0) 0 nil])
([nil nil ((1459 . 1460)) nil (25736 4629 389220 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1515) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 1516 (t 25736 4629 399432 996000)) nil (25736 4637 170747 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1512) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#("
" 0 1 (fontified t)) . -1513) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1514) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) 1515) nil (25736 4637 168355 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1301) (undo-tree-id914 . -1) (undo-tree-id915 . -1) 1302 (t 25736 4637 181545 997000)) nil (25736 4658 126697 0) 0 nil])
([nil nil ((1301 . 1302)) nil (25736 4658 126642 0) 0 nil])
([nil nil ((1488 . 1491) (t 25736 4658 149771 82000)) nil (25736 4803 795586 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1301) (undo-tree-id920 . -1) 1302 (t 25736 4803 805206 191000)) nil (25736 4872 160600 0) 0 nil])
([nil nil ((1301 . 1302)) nil (25736 4872 160588 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1301) (undo-tree-id919 . -1) 1302) nil (25736 4872 160581 0) 0 nil])
([nil nil ((1301 . 1302)) nil (25736 4872 160570 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1301) (undo-tree-id917 . -1) (undo-tree-id918 . -1) 1302) nil (25736 4872 160562 0) 0 nil])
([nil nil ((1301 . 1302)) nil (25736 4872 160545 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1301) (undo-tree-id916 . -1) 1302) nil (25736 4872 160533 0) 0 nil])
([nil nil ((1301 . 1302)) nil (25736 4872 160486 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1494) (undo-tree-id995 . -1) 1495 (t 25736 4872 172259 50000)) nil (25736 6887 708683 0) 0 nil])
([nil nil ((1494 . 1496)) nil (25736 6887 708672 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1495) (undo-tree-id994 . -1) 1496) nil (25736 6887 708665 0) 0 nil])
([nil nil ((1495 . 1496)) nil (25736 6887 708654 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1495) (undo-tree-id993 . -1) 1496) nil (25736 6887 708647 0) 0 nil])
([nil nil ((1495 . 1496)) nil (25736 6887 708633 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1487) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1488) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1489) (undo-tree-id991 . -1) (undo-tree-id992 . -1) 1490) nil (25736 6887 708579 0) 0 nil])
([nil nil ((#("test" 0 4 (face font-lock-comment-face fontified t)) . -1102) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) 1106 (t 25736 6887 739222 147000)) nil (25736 7276 937112 0) 0 nil])
([nil nil ((1102 . 1104)) nil (25736 7276 937097 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1486) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1487) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1488) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1489) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (#("4" 0 1 (face font-lock-comment-face fontified t)) . -1490) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) 1491) nil (25736 7276 937082 0) 0 nil])
([nil nil ((1486 . 1490)) nil (25736 7276 937039 0) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-comment-face fontified t)) . -1489) (undo-tree-id1005 . -1) 1490) nil (25736 7276 937031 0) 0 nil])
([nil nil ((1489 . 1490)) nil (25736 7276 937021 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1481) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1482) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -1483) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1484) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 1485) nil (25736 7276 937008 0) 0 nil])
([nil nil ((1481 . 1482)) nil (25736 7276 936964 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -1481) (undo-tree-id996 . -1) 1482) nil (25736 7276 936952 0) 0 nil])
([nil nil ((1481 . 1487)) nil (25736 7276 936907 0) 0 nil])
([nil nil ((#("crepe" 0 5 (face font-lock-comment-face fontified t)) . -1482) (undo-tree-id1018 . -5) (undo-tree-id1019 . -5) (undo-tree-id1020 . -5) 1487 (t 25736 7276 961009 469000)) nil (25736 7612 120443 0) 0 nil])
([nil nil ((1482 . 1493)) nil (25736 7612 120356 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1490) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) 1491 (t 25736 7612 133180 658000)) nil (25736 8492 746825 0) 0 nil])
([nil nil ((1101 . 1105)) nil (25736 8501 419936 0) 0 nil] [nil nil ((1493 . 1497) (t 25736 7712 313110 118000)) ((#("-od " 0 4 (face font-lock-comment-face fontified t)) . 1493) (t 25736 8489 609832 403000)) (25736 8489 594221 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1107) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) 1108) nil (25736 8501 419843 0) 0 nil])
nil
([nil nil ((1107 . 1108)) nil (25736 8501 419339 0) 0 nil])
([nil nil ((1102 . 1105) (1101 . 1103) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1101) (1100 . 1102) (t 25736 8501 437845 298000)) nil (25736 8524 690503 0) 0 nil])
([nil nil ((876 . 877) (t 25736 8524 700707 570000)) nil (25736 8529 575819 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -876) (undo-tree-id1169 . -1) 877) nil (25736 8529 575770 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1100) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (#("\"" 0 1 (face font-lock-comment-face fontified t)) . -1101) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (#("jay\"" 0 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t)) . 1102) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (t 25736 8529 586740 481000)) nil (25736 8564 261508 0) 0 nil])
([nil nil ((#("-od" 0 3 (face font-lock-comment-face fontified t)) . 1101) (undo-tree-id1175 . -3) (undo-tree-id1176 . -3)) nil (25736 8564 261476 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1100) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) 1101) nil (25736 8564 261461 0) 0 nil])
([nil nil ((1098 . 1100)) nil (25736 8564 261447 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -1099) (undo-tree-id1172 . -1) 1100) nil (25736 8564 261439 0) 0 nil])
([nil nil ((1099 . 1102)) nil (25736 8564 261428 0) 0 nil])
([nil nil ((1097 . 1099)) nil (25736 8564 261422 0) 0 nil])
([nil nil ((1099 . 1105)) nil (25736 8564 261415 0) 0 nil])
([nil nil ((1105 . 1110)) nil (25736 8564 261409 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -1109) (undo-tree-id1171 . -1) 1110) nil (25736 8564 261400 0) 0 nil])
([nil nil ((1109 . 1113)) nil (25736 8564 261387 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -1112) (undo-tree-id1170 . -1) 1113) nil (25736 8564 261375 0) 0 nil])
([nil nil ((1112 . 1120)) nil (25736 8564 261342 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1120) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1121) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1122) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1123) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) 1124 (t 25736 8564 272654 583000)) nil (25736 8678 67403 0) 0 nil])
([nil nil ((1120 . 1138)) nil (25736 8678 67339 0) 0 nil])
([nil nil ((#("--noise_scale" 0 13 (face font-lock-comment-face fontified t)) . 1121) (undo-tree-id1194 . -13) (undo-tree-id1195 . -13) (t 25736 8678 79044 994000)) nil (25736 8698 459436 0) 0 nil])
([nil nil ((1121 . 1125)) nil (25736 8698 459421 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -1123) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1124) (undo-tree-id1193 . -1) 1125) nil (25736 8698 459408 0) 0 nil])
([nil nil ((1123 . 1124)) nil (25736 8698 459368 0) 0 nil])
([nil nil ((1128 . 1134) (t 25736 8698 472128 752000)) nil (25736 8803 270722 0) 0 nil])
([nil nil ((#("dio" 0 3 (face font-lock-comment-face fontified t)) . -1105) (undo-tree-id1196 . -3) (undo-tree-id1197 . -3) 1108 (t 25736 8803 282977 958000)) nil (25736 8965 487212 0) 0 nil])
([nil nil ((1105 . 1114)) nil (25736 8965 487162 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1110) (undo-tree-id1198 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1111) (undo-tree-id1199 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1112) (undo-tree-id1200 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -1113) (undo-tree-id1201 . -1) 1114 (t 25736 8965 501060 740000)) nil (25736 9046 596819 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1115) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1116) (undo-tree-id1204 . -1) 1117 (t 25736 9046 607312 16000)) nil (25736 9153 248592 0) 0 nil])
([nil nil ((1115 . 1116)) nil (25736 9153 248534 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1140) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1141) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) 1142 (t 25736 9153 259334 465000)) nil (25736 9190 501539 0) 0 nil])
([nil nil ((1140 . 1142)) nil (25736 9190 501443 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1115) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) 1116 (t 25736 9190 521799 195000)) nil (25736 9232 866017 0) 0 nil])
([nil nil ((1115 . 1117)) nil (25736 9232 865998 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1116) (undo-tree-id1211 . -1) 1117) nil (25736 9232 865985 0) 0 nil])
([nil nil ((1116 . 1117)) nil (25736 9232 865947 0) 0 nil])
([nil nil ((#("crepe" 0 5 (face font-lock-comment-face fontified t)) . -1105) (undo-tree-id1217 . -5) (undo-tree-id1218 . -5) 1110 (t 25736 9232 876385 453000)) nil (25736 9328 463822 0) 0 nil])
([nil nil ((1105 . 1106)) nil (25736 9328 463804 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -1105) (undo-tree-id1216 . -1) 1106) nil (25736 9328 463795 0) 0 nil])
([nil nil ((1105 . 1107)) nil (25736 9328 463780 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -1105) (undo-tree-id1214 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -1106) (undo-tree-id1215 . -1) 1107) nil (25736 9328 463765 0) 0 nil])
([nil nil ((1105 . 1113)) nil (25736 9328 463688 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -1108) (undo-tree-id1219 . -1) 1109 (t 25736 9328 475591 312000)) nil (25736 9330 211130 0) 0 nil])
([nil nil ((#("harvest" 0 7 (face font-lock-comment-face fontified t)) . -1105) (undo-tree-id1220 . -7) (undo-tree-id1221 . -7) 1112 (t 25736 9330 222682 365000)) nil (25736 9371 76364 0) 0 nil])
([nil nil ((1105 . 1108)) nil (25736 9371 76309 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id1224 . -1) 918 (t 25736 9371 87355 148000)) nil (25736 9425 350325 0) 0 nil])
([nil nil ((916 . 918)) nil (25736 9425 350282 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -993) (undo-tree-id1229 . -1) 994 (t 25736 9425 361001 329000)) nil (25736 9508 927067 0) 0 nil])
([nil nil ((993 . 994)) nil (25736 9508 927052 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1113) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1114) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) 1115) nil (25736 9508 927035 0) 0 nil])
([nil nil ((1113 . 1114)) nil (25736 9508 926941 0) 0 nil])
([nil nil ((1534 . 1548) (t 25736 9508 940272 936000)) nil (25736 9565 853546 0) 0 nil])
([nil nil ((#("dio" 0 3 (face font-lock-comment-face fontified t)) . -1518) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) 1521 (t 25736 9565 865092 516000)) nil (25736 10029 384503 0) 0 nil])
([nil nil ((1518 . 1523)) nil (25736 10082 698218 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1493) (undo-tree-id1236 . -1) 1494 (t 25736 10029 399138 957000)) nil (25736 10093 689399 0) 0 nil] [nil nil ((nil rear-nonsticky nil 1866 . 1867) (nil fontified nil 1866 . 1867) (nil fontified nil 1865 . 1866) (nil fontified nil 1864 . 1865) (nil fontified nil 1862 . 1864) (nil fontified nil 1861 . 1862) (nil fontified nil 1853 . 1861) (nil fontified nil 1852 . 1853) (nil fontified nil 1851 . 1852) (nil fontified nil 1850 . 1851) (nil fontified nil 1847 . 1850) (nil fontified nil 1832 . 1847) (nil fontified nil 1802 . 1832) (nil fontified nil 1801 . 1802) (nil fontified nil 1797 . 1801) (nil fontified nil 1794 . 1797) (nil fontified nil 1785 . 1794) (nil fontified nil 1784 . 1785) (nil fontified nil 1783 . 1784) (nil fontified nil 1754 . 1783) (nil fontified nil 1753 . 1754) (nil fontified nil 1749 . 1753) (nil fontified nil 1745 . 1749) (nil fontified nil 1744 . 1745) (nil fontified nil 1743 . 1744) (nil fontified nil 1720 . 1743) (nil fontified nil 1715 . 1720) (nil fontified nil 1714 . 1715) (nil fontified nil 1713 . 1714) (nil fontified nil 1699 . 1713) (nil fontified nil 1679 . 1699) (nil fontified nil 1670 . 1679) (nil fontified nil 1669 . 1670) (nil fontified nil 1648 . 1669) (nil fontified nil 1644 . 1648) (nil fontified nil 1621 . 1644) (nil fontified nil 1618 . 1621) (nil fontified nil 1617 . 1618) (nil fontified nil 1593 . 1617) (nil fontified nil 1570 . 1593) (1570 . 1867) (t 25736 10029 399138 957000)) ((#("for f in raw/*.wav; do python inference_main.py -m \"logs/44k/G_160000.pth\" -c \"configs/config.json\" -shd -dm \"logs/44k/diffusion/model_100000.pt\" -dc \"configs/diffusion.yaml\" -fr -cm \"logs/44k/feature_and_index.pkl\" -cr 0.6 -s \"jay\" -lea 0.5 -f0p dio -cl 40 -t 0 -ns 0.4 -lg 0 -n \"$(basename $f)\"
" 0 3 (face font-lock-keyword-face fontified nil) 3 5 (fontified nil) 5 8 (face font-lock-keyword-face fontified nil) 8 20 (fontified nil) 20 22 (face font-lock-keyword-face fontified nil) 22 23 (fontified nil) 23 47 (fontified nil) 47 48 (fontified nil) 48 51 (fontified nil) 51 74 (face font-lock-string-face fontified nil) 74 78 (fontified nil) 78 99 (face font-lock-string-face fontified nil) 99 100 (fontified nil) 100 109 (fontified nil) 109 129 (face font-lock-string-face fontified nil) 129 143 (face font-lock-string-face fontified nil) 143 144 (face font-lock-string-face fontified nil rear-nonsticky t) 144 145 (face font-lock-string-face fontified nil) 145 150 (fontified nil) 150 173 (face font-lock-string-face fontified nil) 173 174 (face font-lock-string-face fontified nil rear-nonsticky t) 174 175 (fontified nil) 175 179 (fontified nil) 179 183 (fontified nil) 183 184 (face font-lock-string-face fontified nil) 184 213 (face font-lock-string-face fontified nil) 213 214 (face font-lock-string-face fontified nil rear-nonsticky t) 214 215 (face font-lock-string-face fontified nil) 215 224 (fontified nil) 224 227 (fontified nil) 227 231 (face font-lock-string-face fontified nil) 231 232 (face font-lock-string-face fontified nil rear-nonsticky t) 232 262 (fontified nil) 262 277 (fontified nil) 277 280 (fontified nil) 280 281 (face font-lock-string-face fontified nil) 281 282 (face font-lock-string-face fontified nil) 282 283 (face font-lock-string-face fontified nil) 283 291 (face sh-quoted-exec fontified nil) 291 292 (face font-lock-string-face fontified nil) 292 294 (face font-lock-string-face fontified nil) 294 295 (face font-lock-string-face fontified nil) 295 296 (face font-lock-string-face fontified nil) 296 297 (rear-nonsticky nil fontified nil)) . 1570) (undo-tree-id1232 . -297) (undo-tree-id1233 . -297) (undo-tree-id1234 . -297) (nil rear-nonsticky t 1866 . 1867)) (25736 10082 697236 0) 0 nil])
([nil nil ((1493 . 1494)) nil (25736 10093 689385 0) 0 nil])
nil
([nil nil ((#("9" 0 1 (face font-lock-comment-face fontified t)) . -1493) (undo-tree-id1235 . -1) 1494) nil (25736 10093 689374 0) 0 nil])
([nil nil ((1493 . 1494)) nil (25736 10093 689331 0) 0 nil])
([nil nil ((#("40" 0 2 (face font-lock-comment-face fontified t)) . -1528) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) 1530 (t 25736 10093 700729 967000)) nil (25736 10262 316862 0) 0 nil])
([nil nil ((1528 . 1530)) nil (25736 10262 316843 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1548) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) 1549) nil (25736 10262 316831 0) 0 nil])
([nil nil ((1548 . 1549)) nil (25736 10785 26575 0) 0 nil])
([nil nil ((#("crepe" 0 5 (face font-lock-comment-face fontified t)) . -1518) (undo-tree-id1259 . -5) (undo-tree-id1260 . -5) 1523) nil (25736 10799 462040 0) 0 nil] [nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1493) (undo-tree-id1241 . -1) 1494 (t 25736 10262 329269 270000)) ((1493 . 1494)) (25736 10784 817321 0) 0 nil])
([nil nil ((1518 . 1521)) nil (25736 10799 462025 0) 0 nil])
([nil nil ((1493 . 1494)) ((#("5" 0 1 (face font-lock-comment-face fontified t)) . 1493)) (25736 10782 538391 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -1518) (undo-tree-id1256 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -1519) (undo-tree-id1257 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1520) (undo-tree-id1258 . -1) 1521) nil (25736 10799 462013 0) 0 nil])
([nil nil ((#("-cl 25" 0 6 (face font-lock-comment-face fontified t)) . 1524) (undo-tree-id1252 . -6) (undo-tree-id1253 . -4) (undo-tree-id1254 . -6) (t 25736 10311 457500 548000)) ((1524 . 1530)) (25736 10779 711358 0) 0 nil])
([nil nil ((1518 . 1523)) nil (25736 10799 461978 0) 0 nil])
([nil nil ((#("-ns 0.4 -lg 1" 0 13 (face font-lock-comment-face fontified t)) . 1530) (undo-tree-id1250 . -13) (undo-tree-id1251 . -13)) ((1530 . 1543)) (25736 10779 262941 0) 0 nil])
([nil nil ((1550 . 1553)) nil (25736 10799 461962 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1529) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) 1530) ((1529 . 1530)) (25736 10778 624687 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1493) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) 1494 (t 25736 10799 493089 64000)) nil (25736 11100 14073 0) 0 nil])
([nil nil ((#("-f0p crepe  " 0 12 (face font-lock-comment-face fontified t)) . 1513) (undo-tree-id1242 . -12) (undo-tree-id1243 . -12) (undo-tree-id1244 . -5) (undo-tree-id1245 . -11) (undo-tree-id1246 . -11) (undo-tree-id1247 . -12)) ((1513 . 1525) (t 25736 10370 575452 196000)) (25736 10776 559322 0) 0 nil])
([nil nil ((1493 . 1494)) nil (25736 11100 13988 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1493) (undo-tree-id1255 . -1) 1494 (t 25736 10370 575452 196000)) ((1493 . 1494)) (25736 10776 204919 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1138) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (#("3" 0 1 (face font-lock-comment-face fontified t)) . -1139) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) 1140 (t 25736 11100 31754 662000)) nil (25736 11363 744807 0) 0 nil])
([nil nil ((1493 . 1494)) ((#("8" 0 1 (face font-lock-comment-face fontified t)) . 1493)) (25736 10776 204733 0) 0 nil])
([nil nil ((1138 . 1140)) nil (25736 11363 744779 0) 0 nil])
nil
([nil nil ((1134 . 1137)) nil (25736 11363 744772 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1136) (undo-tree-id1263 . -1) 1137) nil (25736 11363 744759 0) 0 nil])
([nil nil ((1136 . 1142)) nil (25736 11363 744709 0) 0 nil])
([nil nil ((#("dio" 0 3 (face font-lock-comment-face fontified t)) . 1105) (undo-tree-id1268 . -3) (undo-tree-id1269 . -2) (undo-tree-id1270 . -3) 1107 (t 25736 11363 756675 316000)) nil (25736 11377 403327 0) 0 nil])
([nil nil ((1105 . 1110)) nil (25736 11377 403291 0) 0 nil])
([nil nil ((1136 . 1139)) nil (25736 11377 403274 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1143) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) 1144 (t 25736 11377 415935 613000)) nil (25736 11426 313122 0) 0 nil])
([nil nil ((1143 . 1144)) nil (25736 11426 313070 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -993) (undo-tree-id1273 . -1) 994 (t 25736 11426 326631 382000)) nil (25736 11470 167411 0) 0 nil])
([nil nil ((993 . 994)) nil (25736 11470 167376 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#("6" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) 918 (t 25736 11470 180285 100000)) nil (25736 11527 111672 0) 0 nil])
([nil nil ((916 . 918)) nil (25736 11527 111614 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -1143) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) 1144 (t 25736 11527 124920 567000)) nil (25736 11590 413887 0) 0 nil])
([nil nil ((1143 . 1144)) nil (25736 11590 413844 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -993) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) 994 (t 25736 11590 426630 403000)) nil (25736 11610 274253 0) 0 nil])
([nil nil ((993 . 994)) nil (25736 11610 274211 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1151) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -1152) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) 1153 (t 25736 11610 286870 83000)) nil (25736 11665 743519 0) 0 nil])
([nil nil ((1151 . 1153)) nil (25736 11665 743453 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -993) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 994 (t 25736 11665 755014 867000)) nil (25736 11707 87095 0) 0 nil])
([nil nil ((993 . 994)) nil (25736 11707 87041 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1114) (undo-tree-id1312 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1115) (undo-tree-id1313 . -1) 1116 (t 25736 11707 99623 757000)) nil (25736 11761 153491 0) 0 nil])
([nil nil ((1114 . 1117)) nil (25736 11761 153474 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1135) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) 1136) nil (25736 11761 153452 0) 0 nil])
([nil nil ((1135 . 1136)) nil (25736 11761 153333 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1144) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) 1145 (t 25736 11761 165697 684000)) nil (25736 11822 39958 0) 0 nil])
([nil nil ((1144 . 1145)) nil (25736 11822 39911 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1121) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) 1122 (t 25736 11822 59013 91000)) nil (25736 11841 931354 0) 0 nil])
([nil nil ((1121 . 1122)) nil (25736 11841 931335 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1121) (undo-tree-id1317 . -1) 1122) nil (25736 11841 931323 0) 0 nil])
([nil nil ((1121 . 1123)) nil (25736 11841 931288 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -953) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -954) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -955) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -956) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -957) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) 958 (t 25736 11841 943209 700000)) nil (25736 11846 816784 0) 0 nil])
([nil nil ((#("-cr 0.5 " 0 8 (face font-lock-comment-face fontified t)) . 1069) (undo-tree-id1457 . -8) (undo-tree-id1458 . -8) (t 25736 11846 828613 824000)) nil (25736 11895 687195 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1085 . 1086) (nil fontified nil 1078 . 1086) (1078 . 1086)) nil (25736 11895 687177 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) 1085) nil (25736 11895 687111 0) 0 nil])
([nil nil ((1084 . 1085)) nil (25736 11895 686785 0) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-comment-face fontified t)) . -1140) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) 1141 (t 25736 11895 700112 385000)) nil (25736 11965 195242 0) 0 nil])
([nil nil ((1140 . 1141)) nil (25736 11965 195225 0) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-comment-face fontified t)) . -1140) (undo-tree-id1459 . -1) 1141) nil (25736 11965 195214 0) 0 nil])
([nil nil ((1140 . 1142)) nil (25736 11965 195180 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 1085 (t 25736 11965 208195 898000)) nil (25736 12011 510434 0) 0 nil])
([nil nil ((1084 . 1085)) nil (25736 12011 510397 0) 0 nil])
([nil nil ((#("python inference_main.py -m \"logs/44k/G_160000.pth\" -c \"configs/config.json\" -shd -dm \"logs/44k/diffusion/model_100000.pt\" -dc \"configs/diffusion.yaml\" -fr -cm \"logs/44k/feature_and_index.pkl\" -cr 0.5 -s \"jay\" -lea 0.5 -f0p crepe -cl 25 -t 0 -ns 0.4 -lg 1 -a " 0 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 28 (face font-lock-comment-face fontified t) 28 51 (face font-lock-comment-face fontified t) 51 55 (face font-lock-comment-face fontified t) 55 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 86 (face font-lock-comment-face fontified t) 86 106 (face font-lock-comment-face fontified t) 106 120 (face font-lock-comment-face fontified t) 120 121 (face font-lock-comment-face fontified t rear-nonsticky t) 121 122 (face font-lock-comment-face fontified t) 122 127 (face font-lock-comment-face fontified t) 127 150 (face font-lock-comment-face fontified t) 150 151 (face font-lock-comment-face fontified t rear-nonsticky t) 151 152 (face font-lock-comment-face fontified t) 152 156 (face font-lock-comment-face fontified t) 156 160 (face font-lock-comment-face fontified t) 160 161 (face font-lock-comment-face fontified t) 161 190 (face font-lock-comment-face fontified t) 190 191 (face font-lock-comment-face fontified t rear-nonsticky t) 191 192 (face font-lock-comment-face fontified t) 192 200 (face font-lock-comment-face fontified t) 200 201 (face font-lock-comment-face fontified t) 201 204 (face font-lock-comment-face fontified t) 204 208 (face font-lock-comment-face fontified t) 208 209 (face font-lock-comment-face fontified t rear-nonsticky t) 209 219 (face font-lock-comment-face fontified t) 219 230 (face font-lock-comment-face fontified t) 230 236 (face font-lock-comment-face fontified t) 236 237 (face font-lock-comment-face fontified t) 237 241 (face font-lock-comment-face fontified t) 241 242 (face font-lock-comment-face fontified t) 242 255 (face font-lock-comment-face fontified t) 255 259 (face font-lock-comment-face fontified t)) . -1305) (undo-tree-id1467 . -237) (undo-tree-id1468 . -259) (undo-tree-id1469 . -224) (undo-tree-id1470 . -200) (undo-tree-id1471 . -259) 1565 (t 25736 12011 522864 995000)) nil (25736 12068 870540 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1585 . 1586) (nil fontified nil 1585 . 1586) (nil fontified nil 1584 . 1585) (nil fontified nil 1577 . 1584) (nil fontified nil 1576 . 1577) (nil fontified nil 1574 . 1576) (nil fontified nil 1515 . 1574) (nil fontified nil 1514 . 1515) (nil fontified nil 1507 . 1514) (nil fontified nil 1506 . 1507) (nil fontified nil 1505 . 1506) (nil fontified nil 1501 . 1505) (nil fontified nil 1498 . 1501) (nil fontified nil 1496 . 1498) (nil fontified nil 1495 . 1496) (nil fontified nil 1466 . 1495) (nil fontified nil 1465 . 1466) (nil fontified nil 1461 . 1465) (nil fontified nil 1455 . 1461) (nil fontified nil 1432 . 1455) (nil fontified nil 1426 . 1432) (nil fontified nil 1425 . 1426) (nil fontified nil 1411 . 1425) (nil fontified nil 1391 . 1411) (nil fontified nil 1382 . 1391) (nil fontified nil 1381 . 1382) (nil fontified nil 1360 . 1381) (nil fontified nil 1356 . 1360) (nil fontified nil 1333 . 1356) (nil fontified nil 1330 . 1333) (nil fontified nil 1329 . 1330) (nil fontified nil 1305 . 1329) (1305 . 1586)) nil (25736 12068 870497 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1585) (undo-tree-id1466 . -1) 1586) nil (25736 12068 870448 0) 0 nil])
([nil nil ((1585 . 1586)) nil (25736 12068 870432 0) 0 nil])
([nil nil ((#("-n \"13.wav\" " 0 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 10 (face font-lock-comment-face fontified t) 10 11 (face font-lock-comment-face fontified t rear-nonsticky t) 11 12 (face font-lock-comment-face fontified t)) . 1574) (undo-tree-id1464 . -12) (undo-tree-id1465 . -12)) nil (25736 12068 870415 0) 0 nil])
([nil nil ((1594 . 1595) (t 25736 12068 884208 241000)) nil (25736 12963 72421 0) 0 nil])
([nil nil ((1595 . 1612)) nil (25736 12963 72414 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1611) (undo-tree-id1488 . -1) 1612) nil (25736 12963 72406 0) 0 nil])
([nil nil ((1611 . 1613)) nil (25736 12963 72396 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-face fontified t)) . -1611) (undo-tree-id1486 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1612) (undo-tree-id1487 . -1) 1613) nil (25736 12963 72387 0) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-comment-face fontified t)) . -1608) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1609) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -1610) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) 1611) nil (25736 12963 72366 0) 0 nil])
([nil nil ((1608 . 1627)) nil (25736 12963 72323 0) 0 nil])
([nil nil ((1630 . 1641) (1629 . 1631) (#("(" 0 1 (face font-lock-comment-face fontified nil)) . -1629) (1628 . 1630) (1627 . 1629) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1627) (1627 . 1628)) nil (25736 12963 72314 0) 0 nil])
([nil nil ((1643 . 1644)) nil (25736 12963 72300 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1687 . 1688) (nil fontified nil 1644 . 1688) (1644 . 1688)) nil (25736 12963 72293 0) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-comment-face fontified t)) . -1680) (undo-tree-id1472 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1681) (undo-tree-id1473 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -1682) (undo-tree-id1474 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1683) (undo-tree-id1475 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -1684) (undo-tree-id1476 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -1685) (undo-tree-id1477 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1686) (undo-tree-id1478 . -1) (#(">" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1687) (undo-tree-id1479 . -1) 1688) nil (25736 12963 72273 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1695 . 1696) (nil fontified nil 1695 . 1696) (nil fontified nil 1694 . 1695) (nil fontified nil 1692 . 1694) (nil fontified nil 1691 . 1692) (nil fontified nil 1683 . 1691) (nil fontified nil 1682 . 1683) (nil fontified nil 1681 . 1682) (nil fontified nil 1680 . 1681) (1680 . 1696)) nil (25736 12963 72212 0) 0 nil])
([nil nil ((1695 . 1699)) nil (25736 12963 72192 0) 0 nil])
([nil nil ((1700 . 1701)) nil (25736 12963 72176 0) 0 nil])
([nil nil ((1624 . 1627) (t 25736 12963 113674 178000)) nil (25736 13029 165432 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1667) (undo-tree-id1494 . -1) 1668) nil (25736 13029 165423 0) 0 nil])
([nil nil ((1667 . 1669)) nil (25736 13029 165412 0) 0 nil])
([nil nil ((1671 . 1672)) nil (25736 13029 165405 0) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-comment-face fontified t)) . -1671) (undo-tree-id1493 . -1) 1672) nil (25736 13029 165397 0) 0 nil])
([nil nil ((1671 . 1672)) nil (25736 13029 165385 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1670) (undo-tree-id1491 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1671) (undo-tree-id1492 . -1) 1672) nil (25736 13029 165376 0) 0 nil])
([nil nil ((1670 . 1673)) nil (25736 13029 165358 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1681) (undo-tree-id1490 . -1) 1682) nil (25736 13029 165348 0) 0 nil])
([nil nil ((1681 . 1684)) nil (25736 13029 165330 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1685) (undo-tree-id1489 . -1) 1686) nil (25736 13029 165318 0) 0 nil])
([nil nil ((1685 . 1687)) nil (25736 13029 165272 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1668) (undo-tree-id1496 . -1) 1669 (t 25736 13029 178790 962000)) nil (25736 13267 101724 0) 0 nil])
([nil nil ((1668 . 1669)) nil (25736 13267 101708 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1686) (undo-tree-id1495 . -1) 1687) nil (25736 13267 101695 0) 0 nil])
([nil nil ((1686 . 1687)) nil (25736 13267 101640 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1562) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1563) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1564) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) 1565 (t 25736 13267 114727 28000)) nil (25736 13546 208045 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1418) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) 1419 (t 25736 13546 221375 107000)) nil (25736 20929 560746 0) 0 nil])
([nil nil ((1418 . 1419)) nil (25736 20929 560692 0) 0 nil])
([nil nil ((1571 . 1580) (t 25736 20929 578361 174000)) nil (25736 21419 862597 0) 0 nil])
([nil nil ((1580 . 1583)) nil (25736 21419 862582 0) 0 nil])
([nil nil ((1583 . 1591)) nil (25736 21419 862569 0) 0 nil])
([nil nil ((#(" -cr 0.5 -lea 0.5 -f0p crepe -cl 25 -t -1 -ns 0.4 -lg 1 -a -ks 1000" 0 1 (face font-lock-comment-face fontified t) 1 8 (face font-lock-comment-face fontified t) 8 9 (face font-lock-comment-face rear-nonsticky t fontified t) 9 67 (face font-lock-comment-face fontified t)) . -1077) (undo-tree-id1508 . -67) (undo-tree-id1509 . -67) 1145) nil (25736 21419 862551 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1162 . 1163) (nil fontified nil 1161 . 1163) (nil fontified nil 1085 . 1161) (nil fontified nil 1084 . 1085) (nil fontified nil 1077 . 1084) (1077 . 1163)) nil (25736 21419 862514 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1160) (undo-tree-id1505 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1161) (undo-tree-id1506 . -1) (#("n" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1162) (undo-tree-id1507 . -1) 1163) nil (25736 21419 862467 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -989) (undo-tree-id1521 . -1) 990 (t 25736 21419 878907 455000)) nil (25736 21538 808429 0) 0 nil])
([nil nil ((989 . 990)) nil (25736 21538 808417 0) 0 nil])
([nil nil ((1077 . 1078)) nil (25736 21538 808411 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -1151) (undo-tree-id1520 . -1) 1152) nil (25736 21538 808403 0) 0 nil])
([nil nil ((1151 . 1152)) nil (25736 21538 808391 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1142) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1143) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1144) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1145) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 1146) nil (25736 21538 808377 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1156) (undo-tree-id1511 . -1) 1157) nil (25736 21538 808333 0) 0 nil])
([nil nil ((1156 . 1157)) nil (25736 21538 808320 0) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-comment-face fontified t)) . -1156) (undo-tree-id1510 . -1) 1157) nil (25736 21547 78732 0) 0 nil])
([nil nil ((1156 . 1159)) nil (25736 21558 45693 0) 0 nil] [nil nil ((1156 . 1158)) ((#("75" 0 2 (face font-lock-comment-face fontified t)) . 1156) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) (undo-tree-id1538 . -2) (undo-tree-id1539 . -2) (undo-tree-id1540 . -2) (undo-tree-id1541 . -2) (undo-tree-id1542 . -2) (undo-tree-id1543 . -2) (undo-tree-id1544 . -2) (undo-tree-id1545 . -2) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (undo-tree-id1548 . -2) (undo-tree-id1549 . -2) (undo-tree-id1550 . -2) (undo-tree-id1551 . -2) (undo-tree-id1552 . -2) (undo-tree-id1553 . -2) (undo-tree-id1554 . -2) (undo-tree-id1555 . -2) (undo-tree-id1556 . -2) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) (undo-tree-id1568 . -2) (undo-tree-id1569 . -2) (undo-tree-id1570 . -2) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (undo-tree-id1573 . -2) (undo-tree-id1574 . -2) (undo-tree-id1575 . -2) (undo-tree-id1576 . -2) (undo-tree-id1577 . -2) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (undo-tree-id1608 . -2) (undo-tree-id1609 . -2) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (undo-tree-id1615 . -2) (undo-tree-id1616 . -2) (undo-tree-id1617 . -2) (undo-tree-id1618 . -2) (undo-tree-id1619 . -2) (undo-tree-id1620 . -2) (undo-tree-id1621 . -2) (undo-tree-id1622 . -2) (undo-tree-id1623 . -2) (undo-tree-id1624 . -2) (undo-tree-id1625 . -2) (undo-tree-id1626 . -2) (undo-tree-id1627 . -2) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (undo-tree-id1630 . -2) (undo-tree-id1631 . -2) (undo-tree-id1632 . -2) (undo-tree-id1633 . -2) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (undo-tree-id1636 . -2) (undo-tree-id1637 . -2) (undo-tree-id1638 . -2) (undo-tree-id1639 . -2) (undo-tree-id1640 . -2) (undo-tree-id1641 . -2) (undo-tree-id1642 . -2) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (undo-tree-id1645 . -2) (undo-tree-id1646 . -2) (undo-tree-id1647 . -2) (undo-tree-id1648 . -2) (undo-tree-id1649 . -2) (undo-tree-id1650 . -2) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) (undo-tree-id1667 . -2) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2) (undo-tree-id1673 . -2) (undo-tree-id1674 . -2) (undo-tree-id1675 . -2) (undo-tree-id1676 . -2) (undo-tree-id1677 . -2) (undo-tree-id1678 . -2) (undo-tree-id1679 . -2) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -2) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (undo-tree-id1754 . -2) (undo-tree-id1755 . -2) (undo-tree-id1756 . -2) (undo-tree-id1757 . -2) (undo-tree-id1758 . -2) (undo-tree-id1759 . -2) (undo-tree-id1760 . -2) (undo-tree-id1761 . -2) (undo-tree-id1762 . -2) (undo-tree-id1763 . -2) (undo-tree-id1764 . -2) (undo-tree-id1765 . -2) (undo-tree-id1766 . -2) (undo-tree-id1767 . -2) (undo-tree-id1768 . -2) (undo-tree-id1769 . -2) (undo-tree-id1770 . -2) (undo-tree-id1771 . -2) (undo-tree-id1772 . -2) (undo-tree-id1773 . -2) (undo-tree-id1774 . -2) (undo-tree-id1775 . -2) (undo-tree-id1776 . -2) (undo-tree-id1777 . -2) (undo-tree-id1778 . -2) (undo-tree-id1779 . -2) (undo-tree-id1780 . -2) (undo-tree-id1781 . -2) (undo-tree-id1782 . -2) (undo-tree-id1783 . -2) (undo-tree-id1784 . -2) (undo-tree-id1785 . -2) (undo-tree-id1786 . -2) (undo-tree-id1787 . -2) (undo-tree-id1788 . -2) (undo-tree-id1789 . -2) (undo-tree-id1790 . -2) (undo-tree-id1791 . -2) (undo-tree-id1792 . -2) (undo-tree-id1793 . -2) (undo-tree-id1794 . -2) (undo-tree-id1795 . -2) (undo-tree-id1796 . -2) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -2) (undo-tree-id1801 . -2) (undo-tree-id1802 . -2) (undo-tree-id1803 . -2) (undo-tree-id1804 . -2) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) (undo-tree-id1808 . -2) (undo-tree-id1809 . -2) (undo-tree-id1810 . -2) (undo-tree-id1811 . -2) (undo-tree-id1812 . -2) (undo-tree-id1813 . -2) (undo-tree-id1814 . -2) (undo-tree-id1815 . -2) (undo-tree-id1816 . -2) (undo-tree-id1817 . -2) (undo-tree-id1818 . -2) (undo-tree-id1819 . -2) (undo-tree-id1820 . -2) (undo-tree-id1821 . -2) (undo-tree-id1822 . -2) (undo-tree-id1823 . -2) (undo-tree-id1824 . -2) (undo-tree-id1825 . -2) (undo-tree-id1826 . -2) (undo-tree-id1827 . -2) (undo-tree-id1828 . -2) (undo-tree-id1829 . -2) (undo-tree-id1830 . -2) (undo-tree-id1831 . -2) (undo-tree-id1832 . -2) (undo-tree-id1833 . -2) (undo-tree-id1834 . -2) (undo-tree-id1835 . -2) (undo-tree-id1836 . -2) (undo-tree-id1837 . -2) (undo-tree-id1838 . -2) (undo-tree-id1839 . -2) (undo-tree-id1840 . -2) (undo-tree-id1841 . -2) (undo-tree-id1842 . -2) (undo-tree-id1843 . -2) (undo-tree-id1844 . -2) (undo-tree-id1845 . -2) (undo-tree-id1846 . -2) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (undo-tree-id1849 . -2) (undo-tree-id1850 . -2) (undo-tree-id1851 . -2) (undo-tree-id1852 . -2) (undo-tree-id1853 . -2) (undo-tree-id1854 . -2) (undo-tree-id1855 . -2) (undo-tree-id1856 . -2) (undo-tree-id1857 . -2) (undo-tree-id1858 . -2) (undo-tree-id1859 . -2) (undo-tree-id1860 . -2) (undo-tree-id1861 . -2) (undo-tree-id1862 . -2) (undo-tree-id1863 . -2) (undo-tree-id1864 . -2) (undo-tree-id1865 . -2) (undo-tree-id1866 . -2) (undo-tree-id1867 . -2) (undo-tree-id1868 . -2) (undo-tree-id1869 . -2) (undo-tree-id1870 . -2) (undo-tree-id1871 . -2) (undo-tree-id1872 . -2) (undo-tree-id1873 . -2) (undo-tree-id1874 . -2) (undo-tree-id1875 . -2) (undo-tree-id1876 . -2) (undo-tree-id1877 . -2) (undo-tree-id1878 . -2) (undo-tree-id1879 . -2) (undo-tree-id1880 . -2) (undo-tree-id1881 . -2) (undo-tree-id1882 . -2) (undo-tree-id1883 . -2) (undo-tree-id1884 . -2) (undo-tree-id1885 . -2) (undo-tree-id1886 . -2) (undo-tree-id1887 . -2) (undo-tree-id1888 . -2) (undo-tree-id1889 . -2) (undo-tree-id1890 . -2) (undo-tree-id1891 . -2) (undo-tree-id1892 . -2) (undo-tree-id1893 . -2) (undo-tree-id1894 . -2) (undo-tree-id1895 . -2) (undo-tree-id1896 . -2) (undo-tree-id1897 . -2) (undo-tree-id1898 . -2) (undo-tree-id1899 . -2) (undo-tree-id1900 . -2) (undo-tree-id1901 . -2) (undo-tree-id1902 . -2) (undo-tree-id1903 . -2) (undo-tree-id1904 . -2) (undo-tree-id1905 . -2) (undo-tree-id1906 . -2) (undo-tree-id1907 . -2) (undo-tree-id1908 . -2) (undo-tree-id1909 . -2) (undo-tree-id1910 . -2) (undo-tree-id1911 . -2) (undo-tree-id1912 . -2) (undo-tree-id1913 . -2) (undo-tree-id1914 . -2) (undo-tree-id1915 . -2) (undo-tree-id1916 . -2) (undo-tree-id1917 . -2) (undo-tree-id1918 . -2) (undo-tree-id1919 . -2) (undo-tree-id1920 . -2) (undo-tree-id1921 . -2) (t 25736 21538 822269 883000)) (25736 21538 808259 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1116) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1117) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) 1118 (t 25736 21558 60308 894000)) nil (25736 21595 796352 0) 0 nil])
nil
([nil nil ((1116 . 1118)) nil (25736 21595 796320 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1116) (undo-tree-id1922 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1117) (undo-tree-id1923 . -1) 1118) nil (25736 21595 796288 0) 0 nil])
([nil nil ((1116 . 1117)) nil (25736 21595 796221 0) 0 nil])
([nil nil ((1117 . 1121) (t 25736 21595 811261 637000)) nil (25736 21615 92518 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1120) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) 1121) nil (25736 21615 92404 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1156) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1157) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1158) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#("7" 0 1 (face font-lock-comment-face fontified t)) . -1159) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -1160) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) 1161 (t 25736 21615 105836 579000)) nil (25736 21714 134921 0) 0 nil])
([nil nil ((1156 . 1157)) nil (25736 21714 134818 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1602) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) 1603 (t 25736 21714 149917 464000)) nil (25736 21793 589776 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . -1601) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) 1602) nil (25736 21793 589753 0) 0 nil])
([nil nil ((1601 . 1604)) nil (25736 21793 589698 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1156) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) 1157 (t 25736 21793 603829 436000)) nil (25736 21810 987105 0) 0 nil])
([nil nil ((1156 . 1160)) nil (25736 21810 987066 0) 0 nil])
([nil nil ((1164 . 1166) (t 25736 21811 2444 416000)) nil (25736 21852 452593 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-comment-face fontified t)) . -1164) (undo-tree-id2085 . -1) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1165) (undo-tree-id2086 . -1) 1166) nil (25736 22098 49957 0) 0 nil])
([nil nil ((1166 . 1169) (1165 . 1167) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1165) (1161 . 1166)) ((#("-wf \"" 0 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face fontified nil)) . 1161) (undo-tree-id3990 . -4) (undo-tree-id3991 . -4) (undo-tree-id3993 . -4) (undo-tree-id3995 . -4) (undo-tree-id3997 . -4) (undo-tree-id3999 . -4) (undo-tree-id4001 . -4) (undo-tree-id4003 . -4) (undo-tree-id4005 . -4) (undo-tree-id4007 . -4) (undo-tree-id4009 . -4) (undo-tree-id4011 . -4) (undo-tree-id4013 . -4) (undo-tree-id4015 . -4) (undo-tree-id4017 . -4) (undo-tree-id4019 . -4) (undo-tree-id4021 . -4) (undo-tree-id4023 . -4) (undo-tree-id4025 . -4) (undo-tree-id4027 . -4) (undo-tree-id4029 . -4) (undo-tree-id4031 . -4) (undo-tree-id4033 . -4) (undo-tree-id4035 . -4) (undo-tree-id4037 . -4) (undo-tree-id4039 . -4) (undo-tree-id4041 . -4) (undo-tree-id4043 . -4) (undo-tree-id4045 . -4) (undo-tree-id4047 . -4) (undo-tree-id4049 . -4) (undo-tree-id4051 . -4) (undo-tree-id4053 . -4) (undo-tree-id4055 . -4) (undo-tree-id4057 . -4) (undo-tree-id4059 . -4) (undo-tree-id4061 . -4) (undo-tree-id4063 . -4) (undo-tree-id4065 . -4) (undo-tree-id4067 . -4) (undo-tree-id4069 . -4) (undo-tree-id4071 . -4) (undo-tree-id4073 . -4) (undo-tree-id4075 . -4) (undo-tree-id4077 . -4) (undo-tree-id4079 . -4) (undo-tree-id4081 . -4) (undo-tree-id4083 . -4) (undo-tree-id4085 . -4) (undo-tree-id4087 . -4) (undo-tree-id4089 . -4) (undo-tree-id4091 . -4) (undo-tree-id4093 . -4) (undo-tree-id4095 . -4) (undo-tree-id4097 . -4) (undo-tree-id4099 . -4) (undo-tree-id4101 . -4) (undo-tree-id4103 . -4) (undo-tree-id4105 . -4) (undo-tree-id4107 . -4) (undo-tree-id4109 . -4) (undo-tree-id4111 . -4) (undo-tree-id4113 . -4) (undo-tree-id4115 . -4) (undo-tree-id4117 . -4) (undo-tree-id4119 . -4) (undo-tree-id4121 . -4) (undo-tree-id4123 . -4) (undo-tree-id4125 . -4) (undo-tree-id4127 . -4) (undo-tree-id4129 . -4) (undo-tree-id4131 . -4) (undo-tree-id4133 . -4) (undo-tree-id4135 . -4) (undo-tree-id4137 . -4) (undo-tree-id4139 . -4) (undo-tree-id4141 . -4) (undo-tree-id4143 . -4) (undo-tree-id4145 . -4) (undo-tree-id4147 . -4) (undo-tree-id4149 . -4) (undo-tree-id4151 . -4) (undo-tree-id4153 . -4) (undo-tree-id4155 . -4) (undo-tree-id4157 . -4) (undo-tree-id4159 . -4) (undo-tree-id4161 . -4) (undo-tree-id4163 . -4) (undo-tree-id4165 . -4) (undo-tree-id4167 . -4) (undo-tree-id4169 . -4) (1165 . 1166) (#("\"\"" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face fontified nil)) . 1165) (undo-tree-id4171 . -2) (undo-tree-id4172 . -2) (undo-tree-id4174 . -2) (undo-tree-id4176 . -2) (undo-tree-id4178 . -2) (undo-tree-id4180 . -2) (undo-tree-id4182 . -2) (undo-tree-id4184 . -2) (undo-tree-id4186 . -2) (undo-tree-id4188 . -2) (undo-tree-id4190 . -2) (undo-tree-id4192 . -2) (undo-tree-id4194 . -2) (undo-tree-id4196 . -2) (undo-tree-id4198 . -2) (undo-tree-id4200 . -2) (undo-tree-id4202 . -2) (undo-tree-id4204 . -2) (undo-tree-id4206 . -2) (undo-tree-id4208 . -2) (undo-tree-id4210 . -2) (undo-tree-id4212 . -2) (undo-tree-id4214 . -2) (undo-tree-id4216 . -2) (undo-tree-id4218 . -2) (undo-tree-id4220 . -2) (undo-tree-id4222 . -2) (undo-tree-id4224 . -2) (undo-tree-id4226 . -2) (undo-tree-id4228 . -2) (undo-tree-id4230 . -2) (undo-tree-id4232 . -2) (undo-tree-id4234 . -2) (undo-tree-id4236 . -2) (undo-tree-id4238 . -2) (undo-tree-id4240 . -2) (undo-tree-id4242 . -2) (undo-tree-id4244 . -2) (undo-tree-id4246 . -2) (undo-tree-id4248 . -2) (undo-tree-id4250 . -2) (undo-tree-id4252 . -2) (undo-tree-id4254 . -2) (undo-tree-id4256 . -2) (undo-tree-id4258 . -2) (undo-tree-id4260 . -2) (undo-tree-id4262 . -2) (undo-tree-id4264 . -2) (undo-tree-id4266 . -2) (undo-tree-id4268 . -2) (undo-tree-id4270 . -2) (undo-tree-id4272 . -2) (undo-tree-id4274 . -2) (undo-tree-id4276 . -2) (undo-tree-id4278 . -2) (undo-tree-id4280 . -2) (undo-tree-id4282 . -2) (undo-tree-id4284 . -2) (undo-tree-id4286 . -2) (undo-tree-id4288 . -2) (undo-tree-id4290 . -2) (undo-tree-id4292 . -2) (undo-tree-id4294 . -2) (undo-tree-id4296 . -2) (undo-tree-id4298 . -2) (undo-tree-id4300 . -2) (undo-tree-id4302 . -2) (undo-tree-id4304 . -2) (undo-tree-id4306 . -2) (undo-tree-id4308 . -2) (undo-tree-id4310 . -2) (undo-tree-id4312 . -2) (undo-tree-id4314 . -2) (undo-tree-id4316 . -2) (undo-tree-id4318 . -2) (undo-tree-id4320 . -2) (undo-tree-id4322 . -2) (undo-tree-id4324 . -2) (undo-tree-id4326 . -2) (undo-tree-id4328 . -2) (undo-tree-id4330 . -2) (undo-tree-id4332 . -2) (undo-tree-id4334 . -2) (undo-tree-id4336 . -2) (undo-tree-id4338 . -2) (undo-tree-id4340 . -2) (undo-tree-id4342 . -2) (undo-tree-id4344 . -2) (undo-tree-id4346 . -2) (undo-tree-id4348 . -2) (undo-tree-id4350 . -2) (#("wav" 0 3 (face font-lock-comment-face fontified t)) . 1166)) (25736 22098 751263 0) 0 nil])
([nil nil ((1170 . 1171)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1170) (undo-tree-id3989 . -1)) (25736 22098 920819 0) 0 nil])
([nil nil ((1159 . 1160)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 1159) (t 25736 21894 566764 649000)) (25736 22101 558486 0) 0 nil])
([nil nil ((1106 . 1107) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . 1101) (1100 . 1101) (1100 . 1101) (t 25736 21894 566764 649000)) nil (25736 22107 338373 0) 0 nil] [nil nil ((#("-cl 25" 0 6 (face font-lock-comment-face fontified t)) . 1106) (t 25736 21894 566764 649000)) ((1106 . 1112)) (25736 22101 54589 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1151) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) 1152 (t 25736 22107 358303 610000)) nil (25736 22274 486939 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 958 . 959) (nil fontified nil 953 . 959) (953 . 959)) ((#("-cl 25" 0 5 (face font-lock-comment-face fontified nil) 5 6 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 953) (undo-tree-id3621 . -6) (undo-tree-id3622 . -6) (undo-tree-id3623 . -6) (undo-tree-id3624 . -6) (undo-tree-id3625 . -6) (undo-tree-id3626 . -6) (undo-tree-id3627 . -6) (undo-tree-id3628 . -6) (undo-tree-id3629 . -6) (undo-tree-id3630 . -6) (undo-tree-id3631 . -6) (undo-tree-id3632 . -6) (undo-tree-id3633 . -6) (undo-tree-id3634 . -6) (undo-tree-id3635 . -6) (undo-tree-id3636 . -6) (undo-tree-id3637 . -6) (undo-tree-id3638 . -6) (undo-tree-id3639 . -6) (undo-tree-id3640 . -6) (undo-tree-id3641 . -6) (undo-tree-id3642 . -6) (undo-tree-id3643 . -6) (undo-tree-id3644 . -6) (undo-tree-id3645 . -6) (undo-tree-id3646 . -6) (undo-tree-id3647 . -6) (undo-tree-id3648 . -6) (undo-tree-id3649 . -6) (undo-tree-id3650 . -6) (undo-tree-id3651 . -6) (undo-tree-id3652 . -6) (undo-tree-id3653 . -6) (undo-tree-id3654 . -6) (undo-tree-id3655 . -6) (undo-tree-id3656 . -6) (undo-tree-id3657 . -6) (undo-tree-id3658 . -6) (undo-tree-id3659 . -6) (undo-tree-id3660 . -6) (undo-tree-id3661 . -6) (undo-tree-id3662 . -6) (undo-tree-id3663 . -6) (undo-tree-id3664 . -6) (undo-tree-id3665 . -6) (undo-tree-id3666 . -6) (undo-tree-id3667 . -6) (undo-tree-id3668 . -6) (undo-tree-id3669 . -6) (undo-tree-id3670 . -6) (undo-tree-id3671 . -6) (undo-tree-id3672 . -6) (undo-tree-id3673 . -6) (undo-tree-id3674 . -6) (undo-tree-id3675 . -6) (undo-tree-id3676 . -6) (undo-tree-id3677 . -6) (undo-tree-id3678 . -6) (undo-tree-id3679 . -6) (undo-tree-id3680 . -6) (undo-tree-id3681 . -6) (undo-tree-id3682 . -6) (undo-tree-id3683 . -6) (undo-tree-id3684 . -6) (undo-tree-id3685 . -6) (undo-tree-id3686 . -6) (undo-tree-id3687 . -6) (undo-tree-id3688 . -6) (undo-tree-id3689 . -6) (undo-tree-id3690 . -6) (undo-tree-id3691 . -6) (undo-tree-id3692 . -6) (undo-tree-id3693 . -6) (undo-tree-id3694 . -6) (undo-tree-id3695 . -6) (undo-tree-id3696 . -6) (undo-tree-id3697 . -6) (undo-tree-id3698 . -6) (undo-tree-id3699 . -6) (undo-tree-id3700 . -6) (undo-tree-id3701 . -6) (undo-tree-id3702 . -6) (undo-tree-id3703 . -6) (undo-tree-id3704 . -6) (undo-tree-id3705 . -6) (undo-tree-id3706 . -6) (undo-tree-id3707 . -6) (undo-tree-id3708 . -6) (undo-tree-id3709 . -6) (undo-tree-id3710 . -6) (undo-tree-id3711 . -6) (undo-tree-id3712 . -6) (undo-tree-id3713 . -6) (undo-tree-id3714 . -6) (undo-tree-id3715 . -6) (undo-tree-id3716 . -6) (undo-tree-id3717 . -6) (undo-tree-id3718 . -6) (undo-tree-id3719 . -6) (undo-tree-id3720 . -6) (undo-tree-id3721 . -6) (undo-tree-id3722 . -6) (undo-tree-id3723 . -6) (undo-tree-id3724 . -6) (undo-tree-id3725 . -6) (undo-tree-id3726 . -6) (undo-tree-id3727 . -6) (undo-tree-id3728 . -6) (undo-tree-id3729 . -6) (undo-tree-id3730 . -6) (undo-tree-id3731 . -6) (undo-tree-id3732 . -6) (undo-tree-id3733 . -6) (undo-tree-id3734 . -6) (undo-tree-id3735 . -6) (undo-tree-id3736 . -6) (undo-tree-id3737 . -6) (undo-tree-id3738 . -6) (undo-tree-id3739 . -6) (undo-tree-id3740 . -6) (undo-tree-id3741 . -6) (undo-tree-id3742 . -6) (undo-tree-id3743 . -6) (undo-tree-id3744 . -6) (undo-tree-id3745 . -6) (undo-tree-id3746 . -6) (undo-tree-id3747 . -6) (undo-tree-id3748 . -6) (undo-tree-id3749 . -6) (undo-tree-id3750 . -6) (undo-tree-id3751 . -6) (undo-tree-id3752 . -6) (undo-tree-id3753 . -6) (undo-tree-id3754 . -6) (undo-tree-id3755 . -6) (undo-tree-id3756 . -6) (undo-tree-id3757 . -6) (undo-tree-id3758 . -6) (undo-tree-id3759 . -6) (undo-tree-id3760 . -6) (undo-tree-id3761 . -6) (undo-tree-id3762 . -6) (undo-tree-id3763 . -6) (undo-tree-id3764 . -6) (undo-tree-id3765 . -6) (undo-tree-id3766 . -6) (undo-tree-id3767 . -6) (undo-tree-id3768 . -6) (undo-tree-id3769 . -6) (undo-tree-id3770 . -6) (undo-tree-id3771 . -6) (undo-tree-id3772 . -6) (undo-tree-id3773 . -6) (undo-tree-id3774 . -6) (undo-tree-id3775 . -6) (undo-tree-id3776 . -6) (undo-tree-id3777 . -6) (undo-tree-id3778 . -6) (undo-tree-id3779 . -6) (undo-tree-id3780 . -6) (undo-tree-id3781 . -6) (undo-tree-id3782 . -6) (undo-tree-id3783 . -6) (undo-tree-id3784 . -6) (undo-tree-id3785 . -6) (undo-tree-id3786 . -6) (undo-tree-id3787 . -6) (undo-tree-id3788 . -6) (undo-tree-id3789 . -6) (undo-tree-id3790 . -6) (undo-tree-id3791 . -6) (undo-tree-id3792 . -6) (undo-tree-id3793 . -6) (undo-tree-id3794 . -6) (undo-tree-id3795 . -6) (undo-tree-id3796 . -6) (undo-tree-id3797 . -6) (undo-tree-id3798 . -6) (undo-tree-id3799 . -6) (undo-tree-id3800 . -6) (undo-tree-id3801 . -6) (undo-tree-id3802 . -6) (undo-tree-id3803 . -6) (undo-tree-id3804 . -6) (undo-tree-id3805 . -6) (undo-tree-id3806 . -6) (undo-tree-id3807 . -6) (undo-tree-id3808 . -6) (undo-tree-id3809 . -6) (undo-tree-id3810 . -6) (undo-tree-id3811 . -6) (undo-tree-id3812 . -6) (undo-tree-id3813 . -6) (undo-tree-id3814 . -6) (undo-tree-id3815 . -6) (undo-tree-id3816 . -6) (undo-tree-id3817 . -6) (undo-tree-id3818 . -6) (undo-tree-id3819 . -6) (undo-tree-id3820 . -6) (undo-tree-id3821 . -6) (undo-tree-id3822 . -6) (undo-tree-id3823 . -6) (undo-tree-id3824 . -6) (undo-tree-id3825 . -6) (undo-tree-id3826 . -6) (undo-tree-id3827 . -6) (undo-tree-id3828 . -6) (undo-tree-id3829 . -6) (undo-tree-id3830 . -6) (undo-tree-id3831 . -6) (undo-tree-id3832 . -6) (undo-tree-id3833 . -6) (undo-tree-id3834 . -6) (undo-tree-id3835 . -6) (undo-tree-id3836 . -6) (undo-tree-id3837 . -6) (undo-tree-id3838 . -6) (undo-tree-id3839 . -6) (undo-tree-id3840 . -6) (undo-tree-id3841 . -6) (undo-tree-id3842 . -6) (undo-tree-id3843 . -6) (undo-tree-id3844 . -6) (undo-tree-id3845 . -6) (undo-tree-id3846 . -6) (undo-tree-id3847 . -6) (undo-tree-id3848 . -6) (undo-tree-id3849 . -6) (undo-tree-id3850 . -6) (undo-tree-id3851 . -6) (undo-tree-id3852 . -6) (undo-tree-id3853 . -6) (undo-tree-id3854 . -6) (undo-tree-id3855 . -6) (undo-tree-id3856 . -6) (undo-tree-id3857 . -6) (undo-tree-id3858 . -6) (undo-tree-id3859 . -6) (undo-tree-id3860 . -6) (undo-tree-id3861 . -6) (undo-tree-id3862 . -6) (undo-tree-id3863 . -6) (undo-tree-id3864 . -6) (undo-tree-id3865 . -6) (undo-tree-id3866 . -6) (undo-tree-id3867 . -6) (undo-tree-id3868 . -6) (undo-tree-id3869 . -6) (undo-tree-id3870 . -6) (undo-tree-id3871 . -6) (undo-tree-id3872 . -6) (undo-tree-id3873 . -6) (undo-tree-id3874 . -6) (undo-tree-id3875 . -6) (undo-tree-id3876 . -6) (undo-tree-id3877 . -6) (undo-tree-id3878 . -6) (undo-tree-id3879 . -6) (undo-tree-id3880 . -6) (undo-tree-id3881 . -6) (undo-tree-id3882 . -6) (undo-tree-id3883 . -6) (undo-tree-id3884 . -6) (undo-tree-id3885 . -6) (undo-tree-id3886 . -6) (undo-tree-id3887 . -6) (undo-tree-id3888 . -6) (undo-tree-id3889 . -6) (undo-tree-id3890 . -6) (undo-tree-id3891 . -6) (undo-tree-id3892 . -6) (undo-tree-id3893 . -6) (undo-tree-id3894 . -6) (undo-tree-id3895 . -6) (undo-tree-id3896 . -6) (undo-tree-id3897 . -6) (undo-tree-id3898 . -6) (undo-tree-id3899 . -6) (undo-tree-id3900 . -6) (undo-tree-id3901 . -6) (undo-tree-id3902 . -6) (undo-tree-id3903 . -6) (undo-tree-id3904 . -6) (undo-tree-id3905 . -6) (undo-tree-id3906 . -6) (undo-tree-id3907 . -6) (undo-tree-id3908 . -6) (undo-tree-id3909 . -6) (undo-tree-id3910 . -6) (undo-tree-id3911 . -6) (undo-tree-id3912 . -6) (undo-tree-id3913 . -6) (undo-tree-id3914 . -6) (undo-tree-id3915 . -6) (undo-tree-id3916 . -6) (undo-tree-id3917 . -6) (undo-tree-id3918 . -6) (undo-tree-id3919 . -6) (undo-tree-id3920 . -6) (undo-tree-id3921 . -6) (undo-tree-id3922 . -6) (undo-tree-id3923 . -6) (undo-tree-id3924 . -6) (undo-tree-id3925 . -6) (undo-tree-id3926 . -6) (undo-tree-id3927 . -6) (undo-tree-id3928 . -6) (undo-tree-id3929 . -6) (undo-tree-id3930 . -6) (undo-tree-id3931 . -6) (undo-tree-id3932 . -6) (undo-tree-id3933 . -6) (undo-tree-id3934 . -6) (undo-tree-id3935 . -6) (undo-tree-id3936 . -6) (undo-tree-id3937 . -6) (undo-tree-id3938 . -6) (undo-tree-id3939 . -6) (undo-tree-id3940 . -6) (undo-tree-id3941 . -6) (undo-tree-id3942 . -6) (undo-tree-id3943 . -6) (undo-tree-id3944 . -6) (undo-tree-id3945 . -6) (undo-tree-id3946 . -6) (undo-tree-id3947 . -6) (undo-tree-id3948 . -6) (undo-tree-id3949 . -6) (undo-tree-id3950 . -6) (undo-tree-id3951 . -6) (undo-tree-id3952 . -6) (undo-tree-id3953 . -6) (undo-tree-id3954 . -6) (undo-tree-id3955 . -6) (undo-tree-id3956 . -6) (undo-tree-id3957 . -6) (undo-tree-id3958 . -6) (undo-tree-id3959 . -6) (undo-tree-id3960 . -6) (undo-tree-id3961 . -6) (undo-tree-id3962 . -6) (undo-tree-id3963 . -6) (undo-tree-id3964 . -6) (undo-tree-id3965 . -6) (undo-tree-id3966 . -6) (undo-tree-id3967 . -6) (undo-tree-id3968 . -6) (undo-tree-id3969 . -6) (undo-tree-id3970 . -6) (undo-tree-id3971 . -6) (undo-tree-id3972 . -6) (undo-tree-id3973 . -6) (undo-tree-id3974 . -6) (undo-tree-id3975 . -6) (undo-tree-id3976 . -6) (undo-tree-id3977 . -6) (undo-tree-id3978 . -6) (undo-tree-id3979 . -6) (undo-tree-id3980 . -6) (undo-tree-id3981 . -6) (undo-tree-id3982 . -6) (undo-tree-id3983 . -6) (undo-tree-id3984 . -6) (undo-tree-id3985 . -6) (undo-tree-id3986 . -6) (undo-tree-id3987 . -6) (undo-tree-id3988 . -6) (nil rear-nonsticky t 958 . 959)) (25736 22096 536247 0) 0 nil])
([nil nil ((1151 . 1152)) nil (25736 22274 486842 0) 0 nil])
([nil nil ((959 . 960)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 959) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1)) (25736 22096 382833 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -1609) (undo-tree-id4354 . -1) 1610 (t 25736 22274 513835 483000)) nil (25736 22333 81583 0) 0 nil])
([nil nil ((nil fontified nil 970 . 971) (nil fontified nil 963 . 970) (nil fontified nil 962 . 963) (nil fontified nil 960 . 962) (960 . 971)) ((#("-n \"13.wav\"" 0 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil) 3 10 (face font-lock-comment-face fontified nil) 10 11 (face font-lock-comment-face fontified nil rear-nonsticky t)) . 960) (undo-tree-id3288 . -11) (undo-tree-id3289 . -11) (undo-tree-id3290 . -11) (undo-tree-id3291 . -11) (undo-tree-id3292 . -11) (undo-tree-id3293 . -11) (undo-tree-id3294 . -11) (undo-tree-id3295 . -11) (undo-tree-id3296 . -11) (undo-tree-id3297 . -11) (undo-tree-id3298 . -11) (undo-tree-id3299 . -11) (undo-tree-id3300 . -11) (undo-tree-id3301 . -11) (undo-tree-id3302 . -11) (undo-tree-id3303 . -11) (undo-tree-id3304 . -11) (undo-tree-id3305 . -11) (undo-tree-id3306 . -11) (undo-tree-id3307 . -11) (undo-tree-id3308 . -11) (undo-tree-id3309 . -11) (undo-tree-id3310 . -11) (undo-tree-id3311 . -11) (undo-tree-id3312 . -11) (undo-tree-id3313 . -11) (undo-tree-id3314 . -11) (undo-tree-id3315 . -11) (undo-tree-id3316 . -11) (undo-tree-id3317 . -11) (undo-tree-id3318 . -11) (undo-tree-id3319 . -11) (undo-tree-id3320 . -11) (undo-tree-id3321 . -11) (undo-tree-id3322 . -11) (undo-tree-id3323 . -11) (undo-tree-id3324 . -11) (undo-tree-id3325 . -11) (undo-tree-id3326 . -11) (undo-tree-id3327 . -11) (undo-tree-id3328 . -11) (undo-tree-id3329 . -11) (undo-tree-id3330 . -11) (undo-tree-id3331 . -11) (undo-tree-id3332 . -11) (undo-tree-id3333 . -11) (undo-tree-id3334 . -11) (undo-tree-id3335 . -11) (undo-tree-id3336 . -11) (undo-tree-id3337 . -11) (undo-tree-id3338 . -11) (undo-tree-id3339 . -11) (undo-tree-id3340 . -11) (undo-tree-id3341 . -11) (undo-tree-id3342 . -11) (undo-tree-id3343 . -11) (undo-tree-id3344 . -11) (undo-tree-id3345 . -11) (undo-tree-id3346 . -11) (undo-tree-id3347 . -11) (undo-tree-id3348 . -11) (undo-tree-id3349 . -11) (undo-tree-id3350 . -11) (undo-tree-id3351 . -11) (undo-tree-id3352 . -11) (undo-tree-id3353 . -11) (undo-tree-id3354 . -11) (undo-tree-id3355 . -11) (undo-tree-id3356 . -11) (undo-tree-id3357 . -11) (undo-tree-id3358 . -11) (undo-tree-id3359 . -11) (undo-tree-id3360 . -11) (undo-tree-id3361 . -11) (undo-tree-id3362 . -11) (undo-tree-id3363 . -11) (undo-tree-id3364 . -11) (undo-tree-id3365 . -11) (undo-tree-id3366 . -11) (undo-tree-id3367 . -11) (undo-tree-id3368 . -11) (undo-tree-id3369 . -11) (undo-tree-id3370 . -11) (undo-tree-id3371 . -11) (undo-tree-id3372 . -11) (undo-tree-id3373 . -11) (undo-tree-id3374 . -11) (undo-tree-id3375 . -11) (undo-tree-id3376 . -11) (undo-tree-id3377 . -11) (undo-tree-id3378 . -11) (undo-tree-id3379 . -11) (undo-tree-id3380 . -11) (undo-tree-id3381 . -11) (undo-tree-id3382 . -11) (undo-tree-id3383 . -11) (undo-tree-id3384 . -11) (undo-tree-id3385 . -11) (undo-tree-id3386 . -11) (nil fontified t 970 . 971)) (25736 22096 225884 0) 0 nil])
([nil nil ((1609 . 1610)) nil (25736 22333 81547 0) 0 nil])
([nil nil ((971 . 972)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 971) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1)) (25736 22096 65720 0) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . -1151) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) 1152 (t 25736 22333 98549 364000)) nil (25736 22337 815783 0) 0 nil])
([nil nil ((#("-t 0" 0 4 (face font-lock-comment-face fontified t)) . 1126) (undo-tree-id2099 . -4) (undo-tree-id2100 . -4) 1130) ((1126 . 1130)) (25736 22095 915981 0) 0 nil])
([nil nil ((1151 . 1152)) nil (25736 22337 815744 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 975 . 976) (nil fontified nil 972 . 976) (972 . 976)) ((#("-t 0" 0 3 (face font-lock-comment-face fontified nil) 3 4 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 972) (undo-tree-id2943 . -4) (undo-tree-id2944 . -4) (undo-tree-id2945 . -4) (undo-tree-id2946 . -4) (undo-tree-id2947 . -4) (undo-tree-id2948 . -4) (undo-tree-id2949 . -4) (undo-tree-id2950 . -4) (undo-tree-id2951 . -4) (undo-tree-id2952 . -4) (undo-tree-id2953 . -4) (undo-tree-id2954 . -4) (undo-tree-id2955 . -4) (undo-tree-id2956 . -4) (undo-tree-id2957 . -4) (undo-tree-id2958 . -4) (undo-tree-id2959 . -4) (undo-tree-id2960 . -4) (undo-tree-id2961 . -4) (undo-tree-id2962 . -4) (undo-tree-id2963 . -4) (undo-tree-id2964 . -4) (undo-tree-id2965 . -4) (undo-tree-id2966 . -4) (undo-tree-id2967 . -4) (undo-tree-id2968 . -4) (undo-tree-id2969 . -4) (undo-tree-id2970 . -4) (undo-tree-id2971 . -4) (undo-tree-id2972 . -4) (undo-tree-id2973 . -4) (undo-tree-id2974 . -4) (undo-tree-id2975 . -4) (undo-tree-id2976 . -4) (undo-tree-id2977 . -4) (undo-tree-id2978 . -4) (undo-tree-id2979 . -4) (undo-tree-id2980 . -4) (undo-tree-id2981 . -4) (undo-tree-id2982 . -4) (undo-tree-id2983 . -4) (undo-tree-id2984 . -4) (undo-tree-id2985 . -4) (undo-tree-id2986 . -4) (undo-tree-id2987 . -4) (undo-tree-id2988 . -4) (undo-tree-id2989 . -4) (undo-tree-id2990 . -4) (undo-tree-id2991 . -4) (undo-tree-id2992 . -4) (undo-tree-id2993 . -4) (undo-tree-id2994 . -4) (undo-tree-id2995 . -4) (undo-tree-id2996 . -4) (undo-tree-id2997 . -4) (undo-tree-id2998 . -4) (undo-tree-id2999 . -4) (undo-tree-id3000 . -4) (undo-tree-id3001 . -4) (undo-tree-id3002 . -4) (undo-tree-id3003 . -4) (undo-tree-id3004 . -4) (undo-tree-id3005 . -4) (undo-tree-id3006 . -4) (undo-tree-id3007 . -4) (undo-tree-id3008 . -4) (undo-tree-id3009 . -4) (undo-tree-id3010 . -4) (undo-tree-id3011 . -4) (undo-tree-id3012 . -4) (undo-tree-id3013 . -4) (undo-tree-id3014 . -4) (undo-tree-id3015 . -4) (undo-tree-id3016 . -4) (undo-tree-id3017 . -4) (undo-tree-id3018 . -4) (undo-tree-id3019 . -4) (undo-tree-id3020 . -4) (undo-tree-id3021 . -4) (undo-tree-id3022 . -4) (undo-tree-id3023 . -4) (undo-tree-id3024 . -4) (undo-tree-id3025 . -4) (undo-tree-id3026 . -4) (undo-tree-id3027 . -4) (undo-tree-id3028 . -4) (undo-tree-id3029 . -4) (undo-tree-id3030 . -4) (undo-tree-id3031 . -4) (undo-tree-id3032 . -4) (undo-tree-id3033 . -4) (undo-tree-id3034 . -4) (undo-tree-id3035 . -4) (undo-tree-id3036 . -4) (undo-tree-id3037 . -4) (undo-tree-id3038 . -4) (undo-tree-id3039 . -4) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) (undo-tree-id3042 . -4) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) (undo-tree-id3045 . -4) (undo-tree-id3046 . -4) (undo-tree-id3047 . -4) (undo-tree-id3048 . -4) (undo-tree-id3049 . -4) (undo-tree-id3050 . -4) (undo-tree-id3051 . -4) (undo-tree-id3052 . -4) (undo-tree-id3053 . -4) (undo-tree-id3054 . -4) (undo-tree-id3055 . -4) (undo-tree-id3056 . -4) (undo-tree-id3057 . -4) (undo-tree-id3058 . -4) (undo-tree-id3059 . -4) (undo-tree-id3060 . -4) (undo-tree-id3061 . -4) (undo-tree-id3062 . -4) (undo-tree-id3063 . -4) (undo-tree-id3064 . -4) (undo-tree-id3065 . -4) (undo-tree-id3066 . -4) (undo-tree-id3067 . -4) (undo-tree-id3068 . -4) (undo-tree-id3069 . -4) (undo-tree-id3070 . -4) (undo-tree-id3071 . -4) (undo-tree-id3072 . -4) (undo-tree-id3073 . -4) (undo-tree-id3074 . -4) (undo-tree-id3075 . -4) (undo-tree-id3076 . -4) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -4) (undo-tree-id3082 . -4) (undo-tree-id3083 . -4) (undo-tree-id3084 . -4) (undo-tree-id3085 . -4) (undo-tree-id3086 . -4) (undo-tree-id3087 . -4) (undo-tree-id3088 . -4) (undo-tree-id3089 . -4) (undo-tree-id3090 . -4) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -4) (undo-tree-id3135 . -4) (undo-tree-id3136 . -4) (undo-tree-id3137 . -4) (undo-tree-id3138 . -4) (undo-tree-id3139 . -4) (undo-tree-id3140 . -4) (undo-tree-id3141 . -4) (undo-tree-id3142 . -4) (undo-tree-id3143 . -4) (undo-tree-id3144 . -4) (undo-tree-id3145 . -4) (undo-tree-id3146 . -4) (undo-tree-id3147 . -4) (undo-tree-id3148 . -4) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) (undo-tree-id3161 . -4) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -4) (undo-tree-id3165 . -4) (undo-tree-id3166 . -4) (undo-tree-id3167 . -4) (undo-tree-id3168 . -4) (undo-tree-id3169 . -4) (undo-tree-id3170 . -4) (undo-tree-id3171 . -4) (undo-tree-id3172 . -4) (undo-tree-id3173 . -4) (undo-tree-id3174 . -4) (undo-tree-id3175 . -4) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) (undo-tree-id3178 . -4) (undo-tree-id3179 . -4) (undo-tree-id3180 . -4) (undo-tree-id3181 . -4) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (undo-tree-id3185 . -4) (undo-tree-id3186 . -4) (undo-tree-id3187 . -4) (undo-tree-id3188 . -4) (undo-tree-id3189 . -4) (undo-tree-id3190 . -4) (undo-tree-id3191 . -4) (undo-tree-id3192 . -4) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) (undo-tree-id3198 . -4) (undo-tree-id3199 . -4) (undo-tree-id3200 . -4) (undo-tree-id3201 . -4) (undo-tree-id3202 . -4) (undo-tree-id3203 . -4) (undo-tree-id3204 . -4) (undo-tree-id3205 . -4) (undo-tree-id3206 . -4) (undo-tree-id3207 . -4) (undo-tree-id3208 . -4) (undo-tree-id3209 . -4) (undo-tree-id3210 . -4) (undo-tree-id3211 . -4) (undo-tree-id3212 . -4) (undo-tree-id3213 . -4) (undo-tree-id3214 . -4) (undo-tree-id3215 . -4) (undo-tree-id3216 . -4) (undo-tree-id3217 . -4) (undo-tree-id3218 . -4) (undo-tree-id3219 . -4) (undo-tree-id3220 . -4) (undo-tree-id3221 . -4) (undo-tree-id3222 . -4) (undo-tree-id3223 . -4) (undo-tree-id3224 . -4) (undo-tree-id3225 . -4) (undo-tree-id3226 . -4) (undo-tree-id3227 . -4) (undo-tree-id3228 . -4) (undo-tree-id3229 . -4) (undo-tree-id3230 . -4) (undo-tree-id3231 . -4) (undo-tree-id3232 . -4) (undo-tree-id3233 . -4) (undo-tree-id3234 . -4) (undo-tree-id3235 . -4) (nil rear-nonsticky t 975 . 976)) (25736 22095 754828 0) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-comment-face fontified t)) . -1151) (undo-tree-id4357 . -1) 1152 (t 25736 22337 831238 907000)) nil (25736 22341 539852 0) 0 nil])
([nil nil ((976 . 977)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 976) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1)) (25736 22095 595593 0) 0 nil])
([nil nil ((1151 . 1152)) nil (25736 22341 539823 0) 0 nil])
([nil nil ((#("-s \"jay\"" 0 3 (face font-lock-comment-face fontified t) 3 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face fontified t rear-nonsticky t)) . 1093) (undo-tree-id2097 . -8) (undo-tree-id2098 . -8) 1101) ((1093 . 1101)) (25736 22095 492423 0) 0 nil])
([nil nil ((1162 . 1163)) nil (25736 22341 539778 0) 0 nil])
([nil nil ((nil fontified nil 984 . 985) (nil fontified nil 980 . 984) (nil fontified nil 977 . 980) (977 . 985)) ((#("-s \"jay\"" 0 3 (face font-lock-comment-face fontified nil) 3 7 (face font-lock-comment-face fontified nil) 7 8 (face font-lock-comment-face fontified nil rear-nonsticky t)) . 977) (undo-tree-id2673 . -8) (undo-tree-id2674 . -8) (undo-tree-id2675 . -8) (undo-tree-id2676 . -8) (undo-tree-id2677 . -8) (undo-tree-id2678 . -8) (undo-tree-id2679 . -8) (undo-tree-id2680 . -8) (undo-tree-id2681 . -8) (undo-tree-id2682 . -8) (undo-tree-id2683 . -8) (undo-tree-id2684 . -8) (undo-tree-id2685 . -8) (undo-tree-id2686 . -8) (undo-tree-id2687 . -8) (undo-tree-id2688 . -8) (undo-tree-id2689 . -8) (undo-tree-id2690 . -8) (undo-tree-id2691 . -8) (undo-tree-id2692 . -8) (undo-tree-id2693 . -8) (undo-tree-id2694 . -8) (undo-tree-id2695 . -8) (undo-tree-id2696 . -8) (undo-tree-id2697 . -8) (undo-tree-id2698 . -8) (undo-tree-id2699 . -8) (undo-tree-id2700 . -8) (undo-tree-id2701 . -8) (undo-tree-id2702 . -8) (undo-tree-id2703 . -8) (undo-tree-id2704 . -8) (undo-tree-id2705 . -8) (undo-tree-id2706 . -8) (undo-tree-id2707 . -8) (undo-tree-id2708 . -8) (undo-tree-id2709 . -8) (undo-tree-id2710 . -8) (undo-tree-id2711 . -8) (undo-tree-id2712 . -8) (undo-tree-id2713 . -8) (undo-tree-id2714 . -8) (undo-tree-id2715 . -8) (undo-tree-id2716 . -8) (undo-tree-id2717 . -8) (undo-tree-id2718 . -8) (undo-tree-id2719 . -8) (undo-tree-id2720 . -8) (undo-tree-id2721 . -8) (undo-tree-id2722 . -8) (undo-tree-id2723 . -8) (undo-tree-id2724 . -8) (undo-tree-id2725 . -8) (undo-tree-id2726 . -8) (undo-tree-id2727 . -8) (undo-tree-id2728 . -8) (undo-tree-id2729 . -8) (undo-tree-id2730 . -8) (undo-tree-id2731 . -8) (undo-tree-id2732 . -8) (undo-tree-id2733 . -8) (undo-tree-id2734 . -8) (undo-tree-id2735 . -8) (undo-tree-id2736 . -8) (undo-tree-id2737 . -8) (undo-tree-id2738 . -8) (undo-tree-id2739 . -8) (undo-tree-id2740 . -8) (undo-tree-id2741 . -8) (undo-tree-id2742 . -8) (undo-tree-id2743 . -8) (undo-tree-id2744 . -8) (undo-tree-id2745 . -8) (undo-tree-id2746 . -8) (undo-tree-id2747 . -8) (undo-tree-id2748 . -8) (undo-tree-id2749 . -8) (undo-tree-id2750 . -8) (undo-tree-id2751 . -8) (undo-tree-id2752 . -8) (undo-tree-id2753 . -8) (undo-tree-id2754 . -8) (undo-tree-id2755 . -8) (undo-tree-id2756 . -8) (undo-tree-id2757 . -8) (undo-tree-id2758 . -8) (undo-tree-id2759 . -8) (undo-tree-id2760 . -8) (undo-tree-id2761 . -8) (undo-tree-id2762 . -8) (undo-tree-id2763 . -8) (undo-tree-id2764 . -8) (undo-tree-id2765 . -8) (undo-tree-id2766 . -8) (undo-tree-id2767 . -8) (undo-tree-id2768 . -8) (undo-tree-id2769 . -8) (undo-tree-id2770 . -8) (undo-tree-id2771 . -8) (undo-tree-id2772 . -8) (undo-tree-id2773 . -8) (undo-tree-id2774 . -8) (undo-tree-id2775 . -8) (undo-tree-id2776 . -8) (undo-tree-id2777 . -8) (undo-tree-id2778 . -8) (undo-tree-id2779 . -8) (undo-tree-id2780 . -8) (undo-tree-id2781 . -8) (undo-tree-id2782 . -8) (undo-tree-id2783 . -8) (undo-tree-id2784 . -8) (nil fontified t 984 . 985)) (25736 22095 293048 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id4359 . -1) 1085 (t 25736 22341 557303 476000)) nil (25736 22512 694958 0) 0 nil])
([nil nil ((985 . 986)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 985) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1)) (25736 22095 139315 0) 0 nil])
([nil nil ((1084 . 1085)) nil (25736 22512 694940 0) 0 nil])
([nil nil ((#("-a" 0 2 (face font-lock-comment-face fontified t)) . 1133) (undo-tree-id2095 . -2) (undo-tree-id2096 . -2) 1135) ((1133 . 1135)) (25736 22094 985768 0) 0 nil])
([nil nil ((#("8" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id4358 . -1) 1085) nil (25736 22512 694928 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 987 . 988) (nil fontified nil 986 . 988) (986 . 988)) ((#("-a" 0 1 (face font-lock-comment-face fontified nil) 1 2 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 986) (undo-tree-id2437 . -2) (undo-tree-id2438 . -2) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (undo-tree-id2443 . -2) (undo-tree-id2444 . -2) (undo-tree-id2445 . -2) (undo-tree-id2446 . -2) (undo-tree-id2447 . -2) (undo-tree-id2448 . -2) (undo-tree-id2449 . -2) (undo-tree-id2450 . -2) (undo-tree-id2451 . -2) (undo-tree-id2452 . -2) (undo-tree-id2453 . -2) (undo-tree-id2454 . -2) (undo-tree-id2455 . -2) (undo-tree-id2456 . -2) (undo-tree-id2457 . -2) (undo-tree-id2458 . -2) (undo-tree-id2459 . -2) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (undo-tree-id2466 . -2) (undo-tree-id2467 . -2) (undo-tree-id2468 . -2) (undo-tree-id2469 . -2) (undo-tree-id2470 . -2) (undo-tree-id2471 . -2) (undo-tree-id2472 . -2) (undo-tree-id2473 . -2) (undo-tree-id2474 . -2) (undo-tree-id2475 . -2) (undo-tree-id2476 . -2) (undo-tree-id2477 . -2) (undo-tree-id2478 . -2) (undo-tree-id2479 . -2) (undo-tree-id2480 . -2) (undo-tree-id2481 . -2) (undo-tree-id2482 . -2) (undo-tree-id2483 . -2) (undo-tree-id2484 . -2) (undo-tree-id2485 . -2) (undo-tree-id2486 . -2) (undo-tree-id2487 . -2) (nil rear-nonsticky t 987 . 988)) (25736 22094 843491 0) 0 nil])
([nil nil ((1084 . 1085)) nil (25736 22512 694883 0) 0 nil])
([nil nil ((988 . 989)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 988) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1)) (25736 22094 700134 0) 0 nil])
([nil nil ((1175 . 1180) (t 25736 22512 713250 489000)) nil (25736 22530 742310 0) 0 nil])
([nil nil ((#("-cm \"logs/44k/feature_and_index.pkl\"  -cr 0.5" 0 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face rear-nonsticky t fontified t) 35 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 45 (face font-lock-comment-face fontified t)) . 1068) (undo-tree-id2092 . -45) (undo-tree-id2093 . -37) (undo-tree-id2094 . -45) 1113) ((1068 . 1113)) (25736 22094 571327 0) 0 nil])
([nil nil ((1627 . 1634) (t 25736 22530 759265 382000)) nil (25736 22566 190022 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1033 . 1034) (nil fontified nil 1027 . 1034) (nil fontified nil 1026 . 1027) (nil fontified nil 1024 . 1026) (nil fontified nil 1023 . 1024) (nil fontified nil 994 . 1023) (nil fontified nil 993 . 994) (nil fontified nil 989 . 993) (989 . 1034)) ((#("-cm \"logs/44k/feature_and_index.pkl\"  -cr 0.5" 0 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face fontified nil) 5 34 (face font-lock-comment-face fontified nil) 34 35 (face font-lock-comment-face fontified nil rear-nonsticky t) 35 37 (face font-lock-comment-face fontified nil) 37 38 (face font-lock-comment-face fontified nil) 38 44 (face font-lock-comment-face fontified nil) 44 45 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 989) (undo-tree-id2293 . -45) (undo-tree-id2294 . -45) (undo-tree-id2295 . -38) (undo-tree-id2296 . -38) (undo-tree-id2297 . -38) (undo-tree-id2298 . -38) (undo-tree-id2299 . -38) (undo-tree-id2300 . -38) (undo-tree-id2301 . -38) (undo-tree-id2302 . -38) (undo-tree-id2303 . -38) (undo-tree-id2304 . -38) (undo-tree-id2305 . -38) (undo-tree-id2306 . -38) (undo-tree-id2307 . -38) (undo-tree-id2308 . -38) (undo-tree-id2309 . -38) (undo-tree-id2310 . -38) (undo-tree-id2311 . -38) (undo-tree-id2312 . -38) (undo-tree-id2313 . -38) (undo-tree-id2314 . -38) (undo-tree-id2315 . -38) (undo-tree-id2316 . -38) (undo-tree-id2317 . -38) (undo-tree-id2318 . -38) (undo-tree-id2319 . -38) (undo-tree-id2320 . -38) (undo-tree-id2321 . -38) (undo-tree-id2322 . -38) (undo-tree-id2323 . -38) (undo-tree-id2324 . -38) (undo-tree-id2325 . -38) (undo-tree-id2326 . -38) (undo-tree-id2327 . -38) (undo-tree-id2328 . -38) (undo-tree-id2329 . -38) (undo-tree-id2330 . -38) (undo-tree-id2331 . -38) (undo-tree-id2332 . -38) (undo-tree-id2333 . -38) (undo-tree-id2334 . -38) (undo-tree-id2335 . -38) (undo-tree-id2336 . -38) (undo-tree-id2337 . -38) (undo-tree-id2338 . -38) (undo-tree-id2339 . -38) (undo-tree-id2340 . -38) (undo-tree-id2341 . -38) (undo-tree-id2342 . -38) (undo-tree-id2343 . -38) (undo-tree-id2344 . -38) (undo-tree-id2345 . -38) (undo-tree-id2346 . -38) (undo-tree-id2347 . -38) (undo-tree-id2348 . -38) (undo-tree-id2349 . -38) (undo-tree-id2350 . -38) (undo-tree-id2351 . -38) (undo-tree-id2352 . -38) (undo-tree-id2353 . -38) (undo-tree-id2354 . -38) (undo-tree-id2355 . -38) (undo-tree-id2356 . -38) (undo-tree-id2357 . -38) (undo-tree-id2358 . -38) (undo-tree-id2359 . -38) (undo-tree-id2360 . -38) (undo-tree-id2361 . -38) (undo-tree-id2362 . -38) (undo-tree-id2363 . -38) (undo-tree-id2364 . -38) (undo-tree-id2365 . -38) (undo-tree-id2366 . -38) (undo-tree-id2367 . -38) (undo-tree-id2368 . -38) (undo-tree-id2369 . -38) (undo-tree-id2370 . -38) (undo-tree-id2371 . -38) (undo-tree-id2372 . -38) (undo-tree-id2373 . -38) (undo-tree-id2374 . -38) (undo-tree-id2375 . -38) (undo-tree-id2376 . -38) (undo-tree-id2377 . -38) (undo-tree-id2378 . -38) (undo-tree-id2379 . -38) (undo-tree-id2380 . -38) (undo-tree-id2381 . -38) (undo-tree-id2382 . -38) (undo-tree-id2383 . -38) (undo-tree-id2384 . -38) (undo-tree-id2385 . -38) (undo-tree-id2386 . -45) (undo-tree-id2387 . -45) (undo-tree-id2388 . -45) (undo-tree-id2389 . -45) (undo-tree-id2390 . -45) (undo-tree-id2391 . -45) (undo-tree-id2392 . -45) (undo-tree-id2393 . -45) (undo-tree-id2394 . -45) (undo-tree-id2395 . -45) (undo-tree-id2396 . -45) (undo-tree-id2397 . -45) (undo-tree-id2398 . -45) (undo-tree-id2399 . -45) (undo-tree-id2400 . -45) (undo-tree-id2401 . -45) (undo-tree-id2402 . -45) (undo-tree-id2403 . -45) (undo-tree-id2404 . -45) (undo-tree-id2405 . -45) (undo-tree-id2406 . -45) (undo-tree-id2407 . -45) (undo-tree-id2408 . -45) (undo-tree-id2409 . -45) (undo-tree-id2410 . -45) (undo-tree-id2411 . -45) (undo-tree-id2412 . -45) (undo-tree-id2413 . -45) (undo-tree-id2414 . -45) (undo-tree-id2415 . -45) (undo-tree-id2416 . -45) (undo-tree-id2417 . -45) (undo-tree-id2418 . -45) (undo-tree-id2419 . -45) (undo-tree-id2420 . -45) (undo-tree-id2421 . -45) (undo-tree-id2422 . -45) (undo-tree-id2423 . -45) (undo-tree-id2424 . -45) (undo-tree-id2425 . -45) (undo-tree-id2426 . -45) (undo-tree-id2427 . -45) (undo-tree-id2428 . -45) (undo-tree-id2429 . -45) (undo-tree-id2430 . -45) (undo-tree-id2431 . -45) (undo-tree-id2432 . -45) (nil rear-nonsticky t 1033 . 1034)) (25736 22094 426755 0) 0 nil])
([nil nil ((1180 . 1182) (t 25736 22566 205997 504000)) nil (25736 22595 19522 0) 0 nil])
([nil nil ((1034 . 1035)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1034) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1)) (25736 22094 294194 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1180) (undo-tree-id4584 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1181) (undo-tree-id4585 . -1) 1182) nil (25736 22595 19512 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1026) (undo-tree-id2091 . -1) 1027) ((1026 . 1027)) (25736 22094 156196 0) 0 nil])
([nil nil ((1180 . 1187)) nil (25736 22595 19497 0) 0 nil])
([nil nil ((#("-lg 1" 0 5 (face font-lock-comment-face fontified t)) . 1145) (undo-tree-id2089 . -5) (undo-tree-id2090 . -5) 1150) ((1145 . 1150)) (25736 22094 22700 0) 0 nil])
([nil nil ((#("-d gpu" 0 6 (face font-lock-comment-face fontified t)) . 1180) (undo-tree-id4582 . -6) (undo-tree-id4583 . -6)) nil (25736 22595 19487 0) 0 nil])
([nil nil ((1122 . 1123)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1122) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1)) (25736 22093 899297 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1179) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) 1180) nil (25736 22595 19353 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1127 . 1128) (nil fontified nil 1123 . 1128) (1123 . 1128)) ((#("-lg 1" 0 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 1123) (nil rear-nonsticky t 1127 . 1128)) (25736 22093 749840 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1174) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (#("-" 0 1 (face font-lock-comment-face fontified t)) . -1175) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -1176) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1177) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -1178) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) 1179 (t 25736 22595 35298 83000)) nil (25736 22744 381298 0) 0 nil])
([nil nil ((#("-lg 1 -f0p crepe" 0 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face rear-nonsticky t fontified t) 5 16 (face font-lock-comment-face fontified t)) . 1123) (undo-tree-id2087 . -16) (undo-tree-id2088 . -16) 1139) ((1123 . 1139)) (25736 22093 578720 0) 0 nil])
([nil nil ((#("-m \"logs/44k/G_200000.pth\" -c \"configs/config.json\" -shd -dm \"logs/44k/diffusion/model_250000.pt\" -dc \"configs/diffusion.yaml\" -fr -cm \"logs/44k/feature_and_index.pkl\" -s \"jay\" -cr 0.5 -lea 0.5 -f0p crepe -cl 25 -t -1 -ns 0.4 -lg 1 -ks 1000 -se -sd -40 -ft 0.01 -d gpu" 0 3 (face font-lock-comment-face fontified t) 3 26 (face font-lock-comment-face fontified t) 26 30 (face font-lock-comment-face fontified t) 30 51 (face font-lock-comment-face fontified t) 51 52 (face font-lock-comment-face fontified t) 52 61 (face font-lock-comment-face fontified t) 61 81 (face font-lock-comment-face fontified t) 81 95 (face font-lock-comment-face fontified t) 95 96 (face font-lock-comment-face fontified t rear-nonsticky t) 96 102 (face font-lock-comment-face fontified t) 102 125 (face font-lock-comment-face fontified t) 125 131 (face font-lock-comment-face fontified t) 131 135 (face font-lock-comment-face fontified t) 135 136 (face font-lock-comment-face fontified t) 136 165 (face font-lock-comment-face fontified t) 165 166 (face font-lock-comment-face fontified t rear-nonsticky t) 166 168 (face font-lock-comment-face fontified t) 168 171 (face font-lock-comment-face fontified t) 171 175 (face font-lock-comment-face fontified t) 175 176 (face font-lock-comment-face fontified t rear-nonsticky t) 176 177 (face font-lock-comment-face fontified t) 177 184 (face font-lock-comment-face fontified t) 184 185 (face font-lock-comment-face fontified t rear-nonsticky t) 185 268 (face font-lock-comment-face fontified t)) . -1360) (undo-tree-id4672 . -268) (undo-tree-id4673 . -268) 1628 (t 25736 22610 119003 665000)) nil (25736 22973 94192 0) 0 nil] [nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -916) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -917) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) 918 (t 25736 22610 119003 665000)) ((916 . 918)) (25736 22743 955465 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1049 . 1050) (nil fontified nil 1039 . 1050) (nil fontified nil 1038 . 1039) (nil fontified nil 1034 . 1038) (1034 . 1050)) ((#("-lg 1 -f0p crepe" 0 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face fontified nil rear-nonsticky t) 5 15 (face font-lock-comment-face fontified nil) 15 16 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 1034) (undo-tree-id2106 . -16) (undo-tree-id2107 . -16) (undo-tree-id2108 . -16) (undo-tree-id2109 . -16) (undo-tree-id2110 . -16) (undo-tree-id2111 . -16) (undo-tree-id2112 . -16) (undo-tree-id2113 . -16) (undo-tree-id2114 . -16) (undo-tree-id2115 . -16) (undo-tree-id2116 . -16) (undo-tree-id2117 . -16) (undo-tree-id2118 . -16) (undo-tree-id2119 . -16) (undo-tree-id2120 . -16) (undo-tree-id2121 . -16) (undo-tree-id2122 . -16) (undo-tree-id2123 . -16) (undo-tree-id2124 . -16) (undo-tree-id2125 . -16) (undo-tree-id2126 . -16) (undo-tree-id2127 . -16) (undo-tree-id2128 . -16) (undo-tree-id2129 . -16) (undo-tree-id2130 . -16) (undo-tree-id2131 . -16) (undo-tree-id2132 . -16) (undo-tree-id2133 . -16) (undo-tree-id2134 . -16) (undo-tree-id2135 . -16) (undo-tree-id2136 . -16) (undo-tree-id2137 . -16) (undo-tree-id2138 . -16) (undo-tree-id2139 . -16) (undo-tree-id2140 . -16) (undo-tree-id2141 . -16) (undo-tree-id2142 . -16) (undo-tree-id2143 . -16) (undo-tree-id2144 . -16) (undo-tree-id2145 . -16) (undo-tree-id2146 . -16) (undo-tree-id2147 . -16) (undo-tree-id2148 . -16) (undo-tree-id2149 . -16) (undo-tree-id2150 . -16) (undo-tree-id2151 . -16) (undo-tree-id2152 . -16) (undo-tree-id2153 . -16) (undo-tree-id2154 . -16) (nil rear-nonsticky t 1049 . 1050)) (25736 22093 489362 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1632 . 1633) (nil fontified nil 1632 . 1633) (nil fontified nil 1629 . 1632) (nil fontified nil 1628 . 1629) (nil fontified nil 1624 . 1628) (nil fontified nil 1623 . 1624) (nil fontified nil 1622 . 1623) (nil fontified nil 1620 . 1622) (nil fontified nil 1595 . 1620) (nil fontified nil 1590 . 1595) (nil fontified nil 1581 . 1590) (nil fontified nil 1579 . 1581) (nil fontified nil 1578 . 1579) (nil fontified nil 1574 . 1578) (nil fontified nil 1573 . 1574) (nil fontified nil 1567 . 1573) (nil fontified nil 1566 . 1567) (nil fontified nil 1565 . 1566) (nil fontified nil 1560 . 1565) (nil fontified nil 1559 . 1560) (nil fontified nil 1553 . 1559) (nil fontified nil 1545 . 1553) (nil fontified nil 1544 . 1545) (nil fontified nil 1537 . 1544) (nil fontified nil 1536 . 1537) (nil fontified nil 1535 . 1536) (nil fontified nil 1531 . 1535) (nil fontified nil 1528 . 1531) (nil fontified nil 1526 . 1528) (nil fontified nil 1525 . 1526) (nil fontified nil 1496 . 1525) (nil fontified nil 1495 . 1496) (nil fontified nil 1491 . 1495) (nil fontified nil 1485 . 1491) (nil fontified nil 1462 . 1485) (nil fontified nil 1456 . 1462) (nil fontified nil 1455 . 1456) (nil fontified nil 1441 . 1455) (nil fontified nil 1421 . 1441) (nil fontified nil 1412 . 1421) (nil fontified nil 1411 . 1412) (nil fontified nil 1390 . 1411) (nil fontified nil 1386 . 1390) (nil fontified nil 1377 . 1386) (nil fontified nil 1376 . 1377) (nil fontified nil 1375 . 1376) (nil fontified nil 1363 . 1375) (nil fontified nil 1360 . 1363) (1360 . 1633)) nil (25736 22973 94355 0) 0 nil])
([nil nil ((916 . 918)) ((#("16" 0 2 (face font-lock-comment-face fontified t)) . 916)) (25736 22743 955261 0) 0 nil])
([nil nil ((1050 . 1051)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1050) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1)) (25736 22093 488897 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1543) (undo-tree-id4674 . -1) 1544 (t 25736 22974 496934 149000)) nil (25736 26429 144815 0) 0 nil] [nil nil ((#("-shd -dm \"logs/44k/diffusion/model_250000.pt\" -dc \"configs/diffusion.yaml\"" 0 9 (face font-lock-comment-face fontified t) 9 29 (face font-lock-comment-face fontified t) 29 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t rear-nonsticky t) 44 50 (face font-lock-comment-face fontified t) 50 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t)) . -953) (undo-tree-id4670 . -74) (undo-tree-id4671 . -74) 1027) ((953 . 1027)) (25736 22973 94077 0) 0 nil])
nil
nil
([nil nil ((1543 . 1544)) nil (25736 26429 144767 0) 0 nil])
nil
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -1447) (undo-tree-id4683 . -1) 1448 (t 25736 26429 165463 757000)) nil (25736 26566 18977 0) 0 nil])
([nil nil ((1447 . 1448)) nil (25736 26566 18965 0) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . -988) (undo-tree-id4682 . -1) 989) nil (25736 26566 18957 0) 0 nil])
([nil nil ((988 . 989)) nil (25736 26566 18946 0) 0 nil])
([nil nil ((1187 . 1188)) nil (25736 26566 18940 0) 0 nil])
([nil nil ((1187 . 1189)) nil (25736 26566 18934 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1339 . 1340) (nil fontified nil 1339 . 1340) (nil fontified nil 1316 . 1339) (nil fontified nil 1310 . 1316) (nil fontified nil 1309 . 1310) (nil fontified nil 1295 . 1309) (nil fontified nil 1275 . 1295) (nil fontified nil 1266 . 1275) (nil fontified nil 1265 . 1266) (nil fontified nil 1244 . 1265) (nil fontified nil 1240 . 1244) (nil fontified nil 1231 . 1240) (nil fontified nil 1230 . 1231) (nil fontified nil 1229 . 1230) (nil fontified nil 1217 . 1229) (nil fontified nil 1214 . 1217) (nil fontified nil 1213 . 1214) (nil fontified nil 1189 . 1213) (1189 . 1340)) nil (25736 26566 437019 0) 0 nil])
([nil nil ((1340 . 1341)) nil (25736 26607 198851 0) 0 nil] [nil nil ((#("
# python inference_main.py -m \"logs/44k/G_200000.pth\" -c \"configs/config.json\" -shd -dm \"logs/44k/diffusion/model_150000.pt\" -dc \"configs/diffusion.yaml\"" 0 1 (face font-lock-comment-face fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-face fontified t) 31 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 45 (face font-lock-comment-face fontified t) 45 54 (face font-lock-comment-face fontified t) 54 58 (face font-lock-comment-face fontified t) 58 79 (face font-lock-comment-face fontified t) 79 80 (face font-lock-comment-face fontified t) 80 89 (face font-lock-comment-face fontified t) 89 109 (face font-lock-comment-face fontified t) 109 123 (face font-lock-comment-face fontified t) 123 124 (face font-lock-comment-face fontified t rear-nonsticky t) 124 130 (face font-lock-comment-face fontified t) 130 153 (face font-lock-comment-face fontified t) 153 154 (face font-lock-comment-face rear-nonsticky t fontified t)) . -1186) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -154) (undo-tree-id4679 . -3) (undo-tree-id4680 . -154) (undo-tree-id4681 . -154)) ((1186 . 1340)) (25736 26566 19104 0) 0 nil])
([nil nil ((nil fontified nil 1361 . 1362) (nil fontified nil 1354 . 1361) (nil fontified nil 1353 . 1354) (nil fontified nil 1351 . 1353) (nil fontified nil 1350 . 1351) (nil fontified nil 1349 . 1350) (nil fontified nil 1346 . 1349) (nil fontified nil 1345 . 1346) (nil fontified nil 1341 . 1345) (1341 . 1362)) nil (25736 26607 198838 0) 0 nil])
([nil nil ((1186 . 1187)) ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1186) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1)) (25736 26566 18816 0) 0 nil])
([nil nil ((1355 . 1358) (1354 . 1356) (#("\"" 0 1 (face font-lock-comment-face fontified nil)) . -1354) (1351 . 1355)) nil (25736 26607 198813 0) 0 nil])
nil
([nil nil ((1359 . 1360)) nil (25736 26607 198792 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1380 . 1381) (nil fontified nil 1380 . 1381) (nil fontified nil 1379 . 1380) (nil fontified nil 1350 . 1379) (nil fontified nil 1349 . 1350) (nil fontified nil 1345 . 1349) (nil fontified nil 1341 . 1345) (1341 . 1381) (t 25736 26607 221205 526000)) nil (25736 26827 299605 0) 0 nil])
([nil nil ((1381 . 1382)) nil (25736 26827 299561 0) 0 nil])
([nil nil ((#("# python inference_main.py -m \"logs/44k/G_200000.pth\" -c \"configs/config.json\" -shd -dm \"logs/44k/diffusion/model_150000.pt\" -dc \"configs/diffusion.yaml\" -fr -cm \"logs/44k/feature_and_index.pkl\" -wf \"wav\" -s \"jay\" -n \"13.wav\"
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face fontified t) 27 30 (face font-lock-comment-face fontified t) 30 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 53 (face font-lock-comment-face fontified t) 53 57 (face font-lock-comment-face fontified t) 57 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 88 (face font-lock-comment-face fontified t) 88 108 (face font-lock-comment-face fontified t) 108 122 (face font-lock-comment-face fontified t) 122 123 (face font-lock-comment-face fontified t rear-nonsticky t) 123 129 (face font-lock-comment-face fontified t) 129 152 (face font-lock-comment-face fontified t) 152 153 (face font-lock-comment-face rear-nonsticky t fontified t) 153 154 (face font-lock-comment-face fontified t) 154 158 (face font-lock-comment-face fontified t) 158 162 (face font-lock-comment-face fontified t) 162 163 (face font-lock-comment-face fontified t) 163 192 (face font-lock-comment-face fontified t) 192 193 (face font-lock-comment-face fontified t rear-nonsticky t) 193 194 (face font-lock-comment-face rear-nonsticky t fontified t) 194 195 (face font-lock-comment-face fontified t) 195 199 (face font-lock-comment-face fontified t) 199 200 (face font-lock-comment-face fontified t) 200 203 (face font-lock-comment-face fontified t) 203 204 (face font-lock-comment-face fontified t) 204 208 (face font-lock-comment-face fontified t) 208 212 (face font-lock-comment-face fontified t) 212 214 (face font-lock-comment-face fontified t) 214 216 (face font-lock-comment-face fontified t) 216 217 (face font-lock-comment-face fontified t) 217 224 (face font-lock-comment-face fontified t) 224 225 (face font-lock-comment-face fontified t rear-nonsticky t) 225 226 (face font-lock-comment-face fontified t)) . 1187) (undo-tree-id4689 . -226) (undo-tree-id4690 . -2) (undo-tree-id4691 . -154) (undo-tree-id4692 . -225) (undo-tree-id4693 . -226) (undo-tree-id4694 . -154) (undo-tree-id4695 . -225) (undo-tree-id4696 . -226)) nil (25736 26827 299542 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1179) (undo-tree-id4687 . -1) (#("3" 0 1 (face font-lock-comment-face fontified t)) . -1180) (undo-tree-id4688 . -1) 1181) nil (25736 26827 299467 0) 0 nil])
([nil nil ((1179 . 1184)) nil (25736 26827 299428 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . -1183) (undo-tree-id4686 . -1) 1184) nil (25736 26827 299408 0) 0 nil])
([nil nil ((1183 . 1185)) nil (25736 26827 299346 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . -1084) (undo-tree-id4698 . -1) 1085 (t 25736 26827 325018 807000)) nil (25736 26920 872504 0) 0 nil])
([nil nil ((1084 . 1085)) nil (25736 26920 872485 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1162) (undo-tree-id4697 . -1) 1163) nil (25736 26920 872466 0) 0 nil])
([nil nil ((1184 . 1186) (t 25736 26920 897090 911000)) nil (25737 13945 969972 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1185) (undo-tree-id4703 . -1) 1186) nil (25737 13945 969956 0) 0 nil])
([nil nil ((1185 . 1186)) nil (25737 13945 969934 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -988) (undo-tree-id4701 . -1) (#("5" 0 1 (face font-lock-comment-face fontified t)) . -989) (undo-tree-id4702 . -1) 990) nil (25737 13945 969918 0) 0 nil])
([nil nil ((988 . 990)) nil (25737 13945 969880 0) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-comment-face fontified t)) . -1452) (undo-tree-id4700 . -1) 1453) nil (25737 13945 969864 0) 0 nil])
([nil nil ((1452 . 1453)) nil (25737 13945 969823 0) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . -1452) (undo-tree-id4699 . -1) 1453) nil (25737 13945 969802 0) 0 nil])
([nil nil ((1452 . 1453)) nil (25737 13945 969741 0) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-comment-face fontified t)) . -1625) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) 1626) nil (25737 13979 163084 0) 0 nil])
([nil nil ((#("-p 7860:7860 -p 7861:7861" 0 25 (fontified t face font-lock-comment-face)) . -215) (undo-tree-id34 . -25) (undo-tree-id35 . -25) 240 (t 25737 13981 486519 58000)) nil (25742 59727 924614 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -214) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 215) nil (25742 59727 924596 0) 0 nil])
([nil nil ((#("ti'mian" 0 7 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id9 . -7) (1152 . 1159) (#("ti'mia" 0 6 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id10 . -6) (1152 . 1158) (#("ti'mi" 0 5 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id11 . -5) (1152 . 1157) (#("ti'm" 0 4 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id12 . -4) (1152 . 1156) (#("ti" 0 2 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id13 . -2) (1152 . 1154) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id14 . -1) (1152 . 1153) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1153) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1154) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1155) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("_" 0 1 (fontified t face font-lock-comment-face)) . -1156) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -1157) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("_" 0 1 (fontified t face font-lock-comment-face)) . -1158) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("1" 0 1 (fontified t face font-lock-comment-face)) . -1159) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 1160) nil (25742 59727 924554 0) 0 nil])
([nil nil ((1152 . 1154)) nil (25742 59727 924455 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -1155) (undo-tree-id6 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1156) (undo-tree-id7 . -1) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -1157) (undo-tree-id8 . -1) 1158) nil (25742 59849 419444 0) 0 nil])
([nil nil ((1155 . 1158)) ((#("mp3" 0 3 (fontified t face font-lock-comment-face)) . 1155) (undo-tree-id49 . -1)) (25742 60365 741015 0) 0 nil])
([nil nil ((1154 . 1161)) ((#("_vocals" 0 7 (fontified t face font-lock-comment-face)) . 1154)) (25742 60366 697845 0) 0 nil] [nil nil ((#("-ks 1000 -sd -30 -ft 0.001" 0 26 (fontified t face font-lock-comment-face)) . -1111) (undo-tree-id46 . -26) (undo-tree-id48 . -26) 1137 (t 25742 59739 946161 42000)) ((1111 . 1137)) (25742 59848 468444 0) 0 nil] [nil nil ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1094) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1095) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1096) (undo-tree-id5 . -1) 1097) ((1094 . 1097) (t 25742 59728 146507 286000)) (25742 59727 924401 0) 0 nil])
([nil nil ((1167 . 1168)) nil (25742 60385 482333 0) 0 nil] [nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1093) (undo-tree-id50 . -1) (undo-tree-id52 . -1) (#("-" 0 1 (fontified t face font-lock-comment-face)) . -1094) (undo-tree-id53 . -1) (undo-tree-id55 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1095) (undo-tree-id56 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1096) (undo-tree-id59 . -1) 1097) ((1093 . 1097)) (25742 60365 453817 0) 0 nil])
([nil nil ((#("-a -ns 0.4 -lg 1 " 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 17 (fontified t face font-lock-comment-face)) . 1094) (undo-tree-id41 . -3) (undo-tree-id42 . -17) (undo-tree-id43 . -2) (undo-tree-id45 . -17)) ((1094 . 1111)) (25742 59848 304159 0) 0 nil])
nil
([nil nil ((1167 . 1168)) nil (25742 60385 482328 0) 0 nil])
([nil nil ((1093 . 1094)) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 1093) (undo-tree-id121 . -1)) (25742 60365 246380 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1093) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 1094) ((1093 . 1094) (t 25742 59839 240938 981000)) (25742 59839 214745 0) 0 nil])
([nil nil ((1168 . 1179)) nil (25742 60385 482322 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -1092) (undo-tree-id67 . -1) (undo-tree-id69 . -1) 1093 (t 25742 60050 921759 565000)) ((1092 . 1093)) (25742 60365 92858 0) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -1177) (undo-tree-id125 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1178) (undo-tree-id126 . -1) 1179) nil (25742 60385 482313 0) 0 nil])
([nil nil ((1092 . 1093)) ((#("2" 0 1 (fontified t face font-lock-comment-face)) . 1092) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1)) (25742 60365 9804 0) 0 nil])
([nil nil ((1177 . 1181)) nil (25742 60385 482296 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face font-lock-comment-face)) . -1092) (undo-tree-id66 . -1) 1093) ((1092 . 1093)) (25742 60364 811928 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1180) (undo-tree-id124 . -1) 1181) nil (25742 60385 482286 0) 0 nil])
([nil nil ((1092 . 1094)) ((#("-4" 0 2 (fontified t face font-lock-comment-face)) . 1092)) (25742 60364 659476 0) 0 nil])
([nil nil ((1180 . 1181)) nil (25742 60385 482273 0) 0 nil])
([nil nil ((#("-cl 25" 0 6 (fontified t face font-lock-comment-face)) . -1082) (undo-tree-id64 . -6) (undo-tree-id65 . -6) 1088) ((1082 . 1088)) (25742 60364 508262 0) 0 nil])
([nil nil ((1181 . 1199)) nil (25742 60385 482266 0) 0 nil])
([nil nil ((#("-ns 0.4 -lg 1 -ks 1000 -sd -30 -ft 0.001" 0 14 (fontified t face font-lock-comment-face) 14 40 (fontified t face font-lock-comment-face)) . -1089) (undo-tree-id61 . -40) (undo-tree-id62 . -40) 1129) ((1089 . 1129)) (25742 60364 356207 0) 0 nil])
([nil nil ((1199 . 1200)) nil (25742 60385 482260 0) 0 nil])
([nil nil ((#("-shd -dm \"logs/44k/diffusion/model_450000.pt\" -dc \"configs/diffusion.yaml\" " 0 48 (fontified t face font-lock-comment-face) 48 75 (fontified t face font-lock-comment-face)) . -927) (undo-tree-id70 . -75) (undo-tree-id71 . -75) (undo-tree-id72 . -75) 1002 (t 25742 60181 296297 398000)) ((927 . 1002) (t 25742 60265 451648 175000)) (25742 60265 429829 0) 0 nil])
([nil nil ((1200 . 1202)) nil (25742 60385 482253 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1518 . 1519) (nil fontified nil 1517 . 1519) (nil fontified nil 1514 . 1517) (nil fontified nil 1513 . 1514) (nil fontified nil 1506 . 1513) (nil fontified nil 1489 . 1506) (nil fontified nil 1463 . 1489) (nil fontified nil 1449 . 1463) (nil fontified nil 1448 . 1449) (nil fontified nil 1447 . 1448) (nil fontified nil 1446 . 1447) (nil fontified nil 1445 . 1446) (nil fontified nil 1444 . 1445) (nil fontified nil 1440 . 1444) (nil fontified nil 1434 . 1440) (nil fontified nil 1354 . 1434) (nil fontified nil 1327 . 1354) (nil fontified nil 1279 . 1327) (nil fontified nil 1202 . 1279) (1202 . 1519)) nil (25742 60385 482232 0) 0 nil])
([nil nil ((#("-shd -dm \"logs/44k/diffusion/model_450000.pt\" -dc \"configs/diffusion.yaml\" " 0 48 (fontified t face font-lock-comment-face) 48 75 (fontified t face font-lock-comment-face)) . -1279) (undo-tree-id122 . -75) (undo-tree-id123 . -75) 1354) nil (25742 60585 692187 0) 0 nil])
([nil nil ((#(" -a" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . 1370) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -3) (undo-tree-id459 . -3) (undo-tree-id460 . -3) (undo-tree-id461 . -3) (undo-tree-id462 . -3) (undo-tree-id463 . -3) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3)) ((1370 . 1373)) (25742 60586 823767 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -1369) (undo-tree-id662 . -1) (undo-tree-id663 . -1) 1370) nil (25742 60594 160563 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face)) . -1440) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id138 . -1) 1441 (t 25742 60396 444177 355000)) ((1440 . 1441)) (25742 60584 173384 0) 0 nil])
([nil nil ((1369 . 1371)) nil (25742 60594 160547 0) 0 nil])
([nil nil ((#("-ns 0.4 -lg 1 -ks 1000 -sd -30 -ft 0.001" 0 14 (fontified t face font-lock-comment-face) 14 40 (fontified t face font-lock-comment-face)) . 1371) (undo-tree-id266 . -40) (undo-tree-id267 . -40) (t 25742 60419 432008 216000)) ((1371 . 1411)) (25742 60583 705476 0) 0 nil])
([nil nil ((#("-ks 1000" 0 8 (fontified t face font-lock-comment-face)) . -1386) (undo-tree-id660 . -8) (undo-tree-id661 . -8) 1394) nil (25742 60594 160534 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1370) (undo-tree-id264 . -1) (undo-tree-id265 . -1) 1371) ((1370 . 1371)) (25742 60583 294855 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1385) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) 1386) nil (25742 60594 160505 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1358) (undo-tree-id139 . -1) (undo-tree-id141 . -1) (undo-tree-id143 . -1) (undo-tree-id145 . -1) (undo-tree-id147 . -1) (undo-tree-id149 . -1) (undo-tree-id151 . -1) (undo-tree-id153 . -1) (undo-tree-id155 . -1) (undo-tree-id157 . -1) (undo-tree-id159 . -1) (undo-tree-id161 . -1) (undo-tree-id163 . -1) (undo-tree-id165 . -1) (undo-tree-id167 . -1) (undo-tree-id169 . -1) (undo-tree-id171 . -1) (undo-tree-id173 . -1) (undo-tree-id175 . -1) (undo-tree-id177 . -1) (undo-tree-id179 . -1) (undo-tree-id181 . -1) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id187 . -1) (undo-tree-id189 . -1) (undo-tree-id191 . -1) (undo-tree-id193 . -1) (undo-tree-id195 . -1) (undo-tree-id197 . -1) (undo-tree-id199 . -1) (undo-tree-id201 . -1) (undo-tree-id203 . -1) (undo-tree-id205 . -1) (undo-tree-id207 . -1) (undo-tree-id209 . -1) (undo-tree-id211 . -1) (undo-tree-id213 . -1) (undo-tree-id215 . -1) (undo-tree-id217 . -1) (undo-tree-id219 . -1) (undo-tree-id221 . -1) (undo-tree-id223 . -1) (undo-tree-id225 . -1) (undo-tree-id227 . -1) (undo-tree-id229 . -1) (undo-tree-id231 . -1) (undo-tree-id233 . -1) (undo-tree-id235 . -1) (undo-tree-id237 . -1) (undo-tree-id239 . -1) (undo-tree-id241 . -1) (undo-tree-id243 . -1) (undo-tree-id245 . -1) (undo-tree-id247 . -1) (undo-tree-id249 . -1) (undo-tree-id251 . -1) (undo-tree-id253 . -1) (undo-tree-id255 . -1) (#("-" 0 1 (fontified t face font-lock-comment-face)) . -1359) (undo-tree-id257 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -1360) (undo-tree-id259 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -1361) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1362) (undo-tree-id261 . -1) (#("2" 0 1 (fontified t face font-lock-comment-face)) . -1363) (undo-tree-id262 . -1) (#("5" 0 1 (fontified t face font-lock-comment-face)) . -1364) (undo-tree-id263 . -1) 1365) ((1358 . 1365) (t 25742 60514 423583 43000)) (25742 60514 399162 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face font-lock-comment-face)) . -1370) (undo-tree-id667 . -1) 1371 (t 25742 60594 186490 63000)) nil (25742 60667 773289 0) 0 nil])
nil
([nil nil ((1370 . 1371)) nil (25742 60750 531235 0) 0 nil])
([nil nil ((1372 . 1373) (t 25742 60752 422019 900000)) nil (25742 61051 759715 0) 0 nil] [nil nil ((#("-fr -cm \"logs/44k/feature_and_index.pkl\" " 0 41 (fontified t face font-lock-comment-face)) . 1279) (undo-tree-id664 . -41) (undo-tree-id665 . -41)) ((1279 . 1320) (t 25742 60667 802967 65000)) (25742 60667 773249 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -1372) (undo-tree-id668 . -1) 1373) nil (25742 61051 759700 0) 0 nil])
nil
([nil nil ((1372 . 1375)) nil (25742 61051 759666 0) 0 nil])
([nil nil ((#("体" 0 1 (fontified t face font-lock-comment-face)) . -1152) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (#("面" 0 1 (fontified t face font-lock-comment-face)) . -1153) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("_" 0 1 (fontified t face font-lock-comment-face)) . -1154) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -1155) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1156) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -1157) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1158) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -1159) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1160) (undo-tree-id844 . -1) (#("." 0 1 (fontified t face font-lock-comment-face)) . -1161) (undo-tree-id845 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -1162) (undo-tree-id846 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -1163) (undo-tree-id847 . -1) (#("3" 0 1 (fontified t face font-lock-comment-face)) . -1164) (undo-tree-id848 . -1) 1165 (t 25742 61051 786161 841000)) nil (25745 17625 875490 0) 0 nil])
([nil nil ((1152 . 1161)) nil (25745 18656 776102 0) 0 nil])
([nil nil ((1163 . 1164)) ((#("g" 0 1 (fontified t)) . 1163) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (undo-tree-id890 . -1) (undo-tree-id892 . -1) (undo-tree-id894 . -1) (undo-tree-id896 . -1) (undo-tree-id898 . -1) (undo-tree-id900 . -1) (undo-tree-id902 . -1) (undo-tree-id904 . -1) (undo-tree-id906 . -1) (undo-tree-id908 . -1) (undo-tree-id910 . -1) (undo-tree-id912 . -1) (undo-tree-id914 . -1) (undo-tree-id916 . -1) (undo-tree-id918 . -1) (undo-tree-id920 . -1) (undo-tree-id922 . -1) (undo-tree-id924 . -1) (undo-tree-id926 . -1) (undo-tree-id928 . -1) (undo-tree-id930 . -1) (undo-tree-id932 . -1) (undo-tree-id934 . -1) (undo-tree-id936 . -1) (undo-tree-id938 . -1) (undo-tree-id940 . -1) (undo-tree-id942 . -1) (undo-tree-id944 . -1) (undo-tree-id946 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id982 . -1) (undo-tree-id984 . -1) (undo-tree-id986 . -1) (undo-tree-id988 . -1) (undo-tree-id990 . -1) (undo-tree-id992 . -1) (undo-tree-id994 . -1) (undo-tree-id996 . -1) (undo-tree-id998 . -1) (undo-tree-id1000 . -1) (undo-tree-id1002 . -1) (undo-tree-id1004 . -1) (undo-tree-id1006 . -1) (undo-tree-id1008 . -1) (undo-tree-id1010 . -1) (undo-tree-id1012 . -1) (undo-tree-id1014 . -1) (undo-tree-id1016 . -1) (undo-tree-id1018 . -1) (undo-tree-id1020 . -1) (undo-tree-id1022 . -1) (undo-tree-id1024 . -1) (undo-tree-id1026 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (undo-tree-id1050 . -1) (undo-tree-id1052 . -1) (undo-tree-id1054 . -1) (undo-tree-id1056 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1)) (25745 18657 572477 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1093) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("-" 0 1 (fontified t face font-lock-comment-face)) . -1094) (undo-tree-id1079 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1095) (undo-tree-id1080 . -1) 1096) nil (25745 18682 351541 0) 0 nil] [nil nil ((#("g" 0 1 (fontified t)) . -1163) (undo-tree-id669 . -1) (undo-tree-id671 . -1) (undo-tree-id673 . -1) (undo-tree-id675 . -1) (undo-tree-id677 . -1) (undo-tree-id679 . -1) (undo-tree-id681 . -1) (undo-tree-id683 . -1) (undo-tree-id685 . -1) (undo-tree-id687 . -1) (undo-tree-id689 . -1) (undo-tree-id691 . -1) (undo-tree-id693 . -1) (undo-tree-id695 . -1) (undo-tree-id697 . -1) (undo-tree-id699 . -1) (undo-tree-id701 . -1) (undo-tree-id703 . -1) (undo-tree-id705 . -1) (undo-tree-id707 . -1) (undo-tree-id709 . -1) (undo-tree-id711 . -1) (undo-tree-id713 . -1) (undo-tree-id715 . -1) (undo-tree-id717 . -1) (undo-tree-id719 . -1) (undo-tree-id721 . -1) (undo-tree-id723 . -1) (undo-tree-id725 . -1) (undo-tree-id727 . -1) (undo-tree-id729 . -1) (undo-tree-id731 . -1) (undo-tree-id733 . -1) (undo-tree-id735 . -1) (undo-tree-id737 . -1) (undo-tree-id739 . -1) (undo-tree-id741 . -1) (undo-tree-id743 . -1) (undo-tree-id745 . -1) (undo-tree-id747 . -1) (undo-tree-id749 . -1) (undo-tree-id751 . -1) (undo-tree-id753 . -1) (undo-tree-id755 . -1) (undo-tree-id757 . -1) (undo-tree-id759 . -1) (undo-tree-id761 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (undo-tree-id767 . -1) (undo-tree-id769 . -1) (undo-tree-id771 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) (undo-tree-id783 . -1) (undo-tree-id785 . -1) (undo-tree-id787 . -1) (undo-tree-id789 . -1) (undo-tree-id791 . -1) (undo-tree-id793 . -1) (undo-tree-id795 . -1) (undo-tree-id797 . -1) (undo-tree-id799 . -1) (undo-tree-id801 . -1) (undo-tree-id803 . -1) (undo-tree-id805 . -1) (undo-tree-id807 . -1) (undo-tree-id809 . -1) (undo-tree-id811 . -1) (undo-tree-id813 . -1) (undo-tree-id815 . -1) (undo-tree-id817 . -1) (undo-tree-id819 . -1) (undo-tree-id821 . -1) (undo-tree-id823 . -1) (undo-tree-id825 . -1) (undo-tree-id827 . -1) 1164) ((1163 . 1164)) (25745 18655 796681 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1122) (undo-tree-id1075 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -1123) (undo-tree-id1076 . -1) 1124) nil (25745 18682 351518 0) 0 nil])
([nil nil ((#("4" 0 1 (fontified t face font-lock-comment-face)) . -962) (undo-tree-id855 . -1) (#("5" 0 1 (fontified t face font-lock-comment-face)) . -963) (undo-tree-id856 . -1) 964 (t 25745 17625 903861 424000)) ((962 . 964)) (25745 18655 437737 0) 0 nil])
([nil nil ((1122 . 1124)) nil (25745 18682 351504 0) 0 nil])
([nil nil ((962 . 964)) ((#("25" 0 2 (fontified t face font-lock-comment-face)) . 962) (t 25745 18247 802874 426000)) (25745 18655 26994 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -1115) (undo-tree-id1074 . -1) 1116) nil (25745 18682 351498 0) 0 nil])
([nil nil ((#("-a " 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . -1094) (undo-tree-id859 . -3) (undo-tree-id860 . -3) (undo-tree-id861 . -3) 1097 (t 25745 18247 802874 426000)) ((1094 . 1097)) (25745 18655 25939 0) 0 nil] [nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1093) (undo-tree-id849 . -1) (#("-" 0 1 (fontified t face font-lock-comment-face)) . -1094) (undo-tree-id851 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1095) (undo-tree-id853 . -1) 1096) ((1093 . 1096) (t 25745 17734 969110 846000)) (25745 18244 396313 0) 0 nil])
([nil nil ((1115 . 1116)) nil (25745 18682 351488 0) 0 nil])
nil
([nil nil ((#("-shd -dm \"logs/44k/diffusion/model_250000.pt\" -dc \"configs/diffusion.yaml\"" 0 48 (fontified t face font-lock-comment-face) 48 74 (fontified t face font-lock-comment-face)) . -927) (undo-tree-id857 . -74) (undo-tree-id858 . -74) 1001 (t 25745 17734 969110 846000)) ((927 . 1001)) (25745 18244 395668 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-comment-face)) . -1112) (undo-tree-id1070 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -1113) (undo-tree-id1071 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -1114) (undo-tree-id1072 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -1115) (undo-tree-id1073 . -1) 1116) nil (25745 18682 351475 0) 0 nil])
nil
([nil nil ((1112 . 1115)) nil (25745 18682 351444 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -1131) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) 1132) nil (25745 18682 351424 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face font-lock-comment-face)) . -890) (undo-tree-id1085 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -891) (undo-tree-id1086 . -1) 892 (t 25745 18682 372101 189000)) nil (25745 18689 554723 0) 0 nil])
([nil nil ((890 . 892)) nil (25745 18714 486778 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1158) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) 1159 (t 25745 18715 836226 125000)) nil (25745 18716 874854 0) 0 nil] [nil nil ((#("4" 0 1 (fontified t face font-lock-comment-face)) . -962) (undo-tree-id1081 . -1) (#("5" 0 1 (fontified t face font-lock-comment-face)) . -963) (undo-tree-id1083 . -1) 964) ((962 . 964)) (25745 18714 774 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t face font-lock-comment-face)) . -891) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) 892 (t 25745 18716 895416 198000)) nil (25745 18738 87628 0) 0 nil])
([nil nil ((962 . 964)) ((#("30" 0 2 (fontified t face font-lock-comment-face)) . 962) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2) (undo-tree-id1130 . -2) (undo-tree-id1131 . -2) (undo-tree-id1132 . -2) (undo-tree-id1133 . -2) (undo-tree-id1134 . -2) (undo-tree-id1135 . -2) (undo-tree-id1136 . -2) (undo-tree-id1137 . -2) (undo-tree-id1138 . -2) (undo-tree-id1139 . -2) (undo-tree-id1140 . -2) (undo-tree-id1141 . -2) (undo-tree-id1142 . -2) (undo-tree-id1143 . -2) (undo-tree-id1144 . -2) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -2) (undo-tree-id1163 . -2) (undo-tree-id1164 . -2) (undo-tree-id1165 . -2) (undo-tree-id1166 . -2) (undo-tree-id1167 . -2) (undo-tree-id1168 . -2) (undo-tree-id1169 . -2) (undo-tree-id1170 . -2) (undo-tree-id1171 . -2) (undo-tree-id1172 . -2) (undo-tree-id1173 . -2) (undo-tree-id1174 . -2) (undo-tree-id1175 . -2) (undo-tree-id1176 . -2) (undo-tree-id1177 . -2) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (undo-tree-id1181 . -2) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -2) (undo-tree-id1186 . -2) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (undo-tree-id1189 . -2) (undo-tree-id1190 . -2) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -2) (undo-tree-id1203 . -2) (undo-tree-id1204 . -2) (undo-tree-id1205 . -2) (undo-tree-id1206 . -2) (undo-tree-id1207 . -2) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (undo-tree-id1265 . -2) (undo-tree-id1266 . -2) (undo-tree-id1267 . -2) (undo-tree-id1268 . -2) (undo-tree-id1269 . -2) (undo-tree-id1270 . -2) (undo-tree-id1271 . -2) (undo-tree-id1272 . -2) (undo-tree-id1273 . -2) (undo-tree-id1274 . -2) (undo-tree-id1275 . -2) (undo-tree-id1276 . -2) (undo-tree-id1277 . -2) (undo-tree-id1278 . -2) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) (undo-tree-id1281 . -2) (undo-tree-id1282 . -2) (undo-tree-id1283 . -2) (undo-tree-id1284 . -2) (undo-tree-id1285 . -2) (undo-tree-id1286 . -2) (undo-tree-id1287 . -2) (undo-tree-id1288 . -2) (undo-tree-id1289 . -2) (undo-tree-id1290 . -2) (undo-tree-id1291 . -2) (undo-tree-id1292 . -2) (undo-tree-id1293 . -2) (undo-tree-id1294 . -2) (undo-tree-id1295 . -2) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2) (undo-tree-id1298 . -2) (undo-tree-id1299 . -2) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) (undo-tree-id1302 . -2) (undo-tree-id1303 . -2) (undo-tree-id1304 . -2) (undo-tree-id1305 . -2) (undo-tree-id1306 . -2) (undo-tree-id1307 . -2) (undo-tree-id1308 . -2) (undo-tree-id1309 . -2) (undo-tree-id1310 . -2) (undo-tree-id1311 . -2) (undo-tree-id1312 . -2) (undo-tree-id1313 . -2) (undo-tree-id1314 . -2) (undo-tree-id1315 . -2) (undo-tree-id1316 . -2) (undo-tree-id1317 . -2) (undo-tree-id1318 . -2)) (25745 18713 643958 0) 0 nil])
([nil nil ((891 . 892)) nil (25745 18738 87584 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1158) (undo-tree-id1087 . -1) (undo-tree-id1089 . -1) 1159 (t 25745 18689 576579 368000)) ((1158 . 1159) (t 25745 18690 944709 471000)) (25745 18690 924146 0) 0 nil])
([nil nil ((206 . 218) (t 25745 18738 108014 386000)) nil (25752 65483 156171 0) 0 nil])
nil
([nil nil ((218 . 219)) nil (25752 65483 156150 0) 0 nil])
([nil nil ((219 . 221) (t 25752 65483 201223 6000)) nil (25752 65496 116035 0) 0 nil])
([nil nil ((221 . 231)) nil (25752 65496 116026 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -230) (undo-tree-id1578 . -1) 231) nil (25752 65496 116013 0) 0 nil])
([nil nil ((230 . 232)) nil (25752 65496 115966 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -201) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (#("-" 0 1 (fontified t face font-lock-comment-face)) . -202) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -203) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -204) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -205) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 206 (t 25752 65496 136704 455000)) nil (25754 30001 464780 0) 0 nil])
([nil nil ((2031 . 2032)) nil (25754 30001 464691 0) 0 nil])
([nil nil ((2032 . 2034)) nil (25754 30001 464683 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2055 . 2056) (nil fontified nil 2034 . 2056) (2034 . 2056)) nil (25754 30001 464672 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2034) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) 2035) nil (25754 30001 464656 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-comment-face)) . -2041) (undo-tree-id1584 . -1) 2042) nil (25754 30001 464630 0) 0 nil])
([nil nil ((2041 . 2043) (#("\"" 0 1 (fontified nil face font-lock-comment-face)) . -2041) (2041 . 2042)) nil (25754 30001 464609 0) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-comment-face)) . -2042) (undo-tree-id1583 . -1) 2043) nil (25754 30001 804626 0) 0 nil])
([nil nil ((2054 . 2055)) nil (25754 30049 696515 0) 0 nil] [nil nil ((#("\\" 0 1 (fontified nil face font-lock-comment-face)) . -2047) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#("\"" 0 1 (fontified t face font-lock-comment-face)) . -2048) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) 2049) ((2047 . 2049)) (25754 30001 464939 0) 0 nil])
([nil nil ((2065 . 2070) (2064 . 2066) (#("\"" 0 1 (fontified nil face font-lock-comment-face)) . -2064) (2055 . 2065)) nil (25754 30049 696507 0) 0 nil])
([nil nil ((2047 . 2048)) ((#("'" 0 1 (fontified t face font-lock-comment-face)) . 2047) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1)) (25754 30001 464487 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-comment-face)) . -2069) (undo-tree-id1639 . -1) 2070) nil (25754 30049 696497 0) 0 nil])
nil
([nil nil ((2069 . 2071)) nil (25754 30049 696486 0) 0 nil])
([nil nil ((2071 . 2075)) nil (25754 30049 696481 0) 0 nil])
([nil nil ((#("
# sed -e \"s/.*/\\\"&\\\"/'" 0 1 (fontified t) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 23 (fontified t face font-lock-comment-face)) . 2031) (undo-tree-id1636 . -23) (undo-tree-id1637 . -3) (undo-tree-id1638 . -23)) nil (25754 30049 696473 0) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified nil face font-lock-comment-face)) . 2053) (undo-tree-id1635 . -1) (2054 . 2055)) nil (25754 30049 696454 0) 0 nil])
([nil nil ((2054 . 2056)) nil (25754 30049 696443 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2079 . 2080) (nil fontified nil 2056 . 2080) (2056 . 2080)) nil (25754 30049 696436 0) 0 nil])
([nil nil ((#("$" 0 1 (fontified t face font-lock-comment-face)) . -2071) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) 2072) nil (25754 30049 696425 0) 0 nil])
([nil nil ((2071 . 2072)) nil (25754 30049 696412 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-comment-face)) . -2073) (undo-tree-id1632 . -1) 2074) nil (25754 30049 696404 0) 0 nil])
([nil nil ((2073 . 2077)) nil (25754 30049 696392 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -2079) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -2080) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -2081) (undo-tree-id1630 . -1) (#("m" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face)) . -2082) (undo-tree-id1631 . -1) 2083) nil (25754 30049 696363 0) 0 nil])
([nil nil ((2079 . 2080)) nil (25754 30049 696212 0) 0 nil])
([nil nil ((2053 . 2062) (t 25754 30049 794363 433000)) nil (25754 30055 715740 0) 0 nil])
([nil nil ((2088 . 2097)) nil (25754 30055 715714 0) 0 nil])
([nil nil ((#("sed -e \"s/.*/\\'&\\'\"" 0 7 (fontified t face font-lock-comment-face) 7 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face)) . 2034) (undo-tree-id1640 . -19) (undo-tree-id1641 . -19) 2038 (t 25754 30055 741868 311000)) nil (25754 30315 43938 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2052 . 2053) (nil fontified nil 2034 . 2053) (2034 . 2053)) nil (25754 30315 43892 0) 0 nil])
([nil nil ((2034 . 2035)) nil (25754 30315 43878 0) 0 nil])
([nil nil ((2087 . 2088)) nil (25754 30315 43860 0) 0 nil])
([nil nil ((2100 . 2101) (t 25754 30315 89545 935000)) nil (25754 30411 239455 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2100) (undo-tree-id1646 . -1) 2101) nil (25754 30411 239446 0) 0 nil])
([nil nil ((2100 . 2102)) nil (25754 30411 239434 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2118 . 2119) (nil fontified nil 2102 . 2119) (2102 . 2119)) nil (25754 30411 239427 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-comment-face)) . -2112) (undo-tree-id1645 . -1) 2113) nil (25754 30411 239418 0) 0 nil])
([nil nil ((2112 . 2114) (#("\"" 0 1 (fontified nil face font-lock-comment-face)) . -2112) (2112 . 2113)) nil (25754 30411 239405 0) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-comment-face)) . -2113) (undo-tree-id1644 . -1) 2114) nil (25754 30411 239395 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified nil face font-lock-comment-face)) . -2114) (undo-tree-id1642 . -1) (#("\"" 0 1 (fontified t face font-lock-comment-face)) . -2115) (undo-tree-id1643 . -1) 2116) nil (25754 30411 239379 0) 0 nil])
([nil nil ((2114 . 2115)) nil (25754 30411 239348 0) 0 nil])
([nil nil ((2112 . 2113)) nil (25754 30411 239338 0) 0 nil])
([nil nil ((2119 . 2128)) nil (25754 30411 239327 0) 0 nil])
([nil nil ((2128 . 2129) 2102) nil (25754 30411 239309 0) 0 nil])
([nil nil ((2128 . 2129) (t 25754 30411 282615 960000)) nil (25754 30446 184466 0) 0 nil])
([nil nil ((2129 . 2131)) nil (25754 30446 184449 0) 0 nil])
([nil current ((nil rear-nonsticky nil 2177 . 2178) (nil fontified nil 2131 . 2178) (2131 . 2178)) nil (25754 30446 184426 0) 0 nil])
nil
